ARM GAS  /tmp/cc20jRDa.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"misc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Lib/Src/misc.c"
  20              		.section	.text.NVIC_PriorityGroupConfig,"ax",%progbits
  21              		.align	1
  22              		.global	NVIC_PriorityGroupConfig
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NVIC_PriorityGroupConfig:
  28              	.LFB123:
   1:./Lib/Src/misc.c **** /**
   2:./Lib/Src/misc.c ****   ******************************************************************************
   3:./Lib/Src/misc.c ****   * @file    misc.c
   4:./Lib/Src/misc.c ****   * @author  MCD Application Team
   5:./Lib/Src/misc.c ****   * @version V1.8.1
   6:./Lib/Src/misc.c ****   * @date    27-January-2022
   7:./Lib/Src/misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:./Lib/Src/misc.c ****   *          to CMSIS functions).
   9:./Lib/Src/misc.c ****   *          
  10:./Lib/Src/misc.c ****   *  @verbatim   
  11:./Lib/Src/misc.c ****   *                               
  12:./Lib/Src/misc.c ****   *          ===================================================================      
  13:./Lib/Src/misc.c ****   *                        How to configure Interrupts using driver 
  14:./Lib/Src/misc.c ****   *          ===================================================================      
  15:./Lib/Src/misc.c ****   * 
  16:./Lib/Src/misc.c ****   *            This section provide functions allowing to configure the NVIC interrupts (IRQ).
  17:./Lib/Src/misc.c ****   *            The Cortex-M4 exceptions are managed by CMSIS functions.
  18:./Lib/Src/misc.c ****   *
  19:./Lib/Src/misc.c ****   *            1. Configure the NVIC Priority Grouping using NVIC_PriorityGroupConfig()
  20:./Lib/Src/misc.c ****   *                function according to the following table.
  21:./Lib/Src/misc.c ****  
  22:./Lib/Src/misc.c ****   *  The table below gives the allowed values of the pre-emption priority and subpriority according
  23:./Lib/Src/misc.c ****   *  to the Priority Grouping configuration performed by NVIC_PriorityGroupConfig function
  24:./Lib/Src/misc.c ****   *    ============================================================================================
  25:./Lib/Src/misc.c ****   *      NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |  
  26:./Lib/Src/misc.c ****   *    ============================================================================================
  27:./Lib/Src/misc.c ****   *     NVIC_PriorityGroup_0  |                0                  |            0-15             | 0
  28:./Lib/Src/misc.c ****   *                           |                                   |                             | 4
  29:./Lib/Src/misc.c ****   *    --------------------------------------------------------------------------------------------
  30:./Lib/Src/misc.c ****   *     NVIC_PriorityGroup_1  |                0-1                |            0-7              | 1
ARM GAS  /tmp/cc20jRDa.s 			page 2


  31:./Lib/Src/misc.c ****   *                           |                                   |                             | 3
  32:./Lib/Src/misc.c ****   *    --------------------------------------------------------------------------------------------
  33:./Lib/Src/misc.c ****   *     NVIC_PriorityGroup_2  |                0-3                |            0-3              | 2
  34:./Lib/Src/misc.c ****   *                           |                                   |                             | 2
  35:./Lib/Src/misc.c ****   *    --------------------------------------------------------------------------------------------
  36:./Lib/Src/misc.c ****   *     NVIC_PriorityGroup_3  |                0-7                |            0-1              | 3
  37:./Lib/Src/misc.c ****   *                           |                                   |                             | 1
  38:./Lib/Src/misc.c ****   *    --------------------------------------------------------------------------------------------
  39:./Lib/Src/misc.c ****   *     NVIC_PriorityGroup_4  |                0-15               |            0                | 4
  40:./Lib/Src/misc.c ****   *                           |                                   |                             | 0
  41:./Lib/Src/misc.c ****   *    ============================================================================================
  42:./Lib/Src/misc.c ****   *
  43:./Lib/Src/misc.c ****   *            2. Enable and Configure the priority of the selected IRQ Channels using NVIC_Init() 
  44:./Lib/Src/misc.c ****   *
  45:./Lib/Src/misc.c ****   * @note  When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
  46:./Lib/Src/misc.c ****   *        The pending IRQ priority will be managed only by the subpriority.
  47:./Lib/Src/misc.c ****   *
  48:./Lib/Src/misc.c ****   * @note  IRQ priority order (sorted by highest to lowest priority):
  49:./Lib/Src/misc.c ****   *         - Lowest pre-emption priority
  50:./Lib/Src/misc.c ****   *         - Lowest subpriority
  51:./Lib/Src/misc.c ****   *         - Lowest hardware priority (IRQ number)
  52:./Lib/Src/misc.c ****   *
  53:./Lib/Src/misc.c ****   *  @endverbatim
  54:./Lib/Src/misc.c ****   *
  55:./Lib/Src/misc.c ****   ******************************************************************************
  56:./Lib/Src/misc.c ****   * @attention
  57:./Lib/Src/misc.c ****   *
  58:./Lib/Src/misc.c ****   * Copyright (c) 2016 STMicroelectronics.
  59:./Lib/Src/misc.c ****   * All rights reserved.
  60:./Lib/Src/misc.c ****   *
  61:./Lib/Src/misc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  62:./Lib/Src/misc.c ****   * in the root directory of this software component.
  63:./Lib/Src/misc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  64:./Lib/Src/misc.c ****   *
  65:./Lib/Src/misc.c ****   ******************************************************************************
  66:./Lib/Src/misc.c ****   */
  67:./Lib/Src/misc.c **** 
  68:./Lib/Src/misc.c **** /* Includes ------------------------------------------------------------------*/
  69:./Lib/Src/misc.c **** #include "misc.h"
  70:./Lib/Src/misc.c **** 
  71:./Lib/Src/misc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  72:./Lib/Src/misc.c ****   * @{
  73:./Lib/Src/misc.c ****   */
  74:./Lib/Src/misc.c **** 
  75:./Lib/Src/misc.c **** /** @defgroup MISC 
  76:./Lib/Src/misc.c ****   * @brief MISC driver modules
  77:./Lib/Src/misc.c ****   * @{
  78:./Lib/Src/misc.c ****   */
  79:./Lib/Src/misc.c **** 
  80:./Lib/Src/misc.c **** /* Private typedef -----------------------------------------------------------*/
  81:./Lib/Src/misc.c **** /* Private define ------------------------------------------------------------*/
  82:./Lib/Src/misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  83:./Lib/Src/misc.c **** 
  84:./Lib/Src/misc.c **** /* Private macro -------------------------------------------------------------*/
  85:./Lib/Src/misc.c **** /* Private variables ---------------------------------------------------------*/
  86:./Lib/Src/misc.c **** /* Private function prototypes -----------------------------------------------*/
  87:./Lib/Src/misc.c **** /* Private functions ---------------------------------------------------------*/
ARM GAS  /tmp/cc20jRDa.s 			page 3


  88:./Lib/Src/misc.c **** 
  89:./Lib/Src/misc.c **** /** @defgroup MISC_Private_Functions
  90:./Lib/Src/misc.c ****   * @{
  91:./Lib/Src/misc.c ****   */
  92:./Lib/Src/misc.c **** 
  93:./Lib/Src/misc.c **** /**
  94:./Lib/Src/misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
  95:./Lib/Src/misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
  96:./Lib/Src/misc.c ****   *   This parameter can be one of the following values:
  97:./Lib/Src/misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
  98:./Lib/Src/misc.c ****   *                                4 bits for subpriority
  99:./Lib/Src/misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
 100:./Lib/Src/misc.c ****   *                                3 bits for subpriority
 101:./Lib/Src/misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
 102:./Lib/Src/misc.c ****   *                                2 bits for subpriority
 103:./Lib/Src/misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
 104:./Lib/Src/misc.c ****   *                                1 bits for subpriority
 105:./Lib/Src/misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
 106:./Lib/Src/misc.c ****   *                                0 bits for subpriority
 107:./Lib/Src/misc.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
 108:./Lib/Src/misc.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 109:./Lib/Src/misc.c ****   * @retval None
 110:./Lib/Src/misc.c ****   */
 111:./Lib/Src/misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
 112:./Lib/Src/misc.c **** {
  29              		.loc 1 112 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
 113:./Lib/Src/misc.c ****   /* Check the parameters */
 114:./Lib/Src/misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 115:./Lib/Src/misc.c ****   
 116:./Lib/Src/misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
 117:./Lib/Src/misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
  42              		.loc 1 117 6
  43 0008 064A     		ldr	r2, .L2
  44              		.loc 1 117 35
  45 000a 7B68     		ldr	r3, [r7, #4]
  46 000c 43F0BF63 		orr	r3, r3, #100139008
  47 0010 43F40033 		orr	r3, r3, #131072
  48              		.loc 1 117 14
  49 0014 D360     		str	r3, [r2, #12]
 118:./Lib/Src/misc.c **** }
  50              		.loc 1 118 1
  51 0016 00BF     		nop
  52 0018 0C37     		adds	r7, r7, #12
  53              		.cfi_def_cfa_offset 4
  54 001a BD46     		mov	sp, r7
ARM GAS  /tmp/cc20jRDa.s 			page 4


  55              		.cfi_def_cfa_register 13
  56              		@ sp needed
  57 001c 5DF8047B 		ldr	r7, [sp], #4
  58              		.cfi_restore 7
  59              		.cfi_def_cfa_offset 0
  60 0020 7047     		bx	lr
  61              	.L3:
  62 0022 00BF     		.align	2
  63              	.L2:
  64 0024 00ED00E0 		.word	-536810240
  65              		.cfi_endproc
  66              	.LFE123:
  68              		.section	.text.NVIC_Init,"ax",%progbits
  69              		.align	1
  70              		.global	NVIC_Init
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	NVIC_Init:
  76              	.LFB124:
 119:./Lib/Src/misc.c **** 
 120:./Lib/Src/misc.c **** /**
 121:./Lib/Src/misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
 122:./Lib/Src/misc.c ****   *         parameters in the NVIC_InitStruct.
 123:./Lib/Src/misc.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 124:./Lib/Src/misc.c ****   *         function should be called before. 
 125:./Lib/Src/misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
 126:./Lib/Src/misc.c ****   *         the configuration information for the specified NVIC peripheral.
 127:./Lib/Src/misc.c ****   * @retval None
 128:./Lib/Src/misc.c ****   */
 129:./Lib/Src/misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
 130:./Lib/Src/misc.c **** {
  77              		.loc 1 130 1
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 16
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82 0000 80B4     		push	{r7}
  83              		.cfi_def_cfa_offset 4
  84              		.cfi_offset 7, -4
  85 0002 85B0     		sub	sp, sp, #20
  86              		.cfi_def_cfa_offset 24
  87 0004 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
  89 0006 7860     		str	r0, [r7, #4]
 131:./Lib/Src/misc.c ****   uint8_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
  90              		.loc 1 131 11
  91 0008 0023     		movs	r3, #0
  92 000a FB73     		strb	r3, [r7, #15]
  93              		.loc 1 131 31
  94 000c 0023     		movs	r3, #0
  95 000e BB73     		strb	r3, [r7, #14]
  96              		.loc 1 131 46
  97 0010 0F23     		movs	r3, #15
  98 0012 7B73     		strb	r3, [r7, #13]
 132:./Lib/Src/misc.c ****   
 133:./Lib/Src/misc.c ****   /* Check the parameters */
ARM GAS  /tmp/cc20jRDa.s 			page 5


 134:./Lib/Src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 135:./Lib/Src/misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 136:./Lib/Src/misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 137:./Lib/Src/misc.c ****     
 138:./Lib/Src/misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  99              		.loc 1 138 22
 100 0014 7B68     		ldr	r3, [r7, #4]
 101 0016 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 102              		.loc 1 138 6
 103 0018 002B     		cmp	r3, #0
 104 001a 39D0     		beq	.L5
 139:./Lib/Src/misc.c ****   {
 140:./Lib/Src/misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
 141:./Lib/Src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
 105              		.loc 1 141 33
 106 001c 274B     		ldr	r3, .L8
 107 001e DB68     		ldr	r3, [r3, #12]
 108              		.loc 1 141 26
 109 0020 DB43     		mvns	r3, r3
 110              		.loc 1 141 61
 111 0022 1B0A     		lsrs	r3, r3, #8
 112 0024 DBB2     		uxtb	r3, r3
 113              		.loc 1 141 17
 114 0026 03F00703 		and	r3, r3, #7
 115 002a FB73     		strb	r3, [r7, #15]
 142:./Lib/Src/misc.c ****     tmppre = (0x4 - tmppriority);
 116              		.loc 1 142 12
 117 002c FB7B     		ldrb	r3, [r7, #15]
 118 002e C3F10403 		rsb	r3, r3, #4
 119 0032 BB73     		strb	r3, [r7, #14]
 143:./Lib/Src/misc.c ****     tmpsub = tmpsub >> tmppriority;
 120              		.loc 1 143 21
 121 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 122 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 123 0038 42FA03F3 		asr	r3, r2, r3
 124              		.loc 1 143 12
 125 003c 7B73     		strb	r3, [r7, #13]
 144:./Lib/Src/misc.c **** 
 145:./Lib/Src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 126              		.loc 1 145 34
 127 003e 7B68     		ldr	r3, [r7, #4]
 128 0040 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 129 0042 1A46     		mov	r2, r3
 130              		.loc 1 145 70
 131 0044 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 132 0046 02FA03F3 		lsl	r3, r2, r3
 133              		.loc 1 145 17
 134 004a FB73     		strb	r3, [r7, #15]
 146:./Lib/Src/misc.c ****     tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
 135              		.loc 1 146 46
 136 004c 7B68     		ldr	r3, [r7, #4]
 137 004e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 138              		.loc 1 146 21
 139 0050 7B7B     		ldrb	r3, [r7, #13]
 140 0052 1340     		ands	r3, r3, r2
 141 0054 DAB2     		uxtb	r2, r3
 142              		.loc 1 146 17
ARM GAS  /tmp/cc20jRDa.s 			page 6


 143 0056 FB7B     		ldrb	r3, [r7, #15]
 144 0058 1343     		orrs	r3, r3, r2
 145 005a FB73     		strb	r3, [r7, #15]
 147:./Lib/Src/misc.c ****         
 148:./Lib/Src/misc.c ****     tmppriority = tmppriority << 0x04;
 146              		.loc 1 148 17
 147 005c FB7B     		ldrb	r3, [r7, #15]
 148 005e 1B01     		lsls	r3, r3, #4
 149 0060 FB73     		strb	r3, [r7, #15]
 149:./Lib/Src/misc.c ****         
 150:./Lib/Src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 150              		.loc 1 150 9
 151 0062 174A     		ldr	r2, .L8+4
 152              		.loc 1 150 29
 153 0064 7B68     		ldr	r3, [r7, #4]
 154 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 155              		.loc 1 150 48
 156 0068 1344     		add	r3, r3, r2
 157 006a FA7B     		ldrb	r2, [r7, #15]
 158 006c 83F80023 		strb	r2, [r3, #768]
 151:./Lib/Src/misc.c ****     
 152:./Lib/Src/misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
 153:./Lib/Src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 154:./Lib/Src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 159              		.loc 1 154 41
 160 0070 7B68     		ldr	r3, [r7, #4]
 161 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 162              		.loc 1 154 59
 163 0074 03F01F03 		and	r3, r3, #31
 153:./Lib/Src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 164              		.loc 1 153 9
 165 0078 1149     		ldr	r1, .L8+4
 153:./Lib/Src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 166              		.loc 1 153 31
 167 007a 7A68     		ldr	r2, [r7, #4]
 168 007c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 153:./Lib/Src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 169              		.loc 1 153 49
 170 007e 5209     		lsrs	r2, r2, #5
 171 0080 D2B2     		uxtb	r2, r2
 172 0082 1046     		mov	r0, r2
 173              		.loc 1 154 22
 174 0084 0122     		movs	r2, #1
 175 0086 02FA03F3 		lsl	r3, r2, r3
 153:./Lib/Src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 176              		.loc 1 153 58
 177 008a 41F82030 		str	r3, [r1, r0, lsl #2]
 155:./Lib/Src/misc.c ****   }
 156:./Lib/Src/misc.c ****   else
 157:./Lib/Src/misc.c ****   {
 158:./Lib/Src/misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 159:./Lib/Src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 160:./Lib/Src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 161:./Lib/Src/misc.c ****   }
 162:./Lib/Src/misc.c **** }
 178              		.loc 1 162 1
 179 008e 0FE0     		b	.L7
ARM GAS  /tmp/cc20jRDa.s 			page 7


 180              	.L5:
 160:./Lib/Src/misc.c ****   }
 181              		.loc 1 160 41
 182 0090 7B68     		ldr	r3, [r7, #4]
 183 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 160:./Lib/Src/misc.c ****   }
 184              		.loc 1 160 59
 185 0094 03F01F03 		and	r3, r3, #31
 159:./Lib/Src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 186              		.loc 1 159 9
 187 0098 0949     		ldr	r1, .L8+4
 159:./Lib/Src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 188              		.loc 1 159 31
 189 009a 7A68     		ldr	r2, [r7, #4]
 190 009c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 159:./Lib/Src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 191              		.loc 1 159 49
 192 009e 5209     		lsrs	r2, r2, #5
 193 00a0 D2B2     		uxtb	r2, r2
 194 00a2 1046     		mov	r0, r2
 160:./Lib/Src/misc.c ****   }
 195              		.loc 1 160 22
 196 00a4 0122     		movs	r2, #1
 197 00a6 9A40     		lsls	r2, r2, r3
 159:./Lib/Src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 198              		.loc 1 159 58
 199 00a8 00F12003 		add	r3, r0, #32
 200 00ac 41F82320 		str	r2, [r1, r3, lsl #2]
 201              	.L7:
 202              		.loc 1 162 1
 203 00b0 00BF     		nop
 204 00b2 1437     		adds	r7, r7, #20
 205              		.cfi_def_cfa_offset 4
 206 00b4 BD46     		mov	sp, r7
 207              		.cfi_def_cfa_register 13
 208              		@ sp needed
 209 00b6 5DF8047B 		ldr	r7, [sp], #4
 210              		.cfi_restore 7
 211              		.cfi_def_cfa_offset 0
 212 00ba 7047     		bx	lr
 213              	.L9:
 214              		.align	2
 215              	.L8:
 216 00bc 00ED00E0 		.word	-536810240
 217 00c0 00E100E0 		.word	-536813312
 218              		.cfi_endproc
 219              	.LFE124:
 221              		.section	.text.NVIC_SetVectorTable,"ax",%progbits
 222              		.align	1
 223              		.global	NVIC_SetVectorTable
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 228              	NVIC_SetVectorTable:
 229              	.LFB125:
 163:./Lib/Src/misc.c **** 
 164:./Lib/Src/misc.c **** /**
ARM GAS  /tmp/cc20jRDa.s 			page 8


 165:./Lib/Src/misc.c ****   * @brief  Sets the vector table location and Offset.
 166:./Lib/Src/misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
 167:./Lib/Src/misc.c ****   *   This parameter can be one of the following values:
 168:./Lib/Src/misc.c ****   *     @arg NVIC_VectTab_RAM: Vector Table in internal SRAM.
 169:./Lib/Src/misc.c ****   *     @arg NVIC_VectTab_FLASH: Vector Table in internal FLASH.
 170:./Lib/Src/misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple of 0x200.
 171:./Lib/Src/misc.c ****   * @retval None
 172:./Lib/Src/misc.c ****   */
 173:./Lib/Src/misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 174:./Lib/Src/misc.c **** { 
 230              		.loc 1 174 1
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 8
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235 0000 80B4     		push	{r7}
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 7, -4
 238 0002 83B0     		sub	sp, sp, #12
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 242 0006 7860     		str	r0, [r7, #4]
 243 0008 3960     		str	r1, [r7]
 175:./Lib/Src/misc.c ****   /* Check the parameters */
 176:./Lib/Src/misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 177:./Lib/Src/misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 178:./Lib/Src/misc.c ****    
 179:./Lib/Src/misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 244              		.loc 1 179 38
 245 000a 3B68     		ldr	r3, [r7]
 246 000c 23F06043 		bic	r3, r3, #-536870912
 247 0010 23F07F03 		bic	r3, r3, #127
 248              		.loc 1 179 6
 249 0014 0449     		ldr	r1, .L11
 250              		.loc 1 179 28
 251 0016 7A68     		ldr	r2, [r7, #4]
 252 0018 1343     		orrs	r3, r3, r2
 253              		.loc 1 179 13
 254 001a 8B60     		str	r3, [r1, #8]
 180:./Lib/Src/misc.c **** }
 255              		.loc 1 180 1
 256 001c 00BF     		nop
 257 001e 0C37     		adds	r7, r7, #12
 258              		.cfi_def_cfa_offset 4
 259 0020 BD46     		mov	sp, r7
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 0022 5DF8047B 		ldr	r7, [sp], #4
 263              		.cfi_restore 7
 264              		.cfi_def_cfa_offset 0
 265 0026 7047     		bx	lr
 266              	.L12:
 267              		.align	2
 268              	.L11:
 269 0028 00ED00E0 		.word	-536810240
 270              		.cfi_endproc
ARM GAS  /tmp/cc20jRDa.s 			page 9


 271              	.LFE125:
 273              		.section	.text.NVIC_SystemLPConfig,"ax",%progbits
 274              		.align	1
 275              		.global	NVIC_SystemLPConfig
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	NVIC_SystemLPConfig:
 281              	.LFB126:
 181:./Lib/Src/misc.c **** 
 182:./Lib/Src/misc.c **** /**
 183:./Lib/Src/misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 184:./Lib/Src/misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 185:./Lib/Src/misc.c ****   *   This parameter can be one of the following values:
 186:./Lib/Src/misc.c ****   *     @arg NVIC_LP_SEVONPEND: Low Power SEV on Pend.
 187:./Lib/Src/misc.c ****   *     @arg NVIC_LP_SLEEPDEEP: Low Power DEEPSLEEP request.
 188:./Lib/Src/misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT: Low Power Sleep on Exit.
 189:./Lib/Src/misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 190:./Lib/Src/misc.c ****   * @retval None
 191:./Lib/Src/misc.c ****   */
 192:./Lib/Src/misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 193:./Lib/Src/misc.c **** {
 282              		.loc 1 193 1
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 8
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 0000 80B4     		push	{r7}
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 7, -4
 290 0002 83B0     		sub	sp, sp, #12
 291              		.cfi_def_cfa_offset 16
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 294 0006 0346     		mov	r3, r0
 295 0008 0A46     		mov	r2, r1
 296 000a FB71     		strb	r3, [r7, #7]
 297 000c 1346     		mov	r3, r2
 298 000e BB71     		strb	r3, [r7, #6]
 194:./Lib/Src/misc.c ****   /* Check the parameters */
 195:./Lib/Src/misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 196:./Lib/Src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 197:./Lib/Src/misc.c ****   
 198:./Lib/Src/misc.c ****   if (NewState != DISABLE)
 299              		.loc 1 198 6
 300 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 301 0012 002B     		cmp	r3, #0
 302 0014 06D0     		beq	.L14
 199:./Lib/Src/misc.c ****   {
 200:./Lib/Src/misc.c ****     SCB->SCR |= LowPowerMode;
 303              		.loc 1 200 8
 304 0016 0A4B     		ldr	r3, .L17
 305 0018 1A69     		ldr	r2, [r3, #16]
 306              		.loc 1 200 14
 307 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 308              		.loc 1 200 8
 309 001c 0849     		ldr	r1, .L17
ARM GAS  /tmp/cc20jRDa.s 			page 10


 310              		.loc 1 200 14
 311 001e 1343     		orrs	r3, r3, r2
 312 0020 0B61     		str	r3, [r1, #16]
 201:./Lib/Src/misc.c ****   }
 202:./Lib/Src/misc.c ****   else
 203:./Lib/Src/misc.c ****   {
 204:./Lib/Src/misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 205:./Lib/Src/misc.c ****   }
 206:./Lib/Src/misc.c **** }
 313              		.loc 1 206 1
 314 0022 06E0     		b	.L16
 315              	.L14:
 204:./Lib/Src/misc.c ****   }
 316              		.loc 1 204 8
 317 0024 064B     		ldr	r3, .L17
 318 0026 1A69     		ldr	r2, [r3, #16]
 204:./Lib/Src/misc.c ****   }
 319              		.loc 1 204 29
 320 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 204:./Lib/Src/misc.c ****   }
 321              		.loc 1 204 17
 322 002a DB43     		mvns	r3, r3
 204:./Lib/Src/misc.c ****   }
 323              		.loc 1 204 8
 324 002c 0449     		ldr	r1, .L17
 204:./Lib/Src/misc.c ****   }
 325              		.loc 1 204 14
 326 002e 1340     		ands	r3, r3, r2
 327 0030 0B61     		str	r3, [r1, #16]
 328              	.L16:
 329              		.loc 1 206 1
 330 0032 00BF     		nop
 331 0034 0C37     		adds	r7, r7, #12
 332              		.cfi_def_cfa_offset 4
 333 0036 BD46     		mov	sp, r7
 334              		.cfi_def_cfa_register 13
 335              		@ sp needed
 336 0038 5DF8047B 		ldr	r7, [sp], #4
 337              		.cfi_restore 7
 338              		.cfi_def_cfa_offset 0
 339 003c 7047     		bx	lr
 340              	.L18:
 341 003e 00BF     		.align	2
 342              	.L17:
 343 0040 00ED00E0 		.word	-536810240
 344              		.cfi_endproc
 345              	.LFE126:
 347              		.section	.text.SysTick_CLKSourceConfig,"ax",%progbits
 348              		.align	1
 349              		.global	SysTick_CLKSourceConfig
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 354              	SysTick_CLKSourceConfig:
 355              	.LFB127:
 207:./Lib/Src/misc.c **** 
 208:./Lib/Src/misc.c **** /**
ARM GAS  /tmp/cc20jRDa.s 			page 11


 209:./Lib/Src/misc.c ****   * @brief  Configures the SysTick clock source.
 210:./Lib/Src/misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 211:./Lib/Src/misc.c ****   *   This parameter can be one of the following values:
 212:./Lib/Src/misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 213:./Lib/Src/misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 214:./Lib/Src/misc.c ****   * @retval None
 215:./Lib/Src/misc.c ****   */
 216:./Lib/Src/misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 217:./Lib/Src/misc.c **** {
 356              		.loc 1 217 1
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 361 0000 80B4     		push	{r7}
 362              		.cfi_def_cfa_offset 4
 363              		.cfi_offset 7, -4
 364 0002 83B0     		sub	sp, sp, #12
 365              		.cfi_def_cfa_offset 16
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 368 0006 7860     		str	r0, [r7, #4]
 218:./Lib/Src/misc.c ****   /* Check the parameters */
 219:./Lib/Src/misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 220:./Lib/Src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 369              		.loc 1 220 6
 370 0008 7B68     		ldr	r3, [r7, #4]
 371 000a 042B     		cmp	r3, #4
 372 000c 06D1     		bne	.L20
 221:./Lib/Src/misc.c ****   {
 222:./Lib/Src/misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 373              		.loc 1 222 12
 374 000e 094B     		ldr	r3, .L23
 375 0010 1B68     		ldr	r3, [r3]
 376 0012 084A     		ldr	r2, .L23
 377              		.loc 1 222 19
 378 0014 43F00403 		orr	r3, r3, #4
 379 0018 1360     		str	r3, [r2]
 223:./Lib/Src/misc.c ****   }
 224:./Lib/Src/misc.c ****   else
 225:./Lib/Src/misc.c ****   {
 226:./Lib/Src/misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 227:./Lib/Src/misc.c ****   }
 228:./Lib/Src/misc.c **** }
 380              		.loc 1 228 1
 381 001a 05E0     		b	.L22
 382              	.L20:
 226:./Lib/Src/misc.c ****   }
 383              		.loc 1 226 12
 384 001c 054B     		ldr	r3, .L23
 385 001e 1B68     		ldr	r3, [r3]
 386 0020 044A     		ldr	r2, .L23
 226:./Lib/Src/misc.c ****   }
 387              		.loc 1 226 19
 388 0022 23F00403 		bic	r3, r3, #4
 389 0026 1360     		str	r3, [r2]
 390              	.L22:
ARM GAS  /tmp/cc20jRDa.s 			page 12


 391              		.loc 1 228 1
 392 0028 00BF     		nop
 393 002a 0C37     		adds	r7, r7, #12
 394              		.cfi_def_cfa_offset 4
 395 002c BD46     		mov	sp, r7
 396              		.cfi_def_cfa_register 13
 397              		@ sp needed
 398 002e 5DF8047B 		ldr	r7, [sp], #4
 399              		.cfi_restore 7
 400              		.cfi_def_cfa_offset 0
 401 0032 7047     		bx	lr
 402              	.L24:
 403              		.align	2
 404              	.L23:
 405 0034 10E000E0 		.word	-536813552
 406              		.cfi_endproc
 407              	.LFE127:
 409              		.text
 410              	.Letext0:
 411              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 412              		.file 3 "./Start/core_cm4.h"
 413              		.file 4 "./Start/stm32f4xx.h"
 414              		.file 5 "./Lib/inc/misc.h"
ARM GAS  /tmp/cc20jRDa.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 misc.c
     /tmp/cc20jRDa.s:21     .text.NVIC_PriorityGroupConfig:0000000000000000 $t
     /tmp/cc20jRDa.s:27     .text.NVIC_PriorityGroupConfig:0000000000000000 NVIC_PriorityGroupConfig
     /tmp/cc20jRDa.s:64     .text.NVIC_PriorityGroupConfig:0000000000000024 $d
     /tmp/cc20jRDa.s:69     .text.NVIC_Init:0000000000000000 $t
     /tmp/cc20jRDa.s:75     .text.NVIC_Init:0000000000000000 NVIC_Init
     /tmp/cc20jRDa.s:216    .text.NVIC_Init:00000000000000bc $d
     /tmp/cc20jRDa.s:222    .text.NVIC_SetVectorTable:0000000000000000 $t
     /tmp/cc20jRDa.s:228    .text.NVIC_SetVectorTable:0000000000000000 NVIC_SetVectorTable
     /tmp/cc20jRDa.s:269    .text.NVIC_SetVectorTable:0000000000000028 $d
     /tmp/cc20jRDa.s:274    .text.NVIC_SystemLPConfig:0000000000000000 $t
     /tmp/cc20jRDa.s:280    .text.NVIC_SystemLPConfig:0000000000000000 NVIC_SystemLPConfig
     /tmp/cc20jRDa.s:343    .text.NVIC_SystemLPConfig:0000000000000040 $d
     /tmp/cc20jRDa.s:348    .text.SysTick_CLKSourceConfig:0000000000000000 $t
     /tmp/cc20jRDa.s:354    .text.SysTick_CLKSourceConfig:0000000000000000 SysTick_CLKSourceConfig
     /tmp/cc20jRDa.s:405    .text.SysTick_CLKSourceConfig:0000000000000034 $d

NO UNDEFINED SYMBOLS
