ARM GAS  /tmp/ccQeurbH.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"sysTick.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Tools/Src/sysTick.c"
  20              		.section	.text.NVIC_SetPriority,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NVIC_SetPriority:
  27              	.LFB117:
  28              		.file 2 "./Start/core_cm4.h"
   1:./Start/core_cm4.h **** /**************************************************************************//**
   2:./Start/core_cm4.h ****  * @file     core_cm4.h
   3:./Start/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:./Start/core_cm4.h ****  * @version  V4.10
   5:./Start/core_cm4.h ****  * @date     18. March 2015
   6:./Start/core_cm4.h ****  *
   7:./Start/core_cm4.h ****  * @note
   8:./Start/core_cm4.h ****  *
   9:./Start/core_cm4.h ****  ******************************************************************************/
  10:./Start/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
  11:./Start/core_cm4.h **** 
  12:./Start/core_cm4.h ****    All rights reserved.
  13:./Start/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:./Start/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:./Start/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:./Start/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:./Start/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:./Start/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:./Start/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:./Start/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:./Start/core_cm4.h ****      to endorse or promote products derived from this software without
  22:./Start/core_cm4.h ****      specific prior written permission.
  23:./Start/core_cm4.h ****    *
  24:./Start/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:./Start/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:./Start/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:./Start/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:./Start/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:./Start/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:./Start/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
ARM GAS  /tmp/ccQeurbH.s 			page 2


  31:./Start/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:./Start/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:./Start/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:./Start/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:./Start/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:./Start/core_cm4.h **** 
  37:./Start/core_cm4.h **** 
  38:./Start/core_cm4.h **** #if defined ( __ICCARM__ )
  39:./Start/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:./Start/core_cm4.h **** #endif
  41:./Start/core_cm4.h **** 
  42:./Start/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  43:./Start/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  44:./Start/core_cm4.h **** 
  45:./Start/core_cm4.h **** #ifdef __cplusplus
  46:./Start/core_cm4.h ****  extern "C" {
  47:./Start/core_cm4.h **** #endif
  48:./Start/core_cm4.h **** 
  49:./Start/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:./Start/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:./Start/core_cm4.h **** 
  52:./Start/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:./Start/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:./Start/core_cm4.h **** 
  55:./Start/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:./Start/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:./Start/core_cm4.h **** 
  58:./Start/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:./Start/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:./Start/core_cm4.h ****  */
  61:./Start/core_cm4.h **** 
  62:./Start/core_cm4.h **** 
  63:./Start/core_cm4.h **** /*******************************************************************************
  64:./Start/core_cm4.h ****  *                 CMSIS definitions
  65:./Start/core_cm4.h ****  ******************************************************************************/
  66:./Start/core_cm4.h **** /** \ingroup Cortex_M4
  67:./Start/core_cm4.h ****   @{
  68:./Start/core_cm4.h ****  */
  69:./Start/core_cm4.h **** 
  70:./Start/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:./Start/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04)                                   /*!< [31:16] CMSIS HAL m
  72:./Start/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  73:./Start/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:./Start/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:./Start/core_cm4.h **** 
  76:./Start/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:./Start/core_cm4.h **** 
  78:./Start/core_cm4.h **** 
  79:./Start/core_cm4.h **** #if   defined ( __CC_ARM )
  80:./Start/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:./Start/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:./Start/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:./Start/core_cm4.h **** 
  84:./Start/core_cm4.h **** #elif defined ( __GNUC__ )
  85:./Start/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  86:./Start/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  87:./Start/core_cm4.h ****   #define __STATIC_INLINE  static inline
ARM GAS  /tmp/ccQeurbH.s 			page 3


  88:./Start/core_cm4.h **** 
  89:./Start/core_cm4.h **** #elif defined ( __ICCARM__ )
  90:./Start/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  91:./Start/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  92:./Start/core_cm4.h ****   #define __STATIC_INLINE  static inline
  93:./Start/core_cm4.h **** 
  94:./Start/core_cm4.h **** #elif defined ( __TMS470__ )
  95:./Start/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  96:./Start/core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:./Start/core_cm4.h **** 
  98:./Start/core_cm4.h **** #elif defined ( __TASKING__ )
  99:./Start/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:./Start/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:./Start/core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:./Start/core_cm4.h **** 
 103:./Start/core_cm4.h **** #elif defined ( __CSMC__ )
 104:./Start/core_cm4.h ****   #define __packed
 105:./Start/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 106:./Start/core_cm4.h ****   #define __INLINE         inline                                    /*use -pc99 on compile line !<
 107:./Start/core_cm4.h ****   #define __STATIC_INLINE  static inline
 108:./Start/core_cm4.h **** 
 109:./Start/core_cm4.h **** #endif
 110:./Start/core_cm4.h **** 
 111:./Start/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 112:./Start/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 113:./Start/core_cm4.h **** */
 114:./Start/core_cm4.h **** #if defined ( __CC_ARM )
 115:./Start/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 116:./Start/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:./Start/core_cm4.h ****       #define __FPU_USED       1
 118:./Start/core_cm4.h ****     #else
 119:./Start/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:./Start/core_cm4.h ****       #define __FPU_USED       0
 121:./Start/core_cm4.h ****     #endif
 122:./Start/core_cm4.h ****   #else
 123:./Start/core_cm4.h ****     #define __FPU_USED         0
 124:./Start/core_cm4.h ****   #endif
 125:./Start/core_cm4.h **** 
 126:./Start/core_cm4.h **** #elif defined ( __GNUC__ )
 127:./Start/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:./Start/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:./Start/core_cm4.h ****       #define __FPU_USED       1
 130:./Start/core_cm4.h ****     #else
 131:./Start/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 132:./Start/core_cm4.h ****       #define __FPU_USED       0
 133:./Start/core_cm4.h ****     #endif
 134:./Start/core_cm4.h ****   #else
 135:./Start/core_cm4.h ****     #define __FPU_USED         0
 136:./Start/core_cm4.h ****   #endif
 137:./Start/core_cm4.h **** 
 138:./Start/core_cm4.h **** #elif defined ( __ICCARM__ )
 139:./Start/core_cm4.h ****   #if defined __ARMVFP__
 140:./Start/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 141:./Start/core_cm4.h ****       #define __FPU_USED       1
 142:./Start/core_cm4.h ****     #else
 143:./Start/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 144:./Start/core_cm4.h ****       #define __FPU_USED       0
ARM GAS  /tmp/ccQeurbH.s 			page 4


 145:./Start/core_cm4.h ****     #endif
 146:./Start/core_cm4.h ****   #else
 147:./Start/core_cm4.h ****     #define __FPU_USED         0
 148:./Start/core_cm4.h ****   #endif
 149:./Start/core_cm4.h **** 
 150:./Start/core_cm4.h **** #elif defined ( __TMS470__ )
 151:./Start/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 152:./Start/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 153:./Start/core_cm4.h ****       #define __FPU_USED       1
 154:./Start/core_cm4.h ****     #else
 155:./Start/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 156:./Start/core_cm4.h ****       #define __FPU_USED       0
 157:./Start/core_cm4.h ****     #endif
 158:./Start/core_cm4.h ****   #else
 159:./Start/core_cm4.h ****     #define __FPU_USED         0
 160:./Start/core_cm4.h ****   #endif
 161:./Start/core_cm4.h **** 
 162:./Start/core_cm4.h **** #elif defined ( __TASKING__ )
 163:./Start/core_cm4.h ****   #if defined __FPU_VFP__
 164:./Start/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 165:./Start/core_cm4.h ****       #define __FPU_USED       1
 166:./Start/core_cm4.h ****     #else
 167:./Start/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 168:./Start/core_cm4.h ****       #define __FPU_USED       0
 169:./Start/core_cm4.h ****     #endif
 170:./Start/core_cm4.h ****   #else
 171:./Start/core_cm4.h ****     #define __FPU_USED         0
 172:./Start/core_cm4.h ****   #endif
 173:./Start/core_cm4.h **** 
 174:./Start/core_cm4.h **** #elif defined ( __CSMC__ )		/* Cosmic */
 175:./Start/core_cm4.h ****   #if ( __CSMC__ & 0x400)		// FPU present for parser
 176:./Start/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 177:./Start/core_cm4.h ****       #define __FPU_USED       1
 178:./Start/core_cm4.h ****     #else
 179:./Start/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 180:./Start/core_cm4.h ****       #define __FPU_USED       0
 181:./Start/core_cm4.h ****     #endif
 182:./Start/core_cm4.h ****   #else
 183:./Start/core_cm4.h ****     #define __FPU_USED         0
 184:./Start/core_cm4.h ****   #endif
 185:./Start/core_cm4.h **** #endif
 186:./Start/core_cm4.h **** 
 187:./Start/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 188:./Start/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 189:./Start/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 190:./Start/core_cm4.h **** #include <core_cmSimd.h>                 /* Compiler specific SIMD Intrinsics               */
 191:./Start/core_cm4.h **** 
 192:./Start/core_cm4.h **** #ifdef __cplusplus
 193:./Start/core_cm4.h **** }
 194:./Start/core_cm4.h **** #endif
 195:./Start/core_cm4.h **** 
 196:./Start/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 197:./Start/core_cm4.h **** 
 198:./Start/core_cm4.h **** #ifndef __CMSIS_GENERIC
 199:./Start/core_cm4.h **** 
 200:./Start/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 201:./Start/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
ARM GAS  /tmp/ccQeurbH.s 			page 5


 202:./Start/core_cm4.h **** 
 203:./Start/core_cm4.h **** #ifdef __cplusplus
 204:./Start/core_cm4.h ****  extern "C" {
 205:./Start/core_cm4.h **** #endif
 206:./Start/core_cm4.h **** 
 207:./Start/core_cm4.h **** /* check device defines and use defaults */
 208:./Start/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 209:./Start/core_cm4.h ****   #ifndef __CM4_REV
 210:./Start/core_cm4.h ****     #define __CM4_REV               0x0000
 211:./Start/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 212:./Start/core_cm4.h ****   #endif
 213:./Start/core_cm4.h **** 
 214:./Start/core_cm4.h ****   #ifndef __FPU_PRESENT
 215:./Start/core_cm4.h ****     #define __FPU_PRESENT             0
 216:./Start/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 217:./Start/core_cm4.h ****   #endif
 218:./Start/core_cm4.h **** 
 219:./Start/core_cm4.h ****   #ifndef __MPU_PRESENT
 220:./Start/core_cm4.h ****     #define __MPU_PRESENT             0
 221:./Start/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 222:./Start/core_cm4.h ****   #endif
 223:./Start/core_cm4.h **** 
 224:./Start/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 225:./Start/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 226:./Start/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 227:./Start/core_cm4.h ****   #endif
 228:./Start/core_cm4.h **** 
 229:./Start/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 230:./Start/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 231:./Start/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 232:./Start/core_cm4.h ****   #endif
 233:./Start/core_cm4.h **** #endif
 234:./Start/core_cm4.h **** 
 235:./Start/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 236:./Start/core_cm4.h **** /**
 237:./Start/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 238:./Start/core_cm4.h **** 
 239:./Start/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 240:./Start/core_cm4.h ****     \li to specify the access to peripheral variables.
 241:./Start/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 242:./Start/core_cm4.h **** */
 243:./Start/core_cm4.h **** #ifdef __cplusplus
 244:./Start/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 245:./Start/core_cm4.h **** #else
 246:./Start/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 247:./Start/core_cm4.h **** #endif
 248:./Start/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 249:./Start/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 250:./Start/core_cm4.h **** 
 251:./Start/core_cm4.h **** /*@} end of group Cortex_M4 */
 252:./Start/core_cm4.h **** 
 253:./Start/core_cm4.h **** 
 254:./Start/core_cm4.h **** 
 255:./Start/core_cm4.h **** /*******************************************************************************
 256:./Start/core_cm4.h ****  *                 Register Abstraction
 257:./Start/core_cm4.h ****   Core Register contain:
 258:./Start/core_cm4.h ****   - Core Register
ARM GAS  /tmp/ccQeurbH.s 			page 6


 259:./Start/core_cm4.h ****   - Core NVIC Register
 260:./Start/core_cm4.h ****   - Core SCB Register
 261:./Start/core_cm4.h ****   - Core SysTick Register
 262:./Start/core_cm4.h ****   - Core Debug Register
 263:./Start/core_cm4.h ****   - Core MPU Register
 264:./Start/core_cm4.h ****   - Core FPU Register
 265:./Start/core_cm4.h ****  ******************************************************************************/
 266:./Start/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 267:./Start/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 268:./Start/core_cm4.h **** */
 269:./Start/core_cm4.h **** 
 270:./Start/core_cm4.h **** /** \ingroup    CMSIS_core_register
 271:./Start/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 272:./Start/core_cm4.h ****     \brief  Core Register type definitions.
 273:./Start/core_cm4.h ****   @{
 274:./Start/core_cm4.h ****  */
 275:./Start/core_cm4.h **** 
 276:./Start/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 277:./Start/core_cm4.h ****  */
 278:./Start/core_cm4.h **** typedef union
 279:./Start/core_cm4.h **** {
 280:./Start/core_cm4.h ****   struct
 281:./Start/core_cm4.h ****   {
 282:./Start/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 283:./Start/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 284:./Start/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 285:./Start/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 286:./Start/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 287:./Start/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 288:./Start/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 289:./Start/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 290:./Start/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 291:./Start/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 292:./Start/core_cm4.h **** } APSR_Type;
 293:./Start/core_cm4.h **** 
 294:./Start/core_cm4.h **** /* APSR Register Definitions */
 295:./Start/core_cm4.h **** #define APSR_N_Pos                         31                                             /*!< APSR
 296:./Start/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 297:./Start/core_cm4.h **** 
 298:./Start/core_cm4.h **** #define APSR_Z_Pos                         30                                             /*!< APSR
 299:./Start/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 300:./Start/core_cm4.h **** 
 301:./Start/core_cm4.h **** #define APSR_C_Pos                         29                                             /*!< APSR
 302:./Start/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 303:./Start/core_cm4.h **** 
 304:./Start/core_cm4.h **** #define APSR_V_Pos                         28                                             /*!< APSR
 305:./Start/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 306:./Start/core_cm4.h **** 
 307:./Start/core_cm4.h **** #define APSR_Q_Pos                         27                                             /*!< APSR
 308:./Start/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 309:./Start/core_cm4.h **** 
 310:./Start/core_cm4.h **** #define APSR_GE_Pos                        16                                             /*!< APSR
 311:./Start/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 312:./Start/core_cm4.h **** 
 313:./Start/core_cm4.h **** 
 314:./Start/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 315:./Start/core_cm4.h ****  */
ARM GAS  /tmp/ccQeurbH.s 			page 7


 316:./Start/core_cm4.h **** typedef union
 317:./Start/core_cm4.h **** {
 318:./Start/core_cm4.h ****   struct
 319:./Start/core_cm4.h ****   {
 320:./Start/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 321:./Start/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 322:./Start/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 323:./Start/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 324:./Start/core_cm4.h **** } IPSR_Type;
 325:./Start/core_cm4.h **** 
 326:./Start/core_cm4.h **** /* IPSR Register Definitions */
 327:./Start/core_cm4.h **** #define IPSR_ISR_Pos                        0                                             /*!< IPSR
 328:./Start/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 329:./Start/core_cm4.h **** 
 330:./Start/core_cm4.h **** 
 331:./Start/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 332:./Start/core_cm4.h ****  */
 333:./Start/core_cm4.h **** typedef union
 334:./Start/core_cm4.h **** {
 335:./Start/core_cm4.h ****   struct
 336:./Start/core_cm4.h ****   {
 337:./Start/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 338:./Start/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 339:./Start/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 340:./Start/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 341:./Start/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 342:./Start/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 343:./Start/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 344:./Start/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 345:./Start/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 346:./Start/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 347:./Start/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 348:./Start/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 349:./Start/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 350:./Start/core_cm4.h **** } xPSR_Type;
 351:./Start/core_cm4.h **** 
 352:./Start/core_cm4.h **** /* xPSR Register Definitions */
 353:./Start/core_cm4.h **** #define xPSR_N_Pos                         31                                             /*!< xPSR
 354:./Start/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 355:./Start/core_cm4.h **** 
 356:./Start/core_cm4.h **** #define xPSR_Z_Pos                         30                                             /*!< xPSR
 357:./Start/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 358:./Start/core_cm4.h **** 
 359:./Start/core_cm4.h **** #define xPSR_C_Pos                         29                                             /*!< xPSR
 360:./Start/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 361:./Start/core_cm4.h **** 
 362:./Start/core_cm4.h **** #define xPSR_V_Pos                         28                                             /*!< xPSR
 363:./Start/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 364:./Start/core_cm4.h **** 
 365:./Start/core_cm4.h **** #define xPSR_Q_Pos                         27                                             /*!< xPSR
 366:./Start/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 367:./Start/core_cm4.h **** 
 368:./Start/core_cm4.h **** #define xPSR_IT_Pos                        25                                             /*!< xPSR
 369:./Start/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 370:./Start/core_cm4.h **** 
 371:./Start/core_cm4.h **** #define xPSR_T_Pos                         24                                             /*!< xPSR
 372:./Start/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
ARM GAS  /tmp/ccQeurbH.s 			page 8


 373:./Start/core_cm4.h **** 
 374:./Start/core_cm4.h **** #define xPSR_GE_Pos                        16                                             /*!< xPSR
 375:./Start/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 376:./Start/core_cm4.h **** 
 377:./Start/core_cm4.h **** #define xPSR_ISR_Pos                        0                                             /*!< xPSR
 378:./Start/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 379:./Start/core_cm4.h **** 
 380:./Start/core_cm4.h **** 
 381:./Start/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 382:./Start/core_cm4.h ****  */
 383:./Start/core_cm4.h **** typedef union
 384:./Start/core_cm4.h **** {
 385:./Start/core_cm4.h ****   struct
 386:./Start/core_cm4.h ****   {
 387:./Start/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 388:./Start/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 389:./Start/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 390:./Start/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 391:./Start/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 392:./Start/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 393:./Start/core_cm4.h **** } CONTROL_Type;
 394:./Start/core_cm4.h **** 
 395:./Start/core_cm4.h **** /* CONTROL Register Definitions */
 396:./Start/core_cm4.h **** #define CONTROL_FPCA_Pos                    2                                             /*!< CONT
 397:./Start/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 398:./Start/core_cm4.h **** 
 399:./Start/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1                                             /*!< CONT
 400:./Start/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 401:./Start/core_cm4.h **** 
 402:./Start/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0                                             /*!< CONT
 403:./Start/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 404:./Start/core_cm4.h **** 
 405:./Start/core_cm4.h **** /*@} end of group CMSIS_CORE */
 406:./Start/core_cm4.h **** 
 407:./Start/core_cm4.h **** 
 408:./Start/core_cm4.h **** /** \ingroup    CMSIS_core_register
 409:./Start/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 410:./Start/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 411:./Start/core_cm4.h ****   @{
 412:./Start/core_cm4.h ****  */
 413:./Start/core_cm4.h **** 
 414:./Start/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 415:./Start/core_cm4.h ****  */
 416:./Start/core_cm4.h **** typedef struct
 417:./Start/core_cm4.h **** {
 418:./Start/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 419:./Start/core_cm4.h ****        uint32_t RESERVED0[24];
 420:./Start/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 421:./Start/core_cm4.h ****        uint32_t RSERVED1[24];
 422:./Start/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 423:./Start/core_cm4.h ****        uint32_t RESERVED2[24];
 424:./Start/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 425:./Start/core_cm4.h ****        uint32_t RESERVED3[24];
 426:./Start/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 427:./Start/core_cm4.h ****        uint32_t RESERVED4[56];
 428:./Start/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 429:./Start/core_cm4.h ****        uint32_t RESERVED5[644];
ARM GAS  /tmp/ccQeurbH.s 			page 9


 430:./Start/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 431:./Start/core_cm4.h **** }  NVIC_Type;
 432:./Start/core_cm4.h **** 
 433:./Start/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 434:./Start/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 435:./Start/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 436:./Start/core_cm4.h **** 
 437:./Start/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 438:./Start/core_cm4.h **** 
 439:./Start/core_cm4.h **** 
 440:./Start/core_cm4.h **** /** \ingroup  CMSIS_core_register
 441:./Start/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 442:./Start/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 443:./Start/core_cm4.h ****   @{
 444:./Start/core_cm4.h ****  */
 445:./Start/core_cm4.h **** 
 446:./Start/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 447:./Start/core_cm4.h ****  */
 448:./Start/core_cm4.h **** typedef struct
 449:./Start/core_cm4.h **** {
 450:./Start/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 451:./Start/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 452:./Start/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 453:./Start/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 454:./Start/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 455:./Start/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 456:./Start/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 457:./Start/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 458:./Start/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 459:./Start/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 460:./Start/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 461:./Start/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 462:./Start/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 463:./Start/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 464:./Start/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 465:./Start/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 466:./Start/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 467:./Start/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 468:./Start/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 469:./Start/core_cm4.h ****        uint32_t RESERVED0[5];
 470:./Start/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 471:./Start/core_cm4.h **** } SCB_Type;
 472:./Start/core_cm4.h **** 
 473:./Start/core_cm4.h **** /* SCB CPUID Register Definitions */
 474:./Start/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 475:./Start/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 476:./Start/core_cm4.h **** 
 477:./Start/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 478:./Start/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 479:./Start/core_cm4.h **** 
 480:./Start/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 481:./Start/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 482:./Start/core_cm4.h **** 
 483:./Start/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 484:./Start/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 485:./Start/core_cm4.h **** 
 486:./Start/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
ARM GAS  /tmp/ccQeurbH.s 			page 10


 487:./Start/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 488:./Start/core_cm4.h **** 
 489:./Start/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 490:./Start/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 491:./Start/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 492:./Start/core_cm4.h **** 
 493:./Start/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 494:./Start/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 495:./Start/core_cm4.h **** 
 496:./Start/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 497:./Start/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 498:./Start/core_cm4.h **** 
 499:./Start/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 500:./Start/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 501:./Start/core_cm4.h **** 
 502:./Start/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 503:./Start/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 504:./Start/core_cm4.h **** 
 505:./Start/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 506:./Start/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 507:./Start/core_cm4.h **** 
 508:./Start/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 509:./Start/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 510:./Start/core_cm4.h **** 
 511:./Start/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 512:./Start/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 513:./Start/core_cm4.h **** 
 514:./Start/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 515:./Start/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 516:./Start/core_cm4.h **** 
 517:./Start/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 518:./Start/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 519:./Start/core_cm4.h **** 
 520:./Start/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 521:./Start/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 522:./Start/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 523:./Start/core_cm4.h **** 
 524:./Start/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 525:./Start/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 526:./Start/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 527:./Start/core_cm4.h **** 
 528:./Start/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 529:./Start/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 530:./Start/core_cm4.h **** 
 531:./Start/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 532:./Start/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 533:./Start/core_cm4.h **** 
 534:./Start/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 535:./Start/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 536:./Start/core_cm4.h **** 
 537:./Start/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 538:./Start/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 539:./Start/core_cm4.h **** 
 540:./Start/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 541:./Start/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 542:./Start/core_cm4.h **** 
 543:./Start/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
ARM GAS  /tmp/ccQeurbH.s 			page 11


 544:./Start/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 545:./Start/core_cm4.h **** 
 546:./Start/core_cm4.h **** /* SCB System Control Register Definitions */
 547:./Start/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 548:./Start/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 549:./Start/core_cm4.h **** 
 550:./Start/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 551:./Start/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 552:./Start/core_cm4.h **** 
 553:./Start/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 554:./Start/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 555:./Start/core_cm4.h **** 
 556:./Start/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 557:./Start/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 558:./Start/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 559:./Start/core_cm4.h **** 
 560:./Start/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 561:./Start/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 562:./Start/core_cm4.h **** 
 563:./Start/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 564:./Start/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 565:./Start/core_cm4.h **** 
 566:./Start/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 567:./Start/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 568:./Start/core_cm4.h **** 
 569:./Start/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 570:./Start/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 571:./Start/core_cm4.h **** 
 572:./Start/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 573:./Start/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 574:./Start/core_cm4.h **** 
 575:./Start/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 576:./Start/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 577:./Start/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 578:./Start/core_cm4.h **** 
 579:./Start/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 580:./Start/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 581:./Start/core_cm4.h **** 
 582:./Start/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 583:./Start/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 584:./Start/core_cm4.h **** 
 585:./Start/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 586:./Start/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 587:./Start/core_cm4.h **** 
 588:./Start/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 589:./Start/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 590:./Start/core_cm4.h **** 
 591:./Start/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 592:./Start/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 593:./Start/core_cm4.h **** 
 594:./Start/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 595:./Start/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 596:./Start/core_cm4.h **** 
 597:./Start/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 598:./Start/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 599:./Start/core_cm4.h **** 
 600:./Start/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
ARM GAS  /tmp/ccQeurbH.s 			page 12


 601:./Start/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 602:./Start/core_cm4.h **** 
 603:./Start/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 604:./Start/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 605:./Start/core_cm4.h **** 
 606:./Start/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 607:./Start/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 608:./Start/core_cm4.h **** 
 609:./Start/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 610:./Start/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 611:./Start/core_cm4.h **** 
 612:./Start/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 613:./Start/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 614:./Start/core_cm4.h **** 
 615:./Start/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 616:./Start/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 617:./Start/core_cm4.h **** 
 618:./Start/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 619:./Start/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 620:./Start/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 621:./Start/core_cm4.h **** 
 622:./Start/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 623:./Start/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 624:./Start/core_cm4.h **** 
 625:./Start/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 626:./Start/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 627:./Start/core_cm4.h **** 
 628:./Start/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 629:./Start/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 630:./Start/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 631:./Start/core_cm4.h **** 
 632:./Start/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 633:./Start/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 634:./Start/core_cm4.h **** 
 635:./Start/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 636:./Start/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 637:./Start/core_cm4.h **** 
 638:./Start/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 639:./Start/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 640:./Start/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 641:./Start/core_cm4.h **** 
 642:./Start/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 643:./Start/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 644:./Start/core_cm4.h **** 
 645:./Start/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 646:./Start/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 647:./Start/core_cm4.h **** 
 648:./Start/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 649:./Start/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 650:./Start/core_cm4.h **** 
 651:./Start/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 652:./Start/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 653:./Start/core_cm4.h **** 
 654:./Start/core_cm4.h **** /*@} end of group CMSIS_SCB */
 655:./Start/core_cm4.h **** 
 656:./Start/core_cm4.h **** 
 657:./Start/core_cm4.h **** /** \ingroup  CMSIS_core_register
ARM GAS  /tmp/ccQeurbH.s 			page 13


 658:./Start/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 659:./Start/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 660:./Start/core_cm4.h ****   @{
 661:./Start/core_cm4.h ****  */
 662:./Start/core_cm4.h **** 
 663:./Start/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 664:./Start/core_cm4.h ****  */
 665:./Start/core_cm4.h **** typedef struct
 666:./Start/core_cm4.h **** {
 667:./Start/core_cm4.h ****        uint32_t RESERVED0[1];
 668:./Start/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 669:./Start/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 670:./Start/core_cm4.h **** } SCnSCB_Type;
 671:./Start/core_cm4.h **** 
 672:./Start/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 673:./Start/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 674:./Start/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 675:./Start/core_cm4.h **** 
 676:./Start/core_cm4.h **** /* Auxiliary Control Register Definitions */
 677:./Start/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 678:./Start/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 679:./Start/core_cm4.h **** 
 680:./Start/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 681:./Start/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 682:./Start/core_cm4.h **** 
 683:./Start/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 684:./Start/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 685:./Start/core_cm4.h **** 
 686:./Start/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 687:./Start/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 688:./Start/core_cm4.h **** 
 689:./Start/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 690:./Start/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 691:./Start/core_cm4.h **** 
 692:./Start/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 693:./Start/core_cm4.h **** 
 694:./Start/core_cm4.h **** 
 695:./Start/core_cm4.h **** /** \ingroup  CMSIS_core_register
 696:./Start/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 697:./Start/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 698:./Start/core_cm4.h ****   @{
 699:./Start/core_cm4.h ****  */
 700:./Start/core_cm4.h **** 
 701:./Start/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 702:./Start/core_cm4.h ****  */
 703:./Start/core_cm4.h **** typedef struct
 704:./Start/core_cm4.h **** {
 705:./Start/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 706:./Start/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 707:./Start/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 708:./Start/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 709:./Start/core_cm4.h **** } SysTick_Type;
 710:./Start/core_cm4.h **** 
 711:./Start/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 712:./Start/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 713:./Start/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 714:./Start/core_cm4.h **** 
ARM GAS  /tmp/ccQeurbH.s 			page 14


 715:./Start/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 716:./Start/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 717:./Start/core_cm4.h **** 
 718:./Start/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 719:./Start/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 720:./Start/core_cm4.h **** 
 721:./Start/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 722:./Start/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 723:./Start/core_cm4.h **** 
 724:./Start/core_cm4.h **** /* SysTick Reload Register Definitions */
 725:./Start/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 726:./Start/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 727:./Start/core_cm4.h **** 
 728:./Start/core_cm4.h **** /* SysTick Current Register Definitions */
 729:./Start/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 730:./Start/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 731:./Start/core_cm4.h **** 
 732:./Start/core_cm4.h **** /* SysTick Calibration Register Definitions */
 733:./Start/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 734:./Start/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 735:./Start/core_cm4.h **** 
 736:./Start/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 737:./Start/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 738:./Start/core_cm4.h **** 
 739:./Start/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 740:./Start/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 741:./Start/core_cm4.h **** 
 742:./Start/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 743:./Start/core_cm4.h **** 
 744:./Start/core_cm4.h **** 
 745:./Start/core_cm4.h **** /** \ingroup  CMSIS_core_register
 746:./Start/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 747:./Start/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 748:./Start/core_cm4.h ****   @{
 749:./Start/core_cm4.h ****  */
 750:./Start/core_cm4.h **** 
 751:./Start/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 752:./Start/core_cm4.h ****  */
 753:./Start/core_cm4.h **** typedef struct
 754:./Start/core_cm4.h **** {
 755:./Start/core_cm4.h ****   __O  union
 756:./Start/core_cm4.h ****   {
 757:./Start/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 758:./Start/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 759:./Start/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 760:./Start/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 761:./Start/core_cm4.h ****        uint32_t RESERVED0[864];
 762:./Start/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 763:./Start/core_cm4.h ****        uint32_t RESERVED1[15];
 764:./Start/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 765:./Start/core_cm4.h ****        uint32_t RESERVED2[15];
 766:./Start/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 767:./Start/core_cm4.h ****        uint32_t RESERVED3[29];
 768:./Start/core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 769:./Start/core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 770:./Start/core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 771:./Start/core_cm4.h ****        uint32_t RESERVED4[43];
ARM GAS  /tmp/ccQeurbH.s 			page 15


 772:./Start/core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 773:./Start/core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 774:./Start/core_cm4.h ****        uint32_t RESERVED5[6];
 775:./Start/core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 776:./Start/core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 777:./Start/core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 778:./Start/core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 779:./Start/core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 780:./Start/core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 781:./Start/core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 782:./Start/core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 783:./Start/core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 784:./Start/core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 785:./Start/core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 786:./Start/core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 787:./Start/core_cm4.h **** } ITM_Type;
 788:./Start/core_cm4.h **** 
 789:./Start/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 790:./Start/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 791:./Start/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 792:./Start/core_cm4.h **** 
 793:./Start/core_cm4.h **** /* ITM Trace Control Register Definitions */
 794:./Start/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 795:./Start/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 796:./Start/core_cm4.h **** 
 797:./Start/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 798:./Start/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 799:./Start/core_cm4.h **** 
 800:./Start/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 801:./Start/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 802:./Start/core_cm4.h **** 
 803:./Start/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 804:./Start/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 805:./Start/core_cm4.h **** 
 806:./Start/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 807:./Start/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 808:./Start/core_cm4.h **** 
 809:./Start/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 810:./Start/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 811:./Start/core_cm4.h **** 
 812:./Start/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 813:./Start/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 814:./Start/core_cm4.h **** 
 815:./Start/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 816:./Start/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 817:./Start/core_cm4.h **** 
 818:./Start/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 819:./Start/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 820:./Start/core_cm4.h **** 
 821:./Start/core_cm4.h **** /* ITM Integration Write Register Definitions */
 822:./Start/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 823:./Start/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 824:./Start/core_cm4.h **** 
 825:./Start/core_cm4.h **** /* ITM Integration Read Register Definitions */
 826:./Start/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 827:./Start/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 828:./Start/core_cm4.h **** 
ARM GAS  /tmp/ccQeurbH.s 			page 16


 829:./Start/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 830:./Start/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 831:./Start/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 832:./Start/core_cm4.h **** 
 833:./Start/core_cm4.h **** /* ITM Lock Status Register Definitions */
 834:./Start/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 835:./Start/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 836:./Start/core_cm4.h **** 
 837:./Start/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 838:./Start/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 839:./Start/core_cm4.h **** 
 840:./Start/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 841:./Start/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 842:./Start/core_cm4.h **** 
 843:./Start/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 844:./Start/core_cm4.h **** 
 845:./Start/core_cm4.h **** 
 846:./Start/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:./Start/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 848:./Start/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 849:./Start/core_cm4.h ****   @{
 850:./Start/core_cm4.h ****  */
 851:./Start/core_cm4.h **** 
 852:./Start/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 853:./Start/core_cm4.h ****  */
 854:./Start/core_cm4.h **** typedef struct
 855:./Start/core_cm4.h **** {
 856:./Start/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 857:./Start/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 858:./Start/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 859:./Start/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 860:./Start/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 861:./Start/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 862:./Start/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 863:./Start/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 864:./Start/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 865:./Start/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 866:./Start/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 867:./Start/core_cm4.h ****        uint32_t RESERVED0[1];
 868:./Start/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 869:./Start/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 870:./Start/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 871:./Start/core_cm4.h ****        uint32_t RESERVED1[1];
 872:./Start/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 873:./Start/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 874:./Start/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 875:./Start/core_cm4.h ****        uint32_t RESERVED2[1];
 876:./Start/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 877:./Start/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 878:./Start/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 879:./Start/core_cm4.h **** } DWT_Type;
 880:./Start/core_cm4.h **** 
 881:./Start/core_cm4.h **** /* DWT Control Register Definitions */
 882:./Start/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 883:./Start/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 884:./Start/core_cm4.h **** 
 885:./Start/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
ARM GAS  /tmp/ccQeurbH.s 			page 17


 886:./Start/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 887:./Start/core_cm4.h **** 
 888:./Start/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 889:./Start/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 890:./Start/core_cm4.h **** 
 891:./Start/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 892:./Start/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 893:./Start/core_cm4.h **** 
 894:./Start/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 895:./Start/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 896:./Start/core_cm4.h **** 
 897:./Start/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 898:./Start/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 899:./Start/core_cm4.h **** 
 900:./Start/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 901:./Start/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 902:./Start/core_cm4.h **** 
 903:./Start/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 904:./Start/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 905:./Start/core_cm4.h **** 
 906:./Start/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 907:./Start/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 908:./Start/core_cm4.h **** 
 909:./Start/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 910:./Start/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 911:./Start/core_cm4.h **** 
 912:./Start/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 913:./Start/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 914:./Start/core_cm4.h **** 
 915:./Start/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 916:./Start/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 917:./Start/core_cm4.h **** 
 918:./Start/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 919:./Start/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 920:./Start/core_cm4.h **** 
 921:./Start/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 922:./Start/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 923:./Start/core_cm4.h **** 
 924:./Start/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 925:./Start/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 926:./Start/core_cm4.h **** 
 927:./Start/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 928:./Start/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 929:./Start/core_cm4.h **** 
 930:./Start/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 931:./Start/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 932:./Start/core_cm4.h **** 
 933:./Start/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 934:./Start/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 935:./Start/core_cm4.h **** 
 936:./Start/core_cm4.h **** /* DWT CPI Count Register Definitions */
 937:./Start/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 938:./Start/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 939:./Start/core_cm4.h **** 
 940:./Start/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 941:./Start/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 942:./Start/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
ARM GAS  /tmp/ccQeurbH.s 			page 18


 943:./Start/core_cm4.h **** 
 944:./Start/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 945:./Start/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 946:./Start/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 947:./Start/core_cm4.h **** 
 948:./Start/core_cm4.h **** /* DWT LSU Count Register Definitions */
 949:./Start/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 950:./Start/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 951:./Start/core_cm4.h **** 
 952:./Start/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 953:./Start/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 954:./Start/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 955:./Start/core_cm4.h **** 
 956:./Start/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 957:./Start/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 958:./Start/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 959:./Start/core_cm4.h **** 
 960:./Start/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 961:./Start/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 962:./Start/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 963:./Start/core_cm4.h **** 
 964:./Start/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 965:./Start/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 966:./Start/core_cm4.h **** 
 967:./Start/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 968:./Start/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 969:./Start/core_cm4.h **** 
 970:./Start/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 971:./Start/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 972:./Start/core_cm4.h **** 
 973:./Start/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 974:./Start/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 975:./Start/core_cm4.h **** 
 976:./Start/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 977:./Start/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 978:./Start/core_cm4.h **** 
 979:./Start/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 980:./Start/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 981:./Start/core_cm4.h **** 
 982:./Start/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 983:./Start/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 984:./Start/core_cm4.h **** 
 985:./Start/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 986:./Start/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 987:./Start/core_cm4.h **** 
 988:./Start/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 989:./Start/core_cm4.h **** 
 990:./Start/core_cm4.h **** 
 991:./Start/core_cm4.h **** /** \ingroup  CMSIS_core_register
 992:./Start/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 993:./Start/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 994:./Start/core_cm4.h ****   @{
 995:./Start/core_cm4.h ****  */
 996:./Start/core_cm4.h **** 
 997:./Start/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 998:./Start/core_cm4.h ****  */
 999:./Start/core_cm4.h **** typedef struct
ARM GAS  /tmp/ccQeurbH.s 			page 19


1000:./Start/core_cm4.h **** {
1001:./Start/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1002:./Start/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1003:./Start/core_cm4.h ****        uint32_t RESERVED0[2];
1004:./Start/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1005:./Start/core_cm4.h ****        uint32_t RESERVED1[55];
1006:./Start/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1007:./Start/core_cm4.h ****        uint32_t RESERVED2[131];
1008:./Start/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1009:./Start/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1010:./Start/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1011:./Start/core_cm4.h ****        uint32_t RESERVED3[759];
1012:./Start/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1013:./Start/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1014:./Start/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1015:./Start/core_cm4.h ****        uint32_t RESERVED4[1];
1016:./Start/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1017:./Start/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1018:./Start/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1019:./Start/core_cm4.h ****        uint32_t RESERVED5[39];
1020:./Start/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1021:./Start/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1022:./Start/core_cm4.h ****        uint32_t RESERVED7[8];
1023:./Start/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1024:./Start/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1025:./Start/core_cm4.h **** } TPI_Type;
1026:./Start/core_cm4.h **** 
1027:./Start/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1028:./Start/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
1029:./Start/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1030:./Start/core_cm4.h **** 
1031:./Start/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1032:./Start/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
1033:./Start/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1034:./Start/core_cm4.h **** 
1035:./Start/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1036:./Start/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
1037:./Start/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1038:./Start/core_cm4.h **** 
1039:./Start/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
1040:./Start/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1041:./Start/core_cm4.h **** 
1042:./Start/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
1043:./Start/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1044:./Start/core_cm4.h **** 
1045:./Start/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
1046:./Start/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1047:./Start/core_cm4.h **** 
1048:./Start/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1049:./Start/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
1050:./Start/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1051:./Start/core_cm4.h **** 
1052:./Start/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
1053:./Start/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1054:./Start/core_cm4.h **** 
1055:./Start/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1056:./Start/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
ARM GAS  /tmp/ccQeurbH.s 			page 20


1057:./Start/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1058:./Start/core_cm4.h **** 
1059:./Start/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1060:./Start/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1061:./Start/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1062:./Start/core_cm4.h **** 
1063:./Start/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1064:./Start/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1065:./Start/core_cm4.h **** 
1066:./Start/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1067:./Start/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1068:./Start/core_cm4.h **** 
1069:./Start/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1070:./Start/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1071:./Start/core_cm4.h **** 
1072:./Start/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
1073:./Start/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1074:./Start/core_cm4.h **** 
1075:./Start/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
1076:./Start/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1077:./Start/core_cm4.h **** 
1078:./Start/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
1079:./Start/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1080:./Start/core_cm4.h **** 
1081:./Start/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1082:./Start/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1083:./Start/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1084:./Start/core_cm4.h **** 
1085:./Start/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:./Start/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1087:./Start/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:./Start/core_cm4.h **** 
1089:./Start/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1090:./Start/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:./Start/core_cm4.h **** 
1092:./Start/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1093:./Start/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:./Start/core_cm4.h **** 
1095:./Start/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1096:./Start/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:./Start/core_cm4.h **** 
1098:./Start/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1099:./Start/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:./Start/core_cm4.h **** 
1101:./Start/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1102:./Start/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:./Start/core_cm4.h **** 
1104:./Start/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1105:./Start/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:./Start/core_cm4.h **** 
1107:./Start/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1108:./Start/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1109:./Start/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1110:./Start/core_cm4.h **** 
1111:./Start/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1112:./Start/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1113:./Start/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
ARM GAS  /tmp/ccQeurbH.s 			page 21


1114:./Start/core_cm4.h **** 
1115:./Start/core_cm4.h **** /* TPI DEVID Register Definitions */
1116:./Start/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1117:./Start/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1118:./Start/core_cm4.h **** 
1119:./Start/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1120:./Start/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1121:./Start/core_cm4.h **** 
1122:./Start/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1123:./Start/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1124:./Start/core_cm4.h **** 
1125:./Start/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1126:./Start/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1127:./Start/core_cm4.h **** 
1128:./Start/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1129:./Start/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1130:./Start/core_cm4.h **** 
1131:./Start/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1132:./Start/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1133:./Start/core_cm4.h **** 
1134:./Start/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1135:./Start/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1136:./Start/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1137:./Start/core_cm4.h **** 
1138:./Start/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1139:./Start/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:./Start/core_cm4.h **** 
1141:./Start/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1142:./Start/core_cm4.h **** 
1143:./Start/core_cm4.h **** 
1144:./Start/core_cm4.h **** #if (__MPU_PRESENT == 1)
1145:./Start/core_cm4.h **** /** \ingroup  CMSIS_core_register
1146:./Start/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1147:./Start/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1148:./Start/core_cm4.h ****   @{
1149:./Start/core_cm4.h ****  */
1150:./Start/core_cm4.h **** 
1151:./Start/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1152:./Start/core_cm4.h ****  */
1153:./Start/core_cm4.h **** typedef struct
1154:./Start/core_cm4.h **** {
1155:./Start/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1156:./Start/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1157:./Start/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1158:./Start/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1159:./Start/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1160:./Start/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1161:./Start/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1162:./Start/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1163:./Start/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1164:./Start/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1165:./Start/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1166:./Start/core_cm4.h **** } MPU_Type;
1167:./Start/core_cm4.h **** 
1168:./Start/core_cm4.h **** /* MPU Type Register */
1169:./Start/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1170:./Start/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
ARM GAS  /tmp/ccQeurbH.s 			page 22


1171:./Start/core_cm4.h **** 
1172:./Start/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1173:./Start/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1174:./Start/core_cm4.h **** 
1175:./Start/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1176:./Start/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1177:./Start/core_cm4.h **** 
1178:./Start/core_cm4.h **** /* MPU Control Register */
1179:./Start/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1180:./Start/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1181:./Start/core_cm4.h **** 
1182:./Start/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1183:./Start/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1184:./Start/core_cm4.h **** 
1185:./Start/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1186:./Start/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1187:./Start/core_cm4.h **** 
1188:./Start/core_cm4.h **** /* MPU Region Number Register */
1189:./Start/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1190:./Start/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1191:./Start/core_cm4.h **** 
1192:./Start/core_cm4.h **** /* MPU Region Base Address Register */
1193:./Start/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1194:./Start/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1195:./Start/core_cm4.h **** 
1196:./Start/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1197:./Start/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1198:./Start/core_cm4.h **** 
1199:./Start/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1200:./Start/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1201:./Start/core_cm4.h **** 
1202:./Start/core_cm4.h **** /* MPU Region Attribute and Size Register */
1203:./Start/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1204:./Start/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1205:./Start/core_cm4.h **** 
1206:./Start/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1207:./Start/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1208:./Start/core_cm4.h **** 
1209:./Start/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1210:./Start/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1211:./Start/core_cm4.h **** 
1212:./Start/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1213:./Start/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1214:./Start/core_cm4.h **** 
1215:./Start/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1216:./Start/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1217:./Start/core_cm4.h **** 
1218:./Start/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1219:./Start/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1220:./Start/core_cm4.h **** 
1221:./Start/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1222:./Start/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1223:./Start/core_cm4.h **** 
1224:./Start/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1225:./Start/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1226:./Start/core_cm4.h **** 
1227:./Start/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
ARM GAS  /tmp/ccQeurbH.s 			page 23


1228:./Start/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1229:./Start/core_cm4.h **** 
1230:./Start/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1231:./Start/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1232:./Start/core_cm4.h **** 
1233:./Start/core_cm4.h **** /*@} end of group CMSIS_MPU */
1234:./Start/core_cm4.h **** #endif
1235:./Start/core_cm4.h **** 
1236:./Start/core_cm4.h **** 
1237:./Start/core_cm4.h **** #if (__FPU_PRESENT == 1)
1238:./Start/core_cm4.h **** /** \ingroup  CMSIS_core_register
1239:./Start/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1240:./Start/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1241:./Start/core_cm4.h ****   @{
1242:./Start/core_cm4.h ****  */
1243:./Start/core_cm4.h **** 
1244:./Start/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1245:./Start/core_cm4.h ****  */
1246:./Start/core_cm4.h **** typedef struct
1247:./Start/core_cm4.h **** {
1248:./Start/core_cm4.h ****        uint32_t RESERVED0[1];
1249:./Start/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1250:./Start/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1251:./Start/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1252:./Start/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1253:./Start/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1254:./Start/core_cm4.h **** } FPU_Type;
1255:./Start/core_cm4.h **** 
1256:./Start/core_cm4.h **** /* Floating-Point Context Control Register */
1257:./Start/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1258:./Start/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1259:./Start/core_cm4.h **** 
1260:./Start/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1261:./Start/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1262:./Start/core_cm4.h **** 
1263:./Start/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1264:./Start/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1265:./Start/core_cm4.h **** 
1266:./Start/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1267:./Start/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1268:./Start/core_cm4.h **** 
1269:./Start/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1270:./Start/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1271:./Start/core_cm4.h **** 
1272:./Start/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1273:./Start/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1274:./Start/core_cm4.h **** 
1275:./Start/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1276:./Start/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1277:./Start/core_cm4.h **** 
1278:./Start/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1279:./Start/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1280:./Start/core_cm4.h **** 
1281:./Start/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1282:./Start/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1283:./Start/core_cm4.h **** 
1284:./Start/core_cm4.h **** /* Floating-Point Context Address Register */
ARM GAS  /tmp/ccQeurbH.s 			page 24


1285:./Start/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1286:./Start/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1287:./Start/core_cm4.h **** 
1288:./Start/core_cm4.h **** /* Floating-Point Default Status Control Register */
1289:./Start/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1290:./Start/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1291:./Start/core_cm4.h **** 
1292:./Start/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1293:./Start/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1294:./Start/core_cm4.h **** 
1295:./Start/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1296:./Start/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1297:./Start/core_cm4.h **** 
1298:./Start/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1299:./Start/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1300:./Start/core_cm4.h **** 
1301:./Start/core_cm4.h **** /* Media and FP Feature Register 0 */
1302:./Start/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1303:./Start/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1304:./Start/core_cm4.h **** 
1305:./Start/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1306:./Start/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1307:./Start/core_cm4.h **** 
1308:./Start/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1309:./Start/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1310:./Start/core_cm4.h **** 
1311:./Start/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1312:./Start/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1313:./Start/core_cm4.h **** 
1314:./Start/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1315:./Start/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1316:./Start/core_cm4.h **** 
1317:./Start/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1318:./Start/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1319:./Start/core_cm4.h **** 
1320:./Start/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1321:./Start/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1322:./Start/core_cm4.h **** 
1323:./Start/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1324:./Start/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1325:./Start/core_cm4.h **** 
1326:./Start/core_cm4.h **** /* Media and FP Feature Register 1 */
1327:./Start/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1328:./Start/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1329:./Start/core_cm4.h **** 
1330:./Start/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1331:./Start/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1332:./Start/core_cm4.h **** 
1333:./Start/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1334:./Start/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1335:./Start/core_cm4.h **** 
1336:./Start/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1337:./Start/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1338:./Start/core_cm4.h **** 
1339:./Start/core_cm4.h **** /*@} end of group CMSIS_FPU */
1340:./Start/core_cm4.h **** #endif
1341:./Start/core_cm4.h **** 
ARM GAS  /tmp/ccQeurbH.s 			page 25


1342:./Start/core_cm4.h **** 
1343:./Start/core_cm4.h **** /** \ingroup  CMSIS_core_register
1344:./Start/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1345:./Start/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1346:./Start/core_cm4.h ****   @{
1347:./Start/core_cm4.h ****  */
1348:./Start/core_cm4.h **** 
1349:./Start/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1350:./Start/core_cm4.h ****  */
1351:./Start/core_cm4.h **** typedef struct
1352:./Start/core_cm4.h **** {
1353:./Start/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1354:./Start/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1355:./Start/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1356:./Start/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1357:./Start/core_cm4.h **** } CoreDebug_Type;
1358:./Start/core_cm4.h **** 
1359:./Start/core_cm4.h **** /* Debug Halting Control and Status Register */
1360:./Start/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1361:./Start/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1362:./Start/core_cm4.h **** 
1363:./Start/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1364:./Start/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1365:./Start/core_cm4.h **** 
1366:./Start/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1367:./Start/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1368:./Start/core_cm4.h **** 
1369:./Start/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1370:./Start/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1371:./Start/core_cm4.h **** 
1372:./Start/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1373:./Start/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1374:./Start/core_cm4.h **** 
1375:./Start/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1376:./Start/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1377:./Start/core_cm4.h **** 
1378:./Start/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1379:./Start/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1380:./Start/core_cm4.h **** 
1381:./Start/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1382:./Start/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1383:./Start/core_cm4.h **** 
1384:./Start/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1385:./Start/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1386:./Start/core_cm4.h **** 
1387:./Start/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1388:./Start/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1389:./Start/core_cm4.h **** 
1390:./Start/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1391:./Start/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1392:./Start/core_cm4.h **** 
1393:./Start/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1394:./Start/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1395:./Start/core_cm4.h **** 
1396:./Start/core_cm4.h **** /* Debug Core Register Selector Register */
1397:./Start/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1398:./Start/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
ARM GAS  /tmp/ccQeurbH.s 			page 26


1399:./Start/core_cm4.h **** 
1400:./Start/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1401:./Start/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1402:./Start/core_cm4.h **** 
1403:./Start/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1404:./Start/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1405:./Start/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1406:./Start/core_cm4.h **** 
1407:./Start/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1408:./Start/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1409:./Start/core_cm4.h **** 
1410:./Start/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1411:./Start/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1412:./Start/core_cm4.h **** 
1413:./Start/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1414:./Start/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1415:./Start/core_cm4.h **** 
1416:./Start/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1417:./Start/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1418:./Start/core_cm4.h **** 
1419:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1420:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1421:./Start/core_cm4.h **** 
1422:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1423:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1424:./Start/core_cm4.h **** 
1425:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1426:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1427:./Start/core_cm4.h **** 
1428:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1429:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1430:./Start/core_cm4.h **** 
1431:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1432:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1433:./Start/core_cm4.h **** 
1434:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1435:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1436:./Start/core_cm4.h **** 
1437:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1438:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1439:./Start/core_cm4.h **** 
1440:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1441:./Start/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1442:./Start/core_cm4.h **** 
1443:./Start/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1444:./Start/core_cm4.h **** 
1445:./Start/core_cm4.h **** 
1446:./Start/core_cm4.h **** /** \ingroup    CMSIS_core_register
1447:./Start/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1448:./Start/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1449:./Start/core_cm4.h ****   @{
1450:./Start/core_cm4.h ****  */
1451:./Start/core_cm4.h **** 
1452:./Start/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1453:./Start/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1454:./Start/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1455:./Start/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
ARM GAS  /tmp/ccQeurbH.s 			page 27


1456:./Start/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1457:./Start/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1458:./Start/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1459:./Start/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1460:./Start/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1461:./Start/core_cm4.h **** 
1462:./Start/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1463:./Start/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1464:./Start/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1465:./Start/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1466:./Start/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1467:./Start/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1468:./Start/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1469:./Start/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1470:./Start/core_cm4.h **** 
1471:./Start/core_cm4.h **** #if (__MPU_PRESENT == 1)
1472:./Start/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1473:./Start/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1474:./Start/core_cm4.h **** #endif
1475:./Start/core_cm4.h **** 
1476:./Start/core_cm4.h **** #if (__FPU_PRESENT == 1)
1477:./Start/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1478:./Start/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1479:./Start/core_cm4.h **** #endif
1480:./Start/core_cm4.h **** 
1481:./Start/core_cm4.h **** /*@} */
1482:./Start/core_cm4.h **** 
1483:./Start/core_cm4.h **** 
1484:./Start/core_cm4.h **** 
1485:./Start/core_cm4.h **** /*******************************************************************************
1486:./Start/core_cm4.h ****  *                Hardware Abstraction Layer
1487:./Start/core_cm4.h ****   Core Function Interface contains:
1488:./Start/core_cm4.h ****   - Core NVIC Functions
1489:./Start/core_cm4.h ****   - Core SysTick Functions
1490:./Start/core_cm4.h ****   - Core Debug Functions
1491:./Start/core_cm4.h ****   - Core Register Access Functions
1492:./Start/core_cm4.h ****  ******************************************************************************/
1493:./Start/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1494:./Start/core_cm4.h **** */
1495:./Start/core_cm4.h **** 
1496:./Start/core_cm4.h **** 
1497:./Start/core_cm4.h **** 
1498:./Start/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1499:./Start/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1500:./Start/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1501:./Start/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1502:./Start/core_cm4.h ****     @{
1503:./Start/core_cm4.h ****  */
1504:./Start/core_cm4.h **** 
1505:./Start/core_cm4.h **** /** \brief  Set Priority Grouping
1506:./Start/core_cm4.h **** 
1507:./Start/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1508:./Start/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1509:./Start/core_cm4.h ****   Only values from 0..7 are used.
1510:./Start/core_cm4.h ****   In case of a conflict between priority grouping and available
1511:./Start/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1512:./Start/core_cm4.h **** 
ARM GAS  /tmp/ccQeurbH.s 			page 28


1513:./Start/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1514:./Start/core_cm4.h ****  */
1515:./Start/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1516:./Start/core_cm4.h **** {
1517:./Start/core_cm4.h ****   uint32_t reg_value;
1518:./Start/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1519:./Start/core_cm4.h **** 
1520:./Start/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1521:./Start/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk));             /* clear 
1522:./Start/core_cm4.h ****   reg_value  =  (reg_value                                   |
1523:./Start/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1524:./Start/core_cm4.h ****                 (PriorityGroupTmp << 8)                       );              /* Insert write key a
1525:./Start/core_cm4.h ****   SCB->AIRCR =  reg_value;
1526:./Start/core_cm4.h **** }
1527:./Start/core_cm4.h **** 
1528:./Start/core_cm4.h **** 
1529:./Start/core_cm4.h **** /** \brief  Get Priority Grouping
1530:./Start/core_cm4.h **** 
1531:./Start/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1532:./Start/core_cm4.h **** 
1533:./Start/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1534:./Start/core_cm4.h ****  */
1535:./Start/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1536:./Start/core_cm4.h **** {
1537:./Start/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1538:./Start/core_cm4.h **** }
1539:./Start/core_cm4.h **** 
1540:./Start/core_cm4.h **** 
1541:./Start/core_cm4.h **** /** \brief  Enable External Interrupt
1542:./Start/core_cm4.h **** 
1543:./Start/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1544:./Start/core_cm4.h **** 
1545:./Start/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1546:./Start/core_cm4.h ****  */
1547:./Start/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1548:./Start/core_cm4.h **** {
1549:./Start/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1550:./Start/core_cm4.h **** }
1551:./Start/core_cm4.h **** 
1552:./Start/core_cm4.h **** 
1553:./Start/core_cm4.h **** /** \brief  Disable External Interrupt
1554:./Start/core_cm4.h **** 
1555:./Start/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1556:./Start/core_cm4.h **** 
1557:./Start/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1558:./Start/core_cm4.h ****  */
1559:./Start/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1560:./Start/core_cm4.h **** {
1561:./Start/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1562:./Start/core_cm4.h **** }
1563:./Start/core_cm4.h **** 
1564:./Start/core_cm4.h **** 
1565:./Start/core_cm4.h **** /** \brief  Get Pending Interrupt
1566:./Start/core_cm4.h **** 
1567:./Start/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1568:./Start/core_cm4.h ****     for the specified interrupt.
1569:./Start/core_cm4.h **** 
ARM GAS  /tmp/ccQeurbH.s 			page 29


1570:./Start/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1571:./Start/core_cm4.h **** 
1572:./Start/core_cm4.h ****     \return             0  Interrupt status is not pending.
1573:./Start/core_cm4.h ****     \return             1  Interrupt status is pending.
1574:./Start/core_cm4.h ****  */
1575:./Start/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1576:./Start/core_cm4.h **** {
1577:./Start/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1578:./Start/core_cm4.h **** }
1579:./Start/core_cm4.h **** 
1580:./Start/core_cm4.h **** 
1581:./Start/core_cm4.h **** /** \brief  Set Pending Interrupt
1582:./Start/core_cm4.h **** 
1583:./Start/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1584:./Start/core_cm4.h **** 
1585:./Start/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1586:./Start/core_cm4.h ****  */
1587:./Start/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1588:./Start/core_cm4.h **** {
1589:./Start/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1590:./Start/core_cm4.h **** }
1591:./Start/core_cm4.h **** 
1592:./Start/core_cm4.h **** 
1593:./Start/core_cm4.h **** /** \brief  Clear Pending Interrupt
1594:./Start/core_cm4.h **** 
1595:./Start/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1596:./Start/core_cm4.h **** 
1597:./Start/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1598:./Start/core_cm4.h ****  */
1599:./Start/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1600:./Start/core_cm4.h **** {
1601:./Start/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1602:./Start/core_cm4.h **** }
1603:./Start/core_cm4.h **** 
1604:./Start/core_cm4.h **** 
1605:./Start/core_cm4.h **** /** \brief  Get Active Interrupt
1606:./Start/core_cm4.h **** 
1607:./Start/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1608:./Start/core_cm4.h **** 
1609:./Start/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1610:./Start/core_cm4.h **** 
1611:./Start/core_cm4.h ****     \return             0  Interrupt status is not active.
1612:./Start/core_cm4.h ****     \return             1  Interrupt status is active.
1613:./Start/core_cm4.h ****  */
1614:./Start/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1615:./Start/core_cm4.h **** {
1616:./Start/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1617:./Start/core_cm4.h **** }
1618:./Start/core_cm4.h **** 
1619:./Start/core_cm4.h **** 
1620:./Start/core_cm4.h **** /** \brief  Set Interrupt Priority
1621:./Start/core_cm4.h **** 
1622:./Start/core_cm4.h ****     The function sets the priority of an interrupt.
1623:./Start/core_cm4.h **** 
1624:./Start/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1625:./Start/core_cm4.h **** 
1626:./Start/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
ARM GAS  /tmp/ccQeurbH.s 			page 30


1627:./Start/core_cm4.h ****     \param [in]  priority  Priority to set.
1628:./Start/core_cm4.h ****  */
1629:./Start/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1630:./Start/core_cm4.h **** {
  29              		.loc 2 1630 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 3960     		str	r1, [r7]
  43 000a FB71     		strb	r3, [r7, #7]
1631:./Start/core_cm4.h ****   if((int32_t)IRQn < 0) {
  44              		.loc 2 1631 5
  45 000c 97F90730 		ldrsb	r3, [r7, #7]
  46 0010 002B     		cmp	r3, #0
  47 0012 0BDA     		bge	.L2
1632:./Start/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
  48              		.loc 2 1632 57
  49 0014 3B68     		ldr	r3, [r7]
  50 0016 DAB2     		uxtb	r2, r3
  51              		.loc 2 1632 8
  52 0018 0C49     		ldr	r1, .L5
  53              		.loc 2 1632 41
  54 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  55 001c 03F00F03 		and	r3, r3, #15
  56              		.loc 2 1632 49
  57 0020 043B     		subs	r3, r3, #4
  58              		.loc 2 1632 57
  59 0022 1201     		lsls	r2, r2, #4
  60 0024 D2B2     		uxtb	r2, r2
  61              		.loc 2 1632 55
  62 0026 0B44     		add	r3, r3, r1
  63 0028 1A76     		strb	r2, [r3, #24]
1633:./Start/core_cm4.h ****   }
1634:./Start/core_cm4.h ****   else {
1635:./Start/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
1636:./Start/core_cm4.h ****   }
1637:./Start/core_cm4.h **** }
  64              		.loc 2 1637 1
  65 002a 09E0     		b	.L4
  66              	.L2:
1635:./Start/core_cm4.h ****   }
  67              		.loc 2 1635 57
  68 002c 3B68     		ldr	r3, [r7]
  69 002e DAB2     		uxtb	r2, r3
1635:./Start/core_cm4.h ****   }
  70              		.loc 2 1635 9
  71 0030 0749     		ldr	r1, .L5+4
1635:./Start/core_cm4.h ****   }
ARM GAS  /tmp/ccQeurbH.s 			page 31


  72              		.loc 2 1635 15
  73 0032 97F90730 		ldrsb	r3, [r7, #7]
1635:./Start/core_cm4.h ****   }
  74              		.loc 2 1635 57
  75 0036 1201     		lsls	r2, r2, #4
  76 0038 D2B2     		uxtb	r2, r2
1635:./Start/core_cm4.h ****   }
  77              		.loc 2 1635 55
  78 003a 0B44     		add	r3, r3, r1
  79 003c 83F80023 		strb	r2, [r3, #768]
  80              	.L4:
  81              		.loc 2 1637 1
  82 0040 00BF     		nop
  83 0042 0C37     		adds	r7, r7, #12
  84              		.cfi_def_cfa_offset 4
  85 0044 BD46     		mov	sp, r7
  86              		.cfi_def_cfa_register 13
  87              		@ sp needed
  88 0046 5DF8047B 		ldr	r7, [sp], #4
  89              		.cfi_restore 7
  90              		.cfi_def_cfa_offset 0
  91 004a 7047     		bx	lr
  92              	.L6:
  93              		.align	2
  94              	.L5:
  95 004c 00ED00E0 		.word	-536810240
  96 0050 00E100E0 		.word	-536813312
  97              		.cfi_endproc
  98              	.LFE117:
 100              		.section	.text.SysTick_Config,"ax",%progbits
 101              		.align	1
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	SysTick_Config:
 107              	.LFB122:
1638:./Start/core_cm4.h **** 
1639:./Start/core_cm4.h **** 
1640:./Start/core_cm4.h **** /** \brief  Get Interrupt Priority
1641:./Start/core_cm4.h **** 
1642:./Start/core_cm4.h ****     The function reads the priority of an interrupt. The interrupt
1643:./Start/core_cm4.h ****     number can be positive to specify an external (device specific)
1644:./Start/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1645:./Start/core_cm4.h **** 
1646:./Start/core_cm4.h **** 
1647:./Start/core_cm4.h ****     \param [in]   IRQn  Interrupt number.
1648:./Start/core_cm4.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1649:./Start/core_cm4.h ****                         priority bits of the microcontroller.
1650:./Start/core_cm4.h ****  */
1651:./Start/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1652:./Start/core_cm4.h **** {
1653:./Start/core_cm4.h **** 
1654:./Start/core_cm4.h ****   if((int32_t)IRQn < 0) {
1655:./Start/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8 - __NVIC_PRIO_BITS)))
1656:./Start/core_cm4.h ****   }
1657:./Start/core_cm4.h ****   else {
1658:./Start/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8 - __NVIC_PRIO_BITS)))
ARM GAS  /tmp/ccQeurbH.s 			page 32


1659:./Start/core_cm4.h ****   }
1660:./Start/core_cm4.h **** }
1661:./Start/core_cm4.h **** 
1662:./Start/core_cm4.h **** 
1663:./Start/core_cm4.h **** /** \brief  Encode Priority
1664:./Start/core_cm4.h **** 
1665:./Start/core_cm4.h ****     The function encodes the priority for an interrupt with the given priority group,
1666:./Start/core_cm4.h ****     preemptive priority value, and subpriority value.
1667:./Start/core_cm4.h ****     In case of a conflict between priority grouping and available
1668:./Start/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1669:./Start/core_cm4.h **** 
1670:./Start/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1671:./Start/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1672:./Start/core_cm4.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1673:./Start/core_cm4.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1674:./Start/core_cm4.h ****  */
1675:./Start/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1676:./Start/core_cm4.h **** {
1677:./Start/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1678:./Start/core_cm4.h ****   uint32_t PreemptPriorityBits;
1679:./Start/core_cm4.h ****   uint32_t SubPriorityBits;
1680:./Start/core_cm4.h **** 
1681:./Start/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1682:./Start/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1683:./Start/core_cm4.h **** 
1684:./Start/core_cm4.h ****   return (
1685:./Start/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1686:./Start/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1687:./Start/core_cm4.h ****          );
1688:./Start/core_cm4.h **** }
1689:./Start/core_cm4.h **** 
1690:./Start/core_cm4.h **** 
1691:./Start/core_cm4.h **** /** \brief  Decode Priority
1692:./Start/core_cm4.h **** 
1693:./Start/core_cm4.h ****     The function decodes an interrupt priority value with a given priority group to
1694:./Start/core_cm4.h ****     preemptive priority value and subpriority value.
1695:./Start/core_cm4.h ****     In case of a conflict between priority grouping and available
1696:./Start/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1697:./Start/core_cm4.h **** 
1698:./Start/core_cm4.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
1699:./Start/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1700:./Start/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1701:./Start/core_cm4.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
1702:./Start/core_cm4.h ****  */
1703:./Start/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1704:./Start/core_cm4.h **** {
1705:./Start/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1706:./Start/core_cm4.h ****   uint32_t PreemptPriorityBits;
1707:./Start/core_cm4.h ****   uint32_t SubPriorityBits;
1708:./Start/core_cm4.h **** 
1709:./Start/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1710:./Start/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1711:./Start/core_cm4.h **** 
1712:./Start/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1713:./Start/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1714:./Start/core_cm4.h **** }
1715:./Start/core_cm4.h **** 
ARM GAS  /tmp/ccQeurbH.s 			page 33


1716:./Start/core_cm4.h **** 
1717:./Start/core_cm4.h **** /** \brief  System Reset
1718:./Start/core_cm4.h **** 
1719:./Start/core_cm4.h ****     The function initiates a system reset request to reset the MCU.
1720:./Start/core_cm4.h ****  */
1721:./Start/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1722:./Start/core_cm4.h **** {
1723:./Start/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1724:./Start/core_cm4.h ****                                                                        buffered write are completed
1725:./Start/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1726:./Start/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1727:./Start/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1728:./Start/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1729:./Start/core_cm4.h ****   while(1) { __NOP(); }                                             /* wait until reset */
1730:./Start/core_cm4.h **** }
1731:./Start/core_cm4.h **** 
1732:./Start/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1733:./Start/core_cm4.h **** 
1734:./Start/core_cm4.h **** 
1735:./Start/core_cm4.h **** 
1736:./Start/core_cm4.h **** /* ##################################    SysTick function  ########################################
1737:./Start/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1738:./Start/core_cm4.h ****     \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1739:./Start/core_cm4.h ****     \brief      Functions that configure the System.
1740:./Start/core_cm4.h ****   @{
1741:./Start/core_cm4.h ****  */
1742:./Start/core_cm4.h **** 
1743:./Start/core_cm4.h **** #if (__Vendor_SysTickConfig == 0)
1744:./Start/core_cm4.h **** 
1745:./Start/core_cm4.h **** /** \brief  System Tick Configuration
1746:./Start/core_cm4.h **** 
1747:./Start/core_cm4.h ****     The function initializes the System Timer and its interrupt, and starts the System Tick Timer.
1748:./Start/core_cm4.h ****     Counter is in free running mode to generate periodic interrupts.
1749:./Start/core_cm4.h **** 
1750:./Start/core_cm4.h ****     \param [in]  ticks  Number of ticks between two interrupts.
1751:./Start/core_cm4.h **** 
1752:./Start/core_cm4.h ****     \return          0  Function succeeded.
1753:./Start/core_cm4.h ****     \return          1  Function failed.
1754:./Start/core_cm4.h **** 
1755:./Start/core_cm4.h ****     \note     When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1756:./Start/core_cm4.h ****     function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
1757:./Start/core_cm4.h ****     must contain a vendor-specific implementation of this function.
1758:./Start/core_cm4.h **** 
1759:./Start/core_cm4.h ****  */
1760:./Start/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1761:./Start/core_cm4.h **** {
 108              		.loc 2 1761 1
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 8
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112 0000 80B5     		push	{r7, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 82B0     		sub	sp, sp, #8
 117              		.cfi_def_cfa_offset 16
 118 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccQeurbH.s 			page 34


 119              		.cfi_def_cfa_register 7
 120 0006 7860     		str	r0, [r7, #4]
1762:./Start/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk) { return (1UL); }    /* Reload value impossible */
 121              		.loc 2 1762 14
 122 0008 7B68     		ldr	r3, [r7, #4]
 123 000a 013B     		subs	r3, r3, #1
 124              		.loc 2 1762 6
 125 000c B3F1807F 		cmp	r3, #16777216
 126 0010 01D3     		bcc	.L8
 127              		.loc 2 1762 57 discriminator 1
 128 0012 0123     		movs	r3, #1
 129 0014 0FE0     		b	.L9
 130              	.L8:
1763:./Start/core_cm4.h **** 
1764:./Start/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 131              		.loc 2 1764 10
 132 0016 0A4A     		ldr	r2, .L10
 133              		.loc 2 1764 20
 134 0018 7B68     		ldr	r3, [r7, #4]
 135 001a 013B     		subs	r3, r3, #1
 136              		.loc 2 1764 18
 137 001c 5360     		str	r3, [r2, #4]
1765:./Start/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 138              		.loc 2 1765 3
 139 001e 0F21     		movs	r1, #15
 140 0020 4FF0FF30 		mov	r0, #-1
 141 0024 FFF7FEFF 		bl	NVIC_SetPriority
1766:./Start/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 142              		.loc 2 1766 10
 143 0028 054B     		ldr	r3, .L10
 144              		.loc 2 1766 18
 145 002a 0022     		movs	r2, #0
 146 002c 9A60     		str	r2, [r3, #8]
1767:./Start/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 147              		.loc 2 1767 10
 148 002e 044B     		ldr	r3, .L10
 149              		.loc 2 1767 18
 150 0030 0722     		movs	r2, #7
 151 0032 1A60     		str	r2, [r3]
1768:./Start/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
1769:./Start/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1770:./Start/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 152              		.loc 2 1770 10
 153 0034 0023     		movs	r3, #0
 154              	.L9:
1771:./Start/core_cm4.h **** }
 155              		.loc 2 1771 1
 156 0036 1846     		mov	r0, r3
 157 0038 0837     		adds	r7, r7, #8
 158              		.cfi_def_cfa_offset 8
 159 003a BD46     		mov	sp, r7
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 003c 80BD     		pop	{r7, pc}
 163              	.L11:
 164 003e 00BF     		.align	2
 165              	.L10:
ARM GAS  /tmp/ccQeurbH.s 			page 35


 166 0040 10E000E0 		.word	-536813552
 167              		.cfi_endproc
 168              	.LFE122:
 170              		.section	.bss.TimingDelay,"aw",%nobits
 171              		.align	2
 174              	TimingDelay:
 175 0000 00000000 		.space	4
 176              		.section	.bss.g_ul_ms_ticks,"aw",%nobits
 177              		.align	2
 180              	g_ul_ms_ticks:
 181 0000 00000000 		.space	4
 182              		.section	.text.SysTick_Init,"ax",%progbits
 183              		.align	1
 184              		.global	SysTick_Init
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 189              	SysTick_Init:
 190              	.LFB126:
   1:./Tools/Src/sysTick.c **** /**
   2:./Tools/Src/sysTick.c ****  ******************************************************************************
   3:./Tools/Src/sysTick.c ****  * @file    sysTick.c
   4:./Tools/Src/sysTick.c ****  * @version V1.0
   5:./Tools/Src/sysTick.c ****  * @date    2015-xx-xx
   6:./Tools/Src/sysTick.c ****  * @brief   SysTick 系统滴答时钟1ms中断函数库,中断时间可自由配置，
   7:./Tools/Src/sysTick.c ****  *          常用的有 1us 10us 1ms 中断。
   8:./Tools/Src/sysTick.c ****  */
   9:./Tools/Src/sysTick.c **** 
  10:./Tools/Src/sysTick.c **** #include "sysTick.h"
  11:./Tools/Src/sysTick.c **** //#include "ucos_ii.h"
  12:./Tools/Src/sysTick.c **** 
  13:./Tools/Src/sysTick.c **** static __IO u32 TimingDelay;
  14:./Tools/Src/sysTick.c **** static __IO uint32_t g_ul_ms_ticks = 0;
  15:./Tools/Src/sysTick.c **** 
  16:./Tools/Src/sysTick.c **** /**
  17:./Tools/Src/sysTick.c ****  * @brief  启动系统滴答定时器 SysTick
  18:./Tools/Src/sysTick.c ****  * @param  无
  19:./Tools/Src/sysTick.c ****  * @retval 无
  20:./Tools/Src/sysTick.c ****  */
  21:./Tools/Src/sysTick.c **** void SysTick_Init(void) {
 191              		.loc 1 21 25
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
  22:./Tools/Src/sysTick.c ****     /* SystemFrequency / 1000    1ms中断一次
  23:./Tools/Src/sysTick.c ****      * SystemFrequency / 100000	 10us中断一次
  24:./Tools/Src/sysTick.c ****      * SystemFrequency / 1000000 1us中断一次
  25:./Tools/Src/sysTick.c ****      */
  26:./Tools/Src/sysTick.c ****     if (SysTick_Config(SystemCoreClock / 1000)) {
 201              		.loc 1 26 40
 202 0004 084B     		ldr	r3, .L16
ARM GAS  /tmp/ccQeurbH.s 			page 36


 203 0006 1B68     		ldr	r3, [r3]
 204 0008 084A     		ldr	r2, .L16+4
 205 000a 82FB0312 		smull	r1, r2, r2, r3
 206 000e 9211     		asrs	r2, r2, #6
 207 0010 DB17     		asrs	r3, r3, #31
 208 0012 D31A     		subs	r3, r2, r3
 209              		.loc 1 26 9
 210 0014 1846     		mov	r0, r3
 211 0016 FFF7FEFF 		bl	SysTick_Config
 212 001a 0346     		mov	r3, r0
 213              		.loc 1 26 8
 214 001c 002B     		cmp	r3, #0
 215 001e 01D0     		beq	.L15
 216              	.L14:
  27:./Tools/Src/sysTick.c ****         /* Capture error */
  28:./Tools/Src/sysTick.c ****         while (1)
 217              		.loc 1 28 15 discriminator 1
 218 0020 00BF     		nop
 219 0022 FDE7     		b	.L14
 220              	.L15:
  29:./Tools/Src/sysTick.c ****             ;
  30:./Tools/Src/sysTick.c ****     }
  31:./Tools/Src/sysTick.c **** }
 221              		.loc 1 31 1
 222 0024 00BF     		nop
 223 0026 80BD     		pop	{r7, pc}
 224              	.L17:
 225              		.align	2
 226              	.L16:
 227 0028 00000000 		.word	SystemCoreClock
 228 002c D34D6210 		.word	274877907
 229              		.cfi_endproc
 230              	.LFE126:
 232              		.section	.text.Delay_s,"ax",%progbits
 233              		.align	1
 234              		.global	Delay_s
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 239              	Delay_s:
 240              	.LFB127:
  32:./Tools/Src/sysTick.c **** 
  33:./Tools/Src/sysTick.c **** /**
  34:./Tools/Src/sysTick.c ****  * @brief   us延时程序,1ms为一个单位
  35:./Tools/Src/sysTick.c ****  * @param
  36:./Tools/Src/sysTick.c ****  *		@arg nTime: Delay_ms( 1 ) 则实现的延时为 1 ms
  37:./Tools/Src/sysTick.c ****  * @retval  无
  38:./Tools/Src/sysTick.c ****  */
  39:./Tools/Src/sysTick.c **** 
  40:./Tools/Src/sysTick.c **** // void Delay_ms(__IO u32 nTime) {
  41:./Tools/Src/sysTick.c **** // 	TimingDelay = nTime;
  42:./Tools/Src/sysTick.c **** //     while (TimingDelay != 0)
  43:./Tools/Src/sysTick.c **** //         ;
  44:./Tools/Src/sysTick.c **** 	
  45:./Tools/Src/sysTick.c **** // }
  46:./Tools/Src/sysTick.c **** /**
  47:./Tools/Src/sysTick.c ****  * @brief   s延时程序
ARM GAS  /tmp/ccQeurbH.s 			page 37


  48:./Tools/Src/sysTick.c ****  * @param
  49:./Tools/Src/sysTick.c ****  *		@arg ms: Delay_s( 1 ) 则实现的延时为 1s
  50:./Tools/Src/sysTick.c ****  * @retval  无
  51:./Tools/Src/sysTick.c ****  */
  52:./Tools/Src/sysTick.c **** void Delay_s(unsigned int ms) {
 241              		.loc 1 52 31
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 16
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0000 80B5     		push	{r7, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 84B0     		sub	sp, sp, #16
 250              		.cfi_def_cfa_offset 24
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 253 0006 7860     		str	r0, [r7, #4]
  53:./Tools/Src/sysTick.c ****     unsigned char i;
  54:./Tools/Src/sysTick.c ****     for (i = 0; i < ms; ms--) {
 254              		.loc 1 54 12
 255 0008 0023     		movs	r3, #0
 256 000a FB73     		strb	r3, [r7, #15]
 257              		.loc 1 54 5
 258 000c 06E0     		b	.L19
 259              	.L20:
 260              	.LBB2:
  55:./Tools/Src/sysTick.c ****         Delay_ms(1000);
 261              		.loc 1 55 9 discriminator 3
 262 000e 4FF47A70 		mov	r0, #1000
 263 0012 FFF7FEFF 		bl	Delay_ms
 264              	.LBE2:
  54:./Tools/Src/sysTick.c ****         Delay_ms(1000);
 265              		.loc 1 54 27 discriminator 3
 266 0016 7B68     		ldr	r3, [r7, #4]
 267 0018 013B     		subs	r3, r3, #1
 268 001a 7B60     		str	r3, [r7, #4]
 269              	.L19:
  54:./Tools/Src/sysTick.c ****         Delay_ms(1000);
 270              		.loc 1 54 19 discriminator 1
 271 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 272 001e 7A68     		ldr	r2, [r7, #4]
 273 0020 9A42     		cmp	r2, r3
 274 0022 F4D8     		bhi	.L20
  56:./Tools/Src/sysTick.c ****     }
  57:./Tools/Src/sysTick.c **** }
 275              		.loc 1 57 1
 276 0024 00BF     		nop
 277 0026 00BF     		nop
 278 0028 1037     		adds	r7, r7, #16
 279              		.cfi_def_cfa_offset 8
 280 002a BD46     		mov	sp, r7
 281              		.cfi_def_cfa_register 13
 282              		@ sp needed
 283 002c 80BD     		pop	{r7, pc}
 284              		.cfi_endproc
 285              	.LFE127:
ARM GAS  /tmp/ccQeurbH.s 			page 38


 287              		.section	.text.TimingDelay_Decrement,"ax",%progbits
 288              		.align	1
 289              		.global	TimingDelay_Decrement
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 294              	TimingDelay_Decrement:
 295              	.LFB128:
  58:./Tools/Src/sysTick.c **** 
  59:./Tools/Src/sysTick.c **** /**
  60:./Tools/Src/sysTick.c ****  * @brief  获取节拍程序
  61:./Tools/Src/sysTick.c ****  * @param  无
  62:./Tools/Src/sysTick.c ****  * @retval 无
  63:./Tools/Src/sysTick.c ****  * @attention  在 SysTick 中断函数 SysTick_Handler()调用
  64:./Tools/Src/sysTick.c ****  */
  65:./Tools/Src/sysTick.c **** void TimingDelay_Decrement(void) {
 296              		.loc 1 65 34
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301 0000 80B4     		push	{r7}
 302              		.cfi_def_cfa_offset 4
 303              		.cfi_offset 7, -4
 304 0002 00AF     		add	r7, sp, #0
 305              		.cfi_def_cfa_register 7
  66:./Tools/Src/sysTick.c ****     if (TimingDelay != 0x00) {
 306              		.loc 1 66 21
 307 0004 064B     		ldr	r3, .L24
 308 0006 1B68     		ldr	r3, [r3]
 309              		.loc 1 66 8
 310 0008 002B     		cmp	r3, #0
 311 000a 04D0     		beq	.L23
  67:./Tools/Src/sysTick.c ****         TimingDelay--;
 312              		.loc 1 67 20
 313 000c 044B     		ldr	r3, .L24
 314 000e 1B68     		ldr	r3, [r3]
 315 0010 013B     		subs	r3, r3, #1
 316 0012 034A     		ldr	r2, .L24
 317 0014 1360     		str	r3, [r2]
 318              	.L23:
  68:./Tools/Src/sysTick.c ****     }
  69:./Tools/Src/sysTick.c **** }
 319              		.loc 1 69 1
 320 0016 00BF     		nop
 321 0018 BD46     		mov	sp, r7
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 001a 5DF8047B 		ldr	r7, [sp], #4
 325              		.cfi_restore 7
 326              		.cfi_def_cfa_offset 0
 327 001e 7047     		bx	lr
 328              	.L25:
 329              		.align	2
 330              	.L24:
 331 0020 00000000 		.word	TimingDelay
 332              		.cfi_endproc
ARM GAS  /tmp/ccQeurbH.s 			page 39


 333              	.LFE128:
 335              		.section	.text.get_tick_count,"ax",%progbits
 336              		.align	1
 337              		.global	get_tick_count
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	get_tick_count:
 343              	.LFB129:
  70:./Tools/Src/sysTick.c **** 
  71:./Tools/Src/sysTick.c **** /**
  72:./Tools/Src/sysTick.c ****  * @brief  获取当前毫秒值
  73:./Tools/Src/sysTick.c ****  * @param  存储最新毫秒值的变量
  74:./Tools/Src/sysTick.c ****  * @retval 无
  75:./Tools/Src/sysTick.c ****  */
  76:./Tools/Src/sysTick.c **** int get_tick_count(unsigned long *count) {
 344              		.loc 1 76 42
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 8
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349 0000 80B4     		push	{r7}
 350              		.cfi_def_cfa_offset 4
 351              		.cfi_offset 7, -4
 352 0002 83B0     		sub	sp, sp, #12
 353              		.cfi_def_cfa_offset 16
 354 0004 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 356 0006 7860     		str	r0, [r7, #4]
  77:./Tools/Src/sysTick.c ****     count[0] = g_ul_ms_ticks;
 357              		.loc 1 77 14
 358 0008 054B     		ldr	r3, .L28
 359 000a 1A68     		ldr	r2, [r3]
 360 000c 7B68     		ldr	r3, [r7, #4]
 361 000e 1A60     		str	r2, [r3]
  78:./Tools/Src/sysTick.c ****     return 0;
 362              		.loc 1 78 12
 363 0010 0023     		movs	r3, #0
  79:./Tools/Src/sysTick.c **** }
 364              		.loc 1 79 1
 365 0012 1846     		mov	r0, r3
 366 0014 0C37     		adds	r7, r7, #12
 367              		.cfi_def_cfa_offset 4
 368 0016 BD46     		mov	sp, r7
 369              		.cfi_def_cfa_register 13
 370              		@ sp needed
 371 0018 5DF8047B 		ldr	r7, [sp], #4
 372              		.cfi_restore 7
 373              		.cfi_def_cfa_offset 0
 374 001c 7047     		bx	lr
 375              	.L29:
 376 001e 00BF     		.align	2
 377              	.L28:
 378 0020 00000000 		.word	g_ul_ms_ticks
 379              		.cfi_endproc
 380              	.LFE129:
 382              		.section	.text.TimeStamp_Increment,"ax",%progbits
ARM GAS  /tmp/ccQeurbH.s 			page 40


 383              		.align	1
 384              		.global	TimeStamp_Increment
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 389              	TimeStamp_Increment:
 390              	.LFB130:
  80:./Tools/Src/sysTick.c **** 
  81:./Tools/Src/sysTick.c **** /**
  82:./Tools/Src/sysTick.c ****  * @brief  毫秒累加器，在中断里每毫秒加1
  83:./Tools/Src/sysTick.c ****  * @param  无
  84:./Tools/Src/sysTick.c ****  * @retval 无
  85:./Tools/Src/sysTick.c ****  */
  86:./Tools/Src/sysTick.c **** void TimeStamp_Increment(void) { g_ul_ms_ticks++; }
 391              		.loc 1 86 32
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396 0000 80B4     		push	{r7}
 397              		.cfi_def_cfa_offset 4
 398              		.cfi_offset 7, -4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 401              		.loc 1 86 47
 402 0004 044B     		ldr	r3, .L31
 403 0006 1B68     		ldr	r3, [r3]
 404 0008 0133     		adds	r3, r3, #1
 405 000a 034A     		ldr	r2, .L31
 406 000c 1360     		str	r3, [r2]
 407              		.loc 1 86 51
 408 000e 00BF     		nop
 409 0010 BD46     		mov	sp, r7
 410              		.cfi_def_cfa_register 13
 411              		@ sp needed
 412 0012 5DF8047B 		ldr	r7, [sp], #4
 413              		.cfi_restore 7
 414              		.cfi_def_cfa_offset 0
 415 0016 7047     		bx	lr
 416              	.L32:
 417              		.align	2
 418              	.L31:
 419 0018 00000000 		.word	g_ul_ms_ticks
 420              		.cfi_endproc
 421              	.LFE130:
 423              		.text
 424              	.Letext0:
 425              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 426              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 427              		.file 5 "./Start/stm32f4xx.h"
 428              		.file 6 "./Start/system_stm32f4xx.h"
ARM GAS  /tmp/ccQeurbH.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sysTick.c
     /tmp/ccQeurbH.s:21     .text.NVIC_SetPriority:0000000000000000 $t
     /tmp/ccQeurbH.s:26     .text.NVIC_SetPriority:0000000000000000 NVIC_SetPriority
     /tmp/ccQeurbH.s:95     .text.NVIC_SetPriority:000000000000004c $d
     /tmp/ccQeurbH.s:101    .text.SysTick_Config:0000000000000000 $t
     /tmp/ccQeurbH.s:106    .text.SysTick_Config:0000000000000000 SysTick_Config
     /tmp/ccQeurbH.s:166    .text.SysTick_Config:0000000000000040 $d
     /tmp/ccQeurbH.s:171    .bss.TimingDelay:0000000000000000 $d
     /tmp/ccQeurbH.s:174    .bss.TimingDelay:0000000000000000 TimingDelay
     /tmp/ccQeurbH.s:177    .bss.g_ul_ms_ticks:0000000000000000 $d
     /tmp/ccQeurbH.s:180    .bss.g_ul_ms_ticks:0000000000000000 g_ul_ms_ticks
     /tmp/ccQeurbH.s:183    .text.SysTick_Init:0000000000000000 $t
     /tmp/ccQeurbH.s:189    .text.SysTick_Init:0000000000000000 SysTick_Init
     /tmp/ccQeurbH.s:227    .text.SysTick_Init:0000000000000028 $d
     /tmp/ccQeurbH.s:233    .text.Delay_s:0000000000000000 $t
     /tmp/ccQeurbH.s:239    .text.Delay_s:0000000000000000 Delay_s
     /tmp/ccQeurbH.s:288    .text.TimingDelay_Decrement:0000000000000000 $t
     /tmp/ccQeurbH.s:294    .text.TimingDelay_Decrement:0000000000000000 TimingDelay_Decrement
     /tmp/ccQeurbH.s:331    .text.TimingDelay_Decrement:0000000000000020 $d
     /tmp/ccQeurbH.s:336    .text.get_tick_count:0000000000000000 $t
     /tmp/ccQeurbH.s:342    .text.get_tick_count:0000000000000000 get_tick_count
     /tmp/ccQeurbH.s:378    .text.get_tick_count:0000000000000020 $d
     /tmp/ccQeurbH.s:383    .text.TimeStamp_Increment:0000000000000000 $t
     /tmp/ccQeurbH.s:389    .text.TimeStamp_Increment:0000000000000000 TimeStamp_Increment
     /tmp/ccQeurbH.s:419    .text.TimeStamp_Increment:0000000000000018 $d

UNDEFINED SYMBOLS
SystemCoreClock
Delay_ms
