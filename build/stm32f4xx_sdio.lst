ARM GAS  /tmp/ccfRZQXH.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_sdio.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Lib/Src/stm32f4xx_sdio.c"
  20              		.section	.text.SDIO_DeInit,"ax",%progbits
  21              		.align	1
  22              		.global	SDIO_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	SDIO_DeInit:
  28              	.LFB123:
   1:./Lib/Src/stm32f4xx_sdio.c **** /**
   2:./Lib/Src/stm32f4xx_sdio.c ****   ******************************************************************************
   3:./Lib/Src/stm32f4xx_sdio.c ****   * @file    stm32f4xx_sdio.c
   4:./Lib/Src/stm32f4xx_sdio.c ****   * @author  MCD Application Team
   5:./Lib/Src/stm32f4xx_sdio.c ****   * @version V1.8.1
   6:./Lib/Src/stm32f4xx_sdio.c ****   * @date    27-January-2022
   7:./Lib/Src/stm32f4xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Lib/Src/stm32f4xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:./Lib/Src/stm32f4xx_sdio.c ****   *          peripheral:
  10:./Lib/Src/stm32f4xx_sdio.c ****   *           + Initialization and Configuration
  11:./Lib/Src/stm32f4xx_sdio.c ****   *           + Command path state machine (CPSM) management
  12:./Lib/Src/stm32f4xx_sdio.c ****   *           + Data path state machine (DPSM) management
  13:./Lib/Src/stm32f4xx_sdio.c ****   *           + SDIO IO Cards mode management
  14:./Lib/Src/stm32f4xx_sdio.c ****   *           + CE-ATA mode management
  15:./Lib/Src/stm32f4xx_sdio.c ****   *           + DMA transfers management
  16:./Lib/Src/stm32f4xx_sdio.c ****   *           + Interrupts and flags management
  17:./Lib/Src/stm32f4xx_sdio.c ****   *
  18:./Lib/Src/stm32f4xx_sdio.c **** @verbatim
  19:./Lib/Src/stm32f4xx_sdio.c **** 
  20:./Lib/Src/stm32f4xx_sdio.c ****  ===================================================================
  21:./Lib/Src/stm32f4xx_sdio.c ****                  ##### How to use this driver #####
  22:./Lib/Src/stm32f4xx_sdio.c ****  ===================================================================
  23:./Lib/Src/stm32f4xx_sdio.c ****  [..]
  24:./Lib/Src/stm32f4xx_sdio.c ****    (#) The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output of PLL 
  25:./Lib/Src/stm32f4xx_sdio.c ****        (PLL48CLK). Before to start working with SDIO peripheral make sure that the
  26:./Lib/Src/stm32f4xx_sdio.c ****        PLL is well configured.
  27:./Lib/Src/stm32f4xx_sdio.c ****        The SDIO peripheral uses two clock signals:
  28:./Lib/Src/stm32f4xx_sdio.c ****        (++) SDIO adapter clock (SDIOCLK = 48 MHz)
  29:./Lib/Src/stm32f4xx_sdio.c ****        (++) APB2 bus clock (PCLK2)
  30:./Lib/Src/stm32f4xx_sdio.c ****        
ARM GAS  /tmp/ccfRZQXH.s 			page 2


  31:./Lib/Src/stm32f4xx_sdio.c ****        -@@- PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  32:./Lib/Src/stm32f4xx_sdio.c ****            Frequency(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  33:./Lib/Src/stm32f4xx_sdio.c ****   
  34:./Lib/Src/stm32f4xx_sdio.c ****    (#) Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  35:./Lib/Src/stm32f4xx_sdio.c ****   
  36:./Lib/Src/stm32f4xx_sdio.c ****    (#) According to the SDIO mode, enable the GPIO clocks using 
  37:./Lib/Src/stm32f4xx_sdio.c ****        RCC_AHB1PeriphClockCmd() function. 
  38:./Lib/Src/stm32f4xx_sdio.c ****        The I/O can be one of the following configurations:
  39:./Lib/Src/stm32f4xx_sdio.c ****        (++) 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  40:./Lib/Src/stm32f4xx_sdio.c ****        (++) 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  41:./Lib/Src/stm32f4xx_sdio.c ****        (++) 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  42:./Lib/Src/stm32f4xx_sdio.c ****   
  43:./Lib/Src/stm32f4xx_sdio.c ****    (#) Peripheral alternate function: 
  44:./Lib/Src/stm32f4xx_sdio.c ****        (++) Connect the pin to the desired peripherals' Alternate Function (AF) 
  45:./Lib/Src/stm32f4xx_sdio.c ****            using GPIO_PinAFConfig() function
  46:./Lib/Src/stm32f4xx_sdio.c ****        (++) Configure the desired pin in alternate function by: 
  47:./Lib/Src/stm32f4xx_sdio.c ****            GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  48:./Lib/Src/stm32f4xx_sdio.c ****        (++) Select the type, pull-up/pull-down and output speed via GPIO_PuPd, 
  49:./Lib/Src/stm32f4xx_sdio.c ****            GPIO_OType and GPIO_Speed members
  50:./Lib/Src/stm32f4xx_sdio.c ****        (++) Call GPIO_Init() function
  51:./Lib/Src/stm32f4xx_sdio.c ****   
  52:./Lib/Src/stm32f4xx_sdio.c ****    (#) Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  53:./Lib/Src/stm32f4xx_sdio.c ****        hardware, flow control and the Clock Divider using the SDIO_Init()
  54:./Lib/Src/stm32f4xx_sdio.c ****        function.
  55:./Lib/Src/stm32f4xx_sdio.c ****   
  56:./Lib/Src/stm32f4xx_sdio.c ****    (#) Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  57:./Lib/Src/stm32f4xx_sdio.c ****        function.
  58:./Lib/Src/stm32f4xx_sdio.c ****                 
  59:./Lib/Src/stm32f4xx_sdio.c ****    (#) Enable the clock using the SDIO_ClockCmd() function.
  60:./Lib/Src/stm32f4xx_sdio.c ****   
  61:./Lib/Src/stm32f4xx_sdio.c ****    (#) Enable the NVIC and the corresponding interrupt using the function 
  62:./Lib/Src/stm32f4xx_sdio.c ****        SDIO_ITConfig() if you need to use interrupt mode. 
  63:./Lib/Src/stm32f4xx_sdio.c ****   
  64:./Lib/Src/stm32f4xx_sdio.c ****    (#) When using the DMA mode 
  65:./Lib/Src/stm32f4xx_sdio.c ****        (++) Configure the DMA using DMA_Init() function
  66:./Lib/Src/stm32f4xx_sdio.c ****        (++) Active the needed channel Request using SDIO_DMACmd() function
  67:./Lib/Src/stm32f4xx_sdio.c ****   
  68:./Lib/Src/stm32f4xx_sdio.c ****    (#) Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  69:./Lib/Src/stm32f4xx_sdio.c ****   
  70:./Lib/Src/stm32f4xx_sdio.c ****    (#) To control the CPSM (Command Path State Machine) and send 
  71:./Lib/Src/stm32f4xx_sdio.c ****        commands to the card use the SDIO_SendCommand(), 
  72:./Lib/Src/stm32f4xx_sdio.c ****        SDIO_GetCommandResponse() and SDIO_GetResponse() functions. First, user has
  73:./Lib/Src/stm32f4xx_sdio.c ****        to fill the command structure (pointer to SDIO_CmdInitTypeDef) according 
  74:./Lib/Src/stm32f4xx_sdio.c ****        to the selected command to be sent.
  75:./Lib/Src/stm32f4xx_sdio.c ****        The parameters that should be filled are:
  76:./Lib/Src/stm32f4xx_sdio.c ****        (++) Command Argument
  77:./Lib/Src/stm32f4xx_sdio.c ****        (++) Command Index
  78:./Lib/Src/stm32f4xx_sdio.c ****        (++) Command Response type
  79:./Lib/Src/stm32f4xx_sdio.c ****        (++) Command Wait
  80:./Lib/Src/stm32f4xx_sdio.c ****        (++) CPSM Status (Enable or Disable).
  81:./Lib/Src/stm32f4xx_sdio.c ****   
  82:./Lib/Src/stm32f4xx_sdio.c ****        -@@- To check if the command is well received, read the SDIO_CMDRESP
  83:./Lib/Src/stm32f4xx_sdio.c ****            register using the SDIO_GetCommandResponse().
  84:./Lib/Src/stm32f4xx_sdio.c ****            The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  85:./Lib/Src/stm32f4xx_sdio.c ****            SDIO_GetResponse() function.
  86:./Lib/Src/stm32f4xx_sdio.c ****   
  87:./Lib/Src/stm32f4xx_sdio.c ****    (#) To control the DPSM (Data Path State Machine) and send/receive 
ARM GAS  /tmp/ccfRZQXH.s 			page 3


  88:./Lib/Src/stm32f4xx_sdio.c ****        data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  89:./Lib/Src/stm32f4xx_sdio.c ****        SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  90:./Lib/Src/stm32f4xx_sdio.c ****   
  91:./Lib/Src/stm32f4xx_sdio.c ****  *** Read Operations ***
  92:./Lib/Src/stm32f4xx_sdio.c ****  =======================
  93:./Lib/Src/stm32f4xx_sdio.c ****  [..]
  94:./Lib/Src/stm32f4xx_sdio.c ****    (#) First, user has to fill the data structure (pointer to
  95:./Lib/Src/stm32f4xx_sdio.c ****        SDIO_DataInitTypeDef) according to the selected data type to be received.
  96:./Lib/Src/stm32f4xx_sdio.c ****        The parameters that should be filled are:
  97:./Lib/Src/stm32f4xx_sdio.c ****        (++) Data TimeOut
  98:./Lib/Src/stm32f4xx_sdio.c ****        (++) Data Length
  99:./Lib/Src/stm32f4xx_sdio.c ****        (++) Data Block size
 100:./Lib/Src/stm32f4xx_sdio.c ****        (++) Data Transfer direction: should be from card (To SDIO)
 101:./Lib/Src/stm32f4xx_sdio.c ****        (++) Data Transfer mode
 102:./Lib/Src/stm32f4xx_sdio.c ****        (++) DPSM Status (Enable or Disable)
 103:./Lib/Src/stm32f4xx_sdio.c ****                                      
 104:./Lib/Src/stm32f4xx_sdio.c ****    (#) Configure the SDIO resources to receive the data from the card
 105:./Lib/Src/stm32f4xx_sdio.c ****        according to selected transfer mode (Refer to Step 8, 9 and 10).
 106:./Lib/Src/stm32f4xx_sdio.c ****   
 107:./Lib/Src/stm32f4xx_sdio.c ****    (#)  Send the selected Read command (refer to step 11).
 108:./Lib/Src/stm32f4xx_sdio.c ****                     
 109:./Lib/Src/stm32f4xx_sdio.c ****    (#) Use the SDIO flags/interrupts to check the transfer status.
 110:./Lib/Src/stm32f4xx_sdio.c ****   
 111:./Lib/Src/stm32f4xx_sdio.c ****  *** Write Operations ***
 112:./Lib/Src/stm32f4xx_sdio.c ****  ========================
 113:./Lib/Src/stm32f4xx_sdio.c ****  [..]
 114:./Lib/Src/stm32f4xx_sdio.c ****    (#) First, user has to fill the data structure (pointer to
 115:./Lib/Src/stm32f4xx_sdio.c ****        SDIO_DataInitTypeDef) according to the selected data type to be received.
 116:./Lib/Src/stm32f4xx_sdio.c ****        The parameters that should be filled are:
 117:./Lib/Src/stm32f4xx_sdio.c ****        (++) Data TimeOut
 118:./Lib/Src/stm32f4xx_sdio.c ****        (++) Data Length
 119:./Lib/Src/stm32f4xx_sdio.c ****        (++) Data Block size
 120:./Lib/Src/stm32f4xx_sdio.c ****        (++) Data Transfer direction:  should be to card (To CARD)
 121:./Lib/Src/stm32f4xx_sdio.c ****        (++) Data Transfer mode
 122:./Lib/Src/stm32f4xx_sdio.c ****        (++) DPSM Status (Enable or Disable)
 123:./Lib/Src/stm32f4xx_sdio.c ****   
 124:./Lib/Src/stm32f4xx_sdio.c ****    (#) Configure the SDIO resources to send the data to the card according to 
 125:./Lib/Src/stm32f4xx_sdio.c ****        selected transfer mode (Refer to Step 8, 9 and 10).
 126:./Lib/Src/stm32f4xx_sdio.c ****                      
 127:./Lib/Src/stm32f4xx_sdio.c ****    (#) Send the selected Write command (refer to step 11).
 128:./Lib/Src/stm32f4xx_sdio.c ****                     
 129:./Lib/Src/stm32f4xx_sdio.c ****    (#) Use the SDIO flags/interrupts to check the transfer status.
 130:./Lib/Src/stm32f4xx_sdio.c ****   
 131:./Lib/Src/stm32f4xx_sdio.c ****   
 132:./Lib/Src/stm32f4xx_sdio.c **** @endverbatim
 133:./Lib/Src/stm32f4xx_sdio.c ****   *
 134:./Lib/Src/stm32f4xx_sdio.c ****   *
 135:./Lib/Src/stm32f4xx_sdio.c ****   ******************************************************************************
 136:./Lib/Src/stm32f4xx_sdio.c ****   * @attention
 137:./Lib/Src/stm32f4xx_sdio.c ****   *
 138:./Lib/Src/stm32f4xx_sdio.c ****   * Copyright (c) 2016 STMicroelectronics.
 139:./Lib/Src/stm32f4xx_sdio.c ****   * All rights reserved.
 140:./Lib/Src/stm32f4xx_sdio.c ****   *
 141:./Lib/Src/stm32f4xx_sdio.c ****   * This software is licensed under terms that can be found in the LICENSE file
 142:./Lib/Src/stm32f4xx_sdio.c ****   * in the root directory of this software component.
 143:./Lib/Src/stm32f4xx_sdio.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
 144:./Lib/Src/stm32f4xx_sdio.c ****   *
ARM GAS  /tmp/ccfRZQXH.s 			page 4


 145:./Lib/Src/stm32f4xx_sdio.c ****   ******************************************************************************
 146:./Lib/Src/stm32f4xx_sdio.c ****   */
 147:./Lib/Src/stm32f4xx_sdio.c **** 
 148:./Lib/Src/stm32f4xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 149:./Lib/Src/stm32f4xx_sdio.c **** #include "stm32f4xx_sdio.h"
 150:./Lib/Src/stm32f4xx_sdio.c **** #include "stm32f4xx_rcc.h"
 151:./Lib/Src/stm32f4xx_sdio.c **** 
 152:./Lib/Src/stm32f4xx_sdio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 153:./Lib/Src/stm32f4xx_sdio.c ****   * @{
 154:./Lib/Src/stm32f4xx_sdio.c ****   */
 155:./Lib/Src/stm32f4xx_sdio.c **** 
 156:./Lib/Src/stm32f4xx_sdio.c **** /** @defgroup SDIO 
 157:./Lib/Src/stm32f4xx_sdio.c ****   * @brief SDIO driver modules
 158:./Lib/Src/stm32f4xx_sdio.c ****   * @{
 159:./Lib/Src/stm32f4xx_sdio.c ****   */ 
 160:./Lib/Src/stm32f4xx_sdio.c **** 
 161:./Lib/Src/stm32f4xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 162:./Lib/Src/stm32f4xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 163:./Lib/Src/stm32f4xx_sdio.c **** 
 164:./Lib/Src/stm32f4xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 165:./Lib/Src/stm32f4xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 166:./Lib/Src/stm32f4xx_sdio.c **** 
 167:./Lib/Src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 168:./Lib/Src/stm32f4xx_sdio.c **** /* Alias word address of CLKEN bit */
 169:./Lib/Src/stm32f4xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 170:./Lib/Src/stm32f4xx_sdio.c **** #define CLKEN_BitNumber           0x08
 171:./Lib/Src/stm32f4xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 172:./Lib/Src/stm32f4xx_sdio.c **** 
 173:./Lib/Src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 174:./Lib/Src/stm32f4xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 175:./Lib/Src/stm32f4xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 176:./Lib/Src/stm32f4xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 177:./Lib/Src/stm32f4xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 178:./Lib/Src/stm32f4xx_sdio.c **** 
 179:./Lib/Src/stm32f4xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 180:./Lib/Src/stm32f4xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 181:./Lib/Src/stm32f4xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 182:./Lib/Src/stm32f4xx_sdio.c **** 
 183:./Lib/Src/stm32f4xx_sdio.c **** /* Alias word address of NIEN bit */
 184:./Lib/Src/stm32f4xx_sdio.c **** #define NIEN_BitNumber            0x0D
 185:./Lib/Src/stm32f4xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 186:./Lib/Src/stm32f4xx_sdio.c **** 
 187:./Lib/Src/stm32f4xx_sdio.c **** /* Alias word address of ATACMD bit */
 188:./Lib/Src/stm32f4xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 189:./Lib/Src/stm32f4xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 190:./Lib/Src/stm32f4xx_sdio.c **** 
 191:./Lib/Src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 192:./Lib/Src/stm32f4xx_sdio.c **** /* Alias word address of DMAEN bit */
 193:./Lib/Src/stm32f4xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 194:./Lib/Src/stm32f4xx_sdio.c **** #define DMAEN_BitNumber           0x03
 195:./Lib/Src/stm32f4xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 196:./Lib/Src/stm32f4xx_sdio.c **** 
 197:./Lib/Src/stm32f4xx_sdio.c **** /* Alias word address of RWSTART bit */
 198:./Lib/Src/stm32f4xx_sdio.c **** #define RWSTART_BitNumber         0x08
 199:./Lib/Src/stm32f4xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 200:./Lib/Src/stm32f4xx_sdio.c **** 
 201:./Lib/Src/stm32f4xx_sdio.c **** /* Alias word address of RWSTOP bit */
ARM GAS  /tmp/ccfRZQXH.s 			page 5


 202:./Lib/Src/stm32f4xx_sdio.c **** #define RWSTOP_BitNumber          0x09
 203:./Lib/Src/stm32f4xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 204:./Lib/Src/stm32f4xx_sdio.c **** 
 205:./Lib/Src/stm32f4xx_sdio.c **** /* Alias word address of RWMOD bit */
 206:./Lib/Src/stm32f4xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 207:./Lib/Src/stm32f4xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 208:./Lib/Src/stm32f4xx_sdio.c **** 
 209:./Lib/Src/stm32f4xx_sdio.c **** /* Alias word address of SDIOEN bit */
 210:./Lib/Src/stm32f4xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 211:./Lib/Src/stm32f4xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 212:./Lib/Src/stm32f4xx_sdio.c **** 
 213:./Lib/Src/stm32f4xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 214:./Lib/Src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 215:./Lib/Src/stm32f4xx_sdio.c **** /* CLKCR register clear mask */
 216:./Lib/Src/stm32f4xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 217:./Lib/Src/stm32f4xx_sdio.c **** 
 218:./Lib/Src/stm32f4xx_sdio.c **** /* --- PWRCTRL Register ---*/
 219:./Lib/Src/stm32f4xx_sdio.c **** /* SDIO PWRCTRL Mask */
 220:./Lib/Src/stm32f4xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 221:./Lib/Src/stm32f4xx_sdio.c **** 
 222:./Lib/Src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 223:./Lib/Src/stm32f4xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 224:./Lib/Src/stm32f4xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 225:./Lib/Src/stm32f4xx_sdio.c **** 
 226:./Lib/Src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 227:./Lib/Src/stm32f4xx_sdio.c **** /* CMD Register clear mask */
 228:./Lib/Src/stm32f4xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 229:./Lib/Src/stm32f4xx_sdio.c **** 
 230:./Lib/Src/stm32f4xx_sdio.c **** /* SDIO RESP Registers Address */
 231:./Lib/Src/stm32f4xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 232:./Lib/Src/stm32f4xx_sdio.c **** 
 233:./Lib/Src/stm32f4xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 234:./Lib/Src/stm32f4xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 235:./Lib/Src/stm32f4xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 236:./Lib/Src/stm32f4xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 237:./Lib/Src/stm32f4xx_sdio.c **** 
 238:./Lib/Src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 239:./Lib/Src/stm32f4xx_sdio.c ****   * @{
 240:./Lib/Src/stm32f4xx_sdio.c ****   */
 241:./Lib/Src/stm32f4xx_sdio.c **** 
 242:./Lib/Src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 243:./Lib/Src/stm32f4xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 244:./Lib/Src/stm32f4xx_sdio.c ****  *
 245:./Lib/Src/stm32f4xx_sdio.c **** @verbatim   
 246:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================
 247:./Lib/Src/stm32f4xx_sdio.c ****               ##### Initialization and Configuration functions #####
 248:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================
 249:./Lib/Src/stm32f4xx_sdio.c **** 
 250:./Lib/Src/stm32f4xx_sdio.c **** @endverbatim
 251:./Lib/Src/stm32f4xx_sdio.c ****   * @{
 252:./Lib/Src/stm32f4xx_sdio.c ****   */
 253:./Lib/Src/stm32f4xx_sdio.c **** 
 254:./Lib/Src/stm32f4xx_sdio.c **** /**
 255:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 256:./Lib/Src/stm32f4xx_sdio.c ****   * @param  None
 257:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 258:./Lib/Src/stm32f4xx_sdio.c ****   */
ARM GAS  /tmp/ccfRZQXH.s 			page 6


 259:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_DeInit(void)
 260:./Lib/Src/stm32f4xx_sdio.c **** {
  29              		.loc 1 260 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
 261:./Lib/Src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
  39              		.loc 1 261 3
  40 0004 0121     		movs	r1, #1
  41 0006 4FF40060 		mov	r0, #2048
  42 000a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 262:./Lib/Src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  43              		.loc 1 262 3
  44 000e 0021     		movs	r1, #0
  45 0010 4FF40060 		mov	r0, #2048
  46 0014 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 263:./Lib/Src/stm32f4xx_sdio.c **** }
  47              		.loc 1 263 1
  48 0018 00BF     		nop
  49 001a 80BD     		pop	{r7, pc}
  50              		.cfi_endproc
  51              	.LFE123:
  53              		.section	.text.SDIO_Init,"ax",%progbits
  54              		.align	1
  55              		.global	SDIO_Init
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  60              	SDIO_Init:
  61              	.LFB124:
 264:./Lib/Src/stm32f4xx_sdio.c **** 
 265:./Lib/Src/stm32f4xx_sdio.c **** /**
 266:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 267:./Lib/Src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 268:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 269:./Lib/Src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 270:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 271:./Lib/Src/stm32f4xx_sdio.c ****   */
 272:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 273:./Lib/Src/stm32f4xx_sdio.c **** {
  62              		.loc 1 273 1
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 16
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 85B0     		sub	sp, sp, #20
  71              		.cfi_def_cfa_offset 24
  72 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccfRZQXH.s 			page 7


  73              		.cfi_def_cfa_register 7
  74 0006 7860     		str	r0, [r7, #4]
 274:./Lib/Src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
  75              		.loc 1 274 12
  76 0008 0023     		movs	r3, #0
  77 000a FB60     		str	r3, [r7, #12]
 275:./Lib/Src/stm32f4xx_sdio.c ****     
 276:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 277:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 278:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 279:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 280:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 281:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 282:./Lib/Src/stm32f4xx_sdio.c ****    
 283:./Lib/Src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 284:./Lib/Src/stm32f4xx_sdio.c ****   /* Get the SDIO CLKCR value */
 285:./Lib/Src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
  78              		.loc 1 285 16
  79 000c 134B     		ldr	r3, .L3
  80              		.loc 1 285 10
  81 000e 5B68     		ldr	r3, [r3, #4]
  82 0010 FB60     		str	r3, [r7, #12]
 286:./Lib/Src/stm32f4xx_sdio.c ****   
 287:./Lib/Src/stm32f4xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 288:./Lib/Src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
  83              		.loc 1 288 10
  84 0012 FB68     		ldr	r3, [r7, #12]
  85 0014 23F4FD43 		bic	r3, r3, #32384
  86 0018 23F07F03 		bic	r3, r3, #127
  87 001c FB60     		str	r3, [r7, #12]
 289:./Lib/Src/stm32f4xx_sdio.c ****   
 290:./Lib/Src/stm32f4xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 291:./Lib/Src/stm32f4xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 292:./Lib/Src/stm32f4xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 293:./Lib/Src/stm32f4xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 294:./Lib/Src/stm32f4xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 295:./Lib/Src/stm32f4xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 296:./Lib/Src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  88              		.loc 1 296 29
  89 001e 7B68     		ldr	r3, [r7, #4]
  90 0020 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
  91 0022 1A46     		mov	r2, r3
  92              		.loc 1 296 63
  93 0024 7B68     		ldr	r3, [r7, #4]
  94 0026 9B68     		ldr	r3, [r3, #8]
  95              		.loc 1 296 46
  96 0028 1A43     		orrs	r2, r2, r3
 297:./Lib/Src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  97              		.loc 1 297 29
  98 002a 7B68     		ldr	r3, [r7, #4]
  99 002c 5B68     		ldr	r3, [r3, #4]
 296:./Lib/Src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 100              		.loc 1 296 85
 101 002e 1A43     		orrs	r2, r2, r3
 102              		.loc 1 297 65
 103 0030 7B68     		ldr	r3, [r7, #4]
 104 0032 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccfRZQXH.s 			page 8


 105              		.loc 1 297 48
 106 0034 1A43     		orrs	r2, r2, r3
 298:./Lib/Src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
 107              		.loc 1 298 29
 108 0036 7B68     		ldr	r3, [r7, #4]
 109 0038 1B68     		ldr	r3, [r3]
 297:./Lib/Src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 110              		.loc 1 297 80
 111 003a 1A43     		orrs	r2, r2, r3
 112              		.loc 1 298 63
 113 003c 7B68     		ldr	r3, [r7, #4]
 114 003e 1B69     		ldr	r3, [r3, #16]
 115              		.loc 1 298 46
 116 0040 1343     		orrs	r3, r3, r2
 296:./Lib/Src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 117              		.loc 1 296 10
 118 0042 FA68     		ldr	r2, [r7, #12]
 119 0044 1343     		orrs	r3, r3, r2
 120 0046 FB60     		str	r3, [r7, #12]
 299:./Lib/Src/stm32f4xx_sdio.c ****   
 300:./Lib/Src/stm32f4xx_sdio.c ****   /* Write to SDIO CLKCR */
 301:./Lib/Src/stm32f4xx_sdio.c ****   SDIO->CLKCR = tmpreg;
 121              		.loc 1 301 7
 122 0048 044A     		ldr	r2, .L3
 123              		.loc 1 301 15
 124 004a FB68     		ldr	r3, [r7, #12]
 125 004c 5360     		str	r3, [r2, #4]
 302:./Lib/Src/stm32f4xx_sdio.c **** }
 126              		.loc 1 302 1
 127 004e 00BF     		nop
 128 0050 1437     		adds	r7, r7, #20
 129              		.cfi_def_cfa_offset 4
 130 0052 BD46     		mov	sp, r7
 131              		.cfi_def_cfa_register 13
 132              		@ sp needed
 133 0054 5DF8047B 		ldr	r7, [sp], #4
 134              		.cfi_restore 7
 135              		.cfi_def_cfa_offset 0
 136 0058 7047     		bx	lr
 137              	.L4:
 138 005a 00BF     		.align	2
 139              	.L3:
 140 005c 002C0140 		.word	1073818624
 141              		.cfi_endproc
 142              	.LFE124:
 144              		.section	.text.SDIO_StructInit,"ax",%progbits
 145              		.align	1
 146              		.global	SDIO_StructInit
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 151              	SDIO_StructInit:
 152              	.LFB125:
 303:./Lib/Src/stm32f4xx_sdio.c **** 
 304:./Lib/Src/stm32f4xx_sdio.c **** /**
 305:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 306:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
ARM GAS  /tmp/ccfRZQXH.s 			page 9


 307:./Lib/Src/stm32f4xx_sdio.c ****   *         will be initialized.
 308:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 309:./Lib/Src/stm32f4xx_sdio.c ****   */
 310:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 311:./Lib/Src/stm32f4xx_sdio.c **** {
 153              		.loc 1 311 1
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 8
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 80B4     		push	{r7}
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 7, -4
 161 0002 83B0     		sub	sp, sp, #12
 162              		.cfi_def_cfa_offset 16
 163 0004 00AF     		add	r7, sp, #0
 164              		.cfi_def_cfa_register 7
 165 0006 7860     		str	r0, [r7, #4]
 312:./Lib/Src/stm32f4xx_sdio.c ****   /* SDIO_InitStruct members default value */
 313:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 166              		.loc 1 313 34
 167 0008 7B68     		ldr	r3, [r7, #4]
 168 000a 0022     		movs	r2, #0
 169 000c 1A75     		strb	r2, [r3, #20]
 314:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 170              		.loc 1 314 35
 171 000e 7B68     		ldr	r3, [r7, #4]
 172 0010 0022     		movs	r2, #0
 173 0012 1A60     		str	r2, [r3]
 315:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 174              		.loc 1 315 37
 175 0014 7B68     		ldr	r3, [r7, #4]
 176 0016 0022     		movs	r2, #0
 177 0018 5A60     		str	r2, [r3, #4]
 316:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 178              		.loc 1 316 40
 179 001a 7B68     		ldr	r3, [r7, #4]
 180 001c 0022     		movs	r2, #0
 181 001e 9A60     		str	r2, [r3, #8]
 317:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 182              		.loc 1 317 33
 183 0020 7B68     		ldr	r3, [r7, #4]
 184 0022 0022     		movs	r2, #0
 185 0024 DA60     		str	r2, [r3, #12]
 318:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 186              		.loc 1 318 45
 187 0026 7B68     		ldr	r3, [r7, #4]
 188 0028 0022     		movs	r2, #0
 189 002a 1A61     		str	r2, [r3, #16]
 319:./Lib/Src/stm32f4xx_sdio.c **** }
 190              		.loc 1 319 1
 191 002c 00BF     		nop
 192 002e 0C37     		adds	r7, r7, #12
 193              		.cfi_def_cfa_offset 4
 194 0030 BD46     		mov	sp, r7
 195              		.cfi_def_cfa_register 13
 196              		@ sp needed
ARM GAS  /tmp/ccfRZQXH.s 			page 10


 197 0032 5DF8047B 		ldr	r7, [sp], #4
 198              		.cfi_restore 7
 199              		.cfi_def_cfa_offset 0
 200 0036 7047     		bx	lr
 201              		.cfi_endproc
 202              	.LFE125:
 204              		.section	.text.SDIO_ClockCmd,"ax",%progbits
 205              		.align	1
 206              		.global	SDIO_ClockCmd
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 211              	SDIO_ClockCmd:
 212              	.LFB126:
 320:./Lib/Src/stm32f4xx_sdio.c **** 
 321:./Lib/Src/stm32f4xx_sdio.c **** /**
 322:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 323:./Lib/Src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 324:./Lib/Src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 325:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 326:./Lib/Src/stm32f4xx_sdio.c ****   */
 327:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 328:./Lib/Src/stm32f4xx_sdio.c **** {
 213              		.loc 1 328 1
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 8
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218 0000 80B4     		push	{r7}
 219              		.cfi_def_cfa_offset 4
 220              		.cfi_offset 7, -4
 221 0002 83B0     		sub	sp, sp, #12
 222              		.cfi_def_cfa_offset 16
 223 0004 00AF     		add	r7, sp, #0
 224              		.cfi_def_cfa_register 7
 225 0006 0346     		mov	r3, r0
 226 0008 FB71     		strb	r3, [r7, #7]
 329:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 330:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 331:./Lib/Src/stm32f4xx_sdio.c ****   
 332:./Lib/Src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 227              		.loc 1 332 3
 228 000a 044A     		ldr	r2, .L7
 229              		.loc 1 332 39
 230 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 231              		.loc 1 332 37
 232 000e 1360     		str	r3, [r2]
 333:./Lib/Src/stm32f4xx_sdio.c **** }
 233              		.loc 1 333 1
 234 0010 00BF     		nop
 235 0012 0C37     		adds	r7, r7, #12
 236              		.cfi_def_cfa_offset 4
 237 0014 BD46     		mov	sp, r7
 238              		.cfi_def_cfa_register 13
 239              		@ sp needed
 240 0016 5DF8047B 		ldr	r7, [sp], #4
 241              		.cfi_restore 7
ARM GAS  /tmp/ccfRZQXH.s 			page 11


 242              		.cfi_def_cfa_offset 0
 243 001a 7047     		bx	lr
 244              	.L8:
 245              		.align	2
 246              	.L7:
 247 001c A0802542 		.word	1109754016
 248              		.cfi_endproc
 249              	.LFE126:
 251              		.section	.text.SDIO_SetPowerState,"ax",%progbits
 252              		.align	1
 253              		.global	SDIO_SetPowerState
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	SDIO_SetPowerState:
 259              	.LFB127:
 334:./Lib/Src/stm32f4xx_sdio.c **** 
 335:./Lib/Src/stm32f4xx_sdio.c **** /**
 336:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Sets the power status of the controller.
 337:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 338:./Lib/Src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 339:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 340:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 341:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 342:./Lib/Src/stm32f4xx_sdio.c ****   */
 343:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 344:./Lib/Src/stm32f4xx_sdio.c **** {
 260              		.loc 1 344 1
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265 0000 80B4     		push	{r7}
 266              		.cfi_def_cfa_offset 4
 267              		.cfi_offset 7, -4
 268 0002 83B0     		sub	sp, sp, #12
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 345:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 346:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 347:./Lib/Src/stm32f4xx_sdio.c ****   
 348:./Lib/Src/stm32f4xx_sdio.c ****   SDIO->POWER = SDIO_PowerState;
 273              		.loc 1 348 7
 274 0008 044A     		ldr	r2, .L10
 275              		.loc 1 348 15
 276 000a 7B68     		ldr	r3, [r7, #4]
 277 000c 1360     		str	r3, [r2]
 349:./Lib/Src/stm32f4xx_sdio.c **** }
 278              		.loc 1 349 1
 279 000e 00BF     		nop
 280 0010 0C37     		adds	r7, r7, #12
 281              		.cfi_def_cfa_offset 4
 282 0012 BD46     		mov	sp, r7
 283              		.cfi_def_cfa_register 13
 284              		@ sp needed
ARM GAS  /tmp/ccfRZQXH.s 			page 12


 285 0014 5DF8047B 		ldr	r7, [sp], #4
 286              		.cfi_restore 7
 287              		.cfi_def_cfa_offset 0
 288 0018 7047     		bx	lr
 289              	.L11:
 290 001a 00BF     		.align	2
 291              	.L10:
 292 001c 002C0140 		.word	1073818624
 293              		.cfi_endproc
 294              	.LFE127:
 296              		.section	.text.SDIO_GetPowerState,"ax",%progbits
 297              		.align	1
 298              		.global	SDIO_GetPowerState
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 303              	SDIO_GetPowerState:
 304              	.LFB128:
 350:./Lib/Src/stm32f4xx_sdio.c **** 
 351:./Lib/Src/stm32f4xx_sdio.c **** /**
 352:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Gets the power status of the controller.
 353:./Lib/Src/stm32f4xx_sdio.c ****   * @param  None
 354:./Lib/Src/stm32f4xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 355:./Lib/Src/stm32f4xx_sdio.c ****   *         following values:
 356:./Lib/Src/stm32f4xx_sdio.c ****   *            - 0x00: Power OFF
 357:./Lib/Src/stm32f4xx_sdio.c ****   *            - 0x02: Power UP
 358:./Lib/Src/stm32f4xx_sdio.c ****   *            - 0x03: Power ON 
 359:./Lib/Src/stm32f4xx_sdio.c ****   */
 360:./Lib/Src/stm32f4xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 361:./Lib/Src/stm32f4xx_sdio.c **** {
 305              		.loc 1 361 1
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310 0000 80B4     		push	{r7}
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 7, -4
 313 0002 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 362:./Lib/Src/stm32f4xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 315              		.loc 1 362 15
 316 0004 044B     		ldr	r3, .L14
 317 0006 1B68     		ldr	r3, [r3]
 318              		.loc 1 362 23
 319 0008 03F00303 		and	r3, r3, #3
 363:./Lib/Src/stm32f4xx_sdio.c **** }
 320              		.loc 1 363 1
 321 000c 1846     		mov	r0, r3
 322 000e BD46     		mov	sp, r7
 323              		.cfi_def_cfa_register 13
 324              		@ sp needed
 325 0010 5DF8047B 		ldr	r7, [sp], #4
 326              		.cfi_restore 7
 327              		.cfi_def_cfa_offset 0
 328 0014 7047     		bx	lr
 329              	.L15:
ARM GAS  /tmp/ccfRZQXH.s 			page 13


 330 0016 00BF     		.align	2
 331              	.L14:
 332 0018 002C0140 		.word	1073818624
 333              		.cfi_endproc
 334              	.LFE128:
 336              		.section	.text.SDIO_SendCommand,"ax",%progbits
 337              		.align	1
 338              		.global	SDIO_SendCommand
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 343              	SDIO_SendCommand:
 344              	.LFB129:
 364:./Lib/Src/stm32f4xx_sdio.c **** 
 365:./Lib/Src/stm32f4xx_sdio.c **** /**
 366:./Lib/Src/stm32f4xx_sdio.c ****   * @}
 367:./Lib/Src/stm32f4xx_sdio.c ****   */
 368:./Lib/Src/stm32f4xx_sdio.c **** 
 369:./Lib/Src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 370:./Lib/Src/stm32f4xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 371:./Lib/Src/stm32f4xx_sdio.c ****  *
 372:./Lib/Src/stm32f4xx_sdio.c **** @verbatim   
 373:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================
 374:./Lib/Src/stm32f4xx_sdio.c ****         ##### Command path state machine (CPSM) management functions #####
 375:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================  
 376:./Lib/Src/stm32f4xx_sdio.c **** 
 377:./Lib/Src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 378:./Lib/Src/stm32f4xx_sdio.c ****   state machine (CPSM).
 379:./Lib/Src/stm32f4xx_sdio.c **** 
 380:./Lib/Src/stm32f4xx_sdio.c **** @endverbatim
 381:./Lib/Src/stm32f4xx_sdio.c ****   * @{
 382:./Lib/Src/stm32f4xx_sdio.c ****   */
 383:./Lib/Src/stm32f4xx_sdio.c **** 
 384:./Lib/Src/stm32f4xx_sdio.c **** /**
 385:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 386:./Lib/Src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 387:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 388:./Lib/Src/stm32f4xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 389:./Lib/Src/stm32f4xx_sdio.c ****   *         command.
 390:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 391:./Lib/Src/stm32f4xx_sdio.c ****   */
 392:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 393:./Lib/Src/stm32f4xx_sdio.c **** {
 345              		.loc 1 393 1
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 16
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350 0000 80B4     		push	{r7}
 351              		.cfi_def_cfa_offset 4
 352              		.cfi_offset 7, -4
 353 0002 85B0     		sub	sp, sp, #20
 354              		.cfi_def_cfa_offset 24
 355 0004 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 357 0006 7860     		str	r0, [r7, #4]
 394:./Lib/Src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
ARM GAS  /tmp/ccfRZQXH.s 			page 14


 358              		.loc 1 394 12
 359 0008 0023     		movs	r3, #0
 360 000a FB60     		str	r3, [r7, #12]
 395:./Lib/Src/stm32f4xx_sdio.c ****   
 396:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 397:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 398:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 399:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 400:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 401:./Lib/Src/stm32f4xx_sdio.c ****   
 402:./Lib/Src/stm32f4xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 403:./Lib/Src/stm32f4xx_sdio.c ****   /* Set the SDIO Argument value */
 404:./Lib/Src/stm32f4xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 361              		.loc 1 404 7
 362 000c 114A     		ldr	r2, .L17
 363              		.loc 1 404 33
 364 000e 7B68     		ldr	r3, [r7, #4]
 365 0010 1B68     		ldr	r3, [r3]
 366              		.loc 1 404 13
 367 0012 9360     		str	r3, [r2, #8]
 405:./Lib/Src/stm32f4xx_sdio.c ****   
 406:./Lib/Src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 407:./Lib/Src/stm32f4xx_sdio.c ****   /* Get the SDIO CMD value */
 408:./Lib/Src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 368              		.loc 1 408 16
 369 0014 0F4B     		ldr	r3, .L17
 370              		.loc 1 408 10
 371 0016 DB68     		ldr	r3, [r3, #12]
 372 0018 FB60     		str	r3, [r7, #12]
 409:./Lib/Src/stm32f4xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 410:./Lib/Src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 373              		.loc 1 410 10
 374 001a FB68     		ldr	r3, [r7, #12]
 375 001c 23F4FF63 		bic	r3, r3, #2040
 376 0020 23F00703 		bic	r3, r3, #7
 377 0024 FB60     		str	r3, [r7, #12]
 411:./Lib/Src/stm32f4xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 412:./Lib/Src/stm32f4xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 413:./Lib/Src/stm32f4xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 414:./Lib/Src/stm32f4xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 415:./Lib/Src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 378              		.loc 1 415 41
 379 0026 7B68     		ldr	r3, [r7, #4]
 380 0028 5A68     		ldr	r2, [r3, #4]
 381              		.loc 1 415 77
 382 002a 7B68     		ldr	r3, [r7, #4]
 383 002c 9B68     		ldr	r3, [r3, #8]
 384              		.loc 1 415 57
 385 002e 1A43     		orrs	r2, r2, r3
 416:./Lib/Src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 386              		.loc 1 416 32
 387 0030 7B68     		ldr	r3, [r7, #4]
 388 0032 DB68     		ldr	r3, [r3, #12]
 389              		.loc 1 416 12
 390 0034 1A43     		orrs	r2, r2, r3
 391              		.loc 1 416 64
 392 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfRZQXH.s 			page 15


 393 0038 1B69     		ldr	r3, [r3, #16]
 394              		.loc 1 416 44
 395 003a 1343     		orrs	r3, r3, r2
 415:./Lib/Src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 396              		.loc 1 415 10
 397 003c FA68     		ldr	r2, [r7, #12]
 398 003e 1343     		orrs	r3, r3, r2
 399 0040 FB60     		str	r3, [r7, #12]
 417:./Lib/Src/stm32f4xx_sdio.c ****   
 418:./Lib/Src/stm32f4xx_sdio.c ****   /* Write to SDIO CMD */
 419:./Lib/Src/stm32f4xx_sdio.c ****   SDIO->CMD = tmpreg;
 400              		.loc 1 419 7
 401 0042 044A     		ldr	r2, .L17
 402              		.loc 1 419 13
 403 0044 FB68     		ldr	r3, [r7, #12]
 404 0046 D360     		str	r3, [r2, #12]
 420:./Lib/Src/stm32f4xx_sdio.c **** }
 405              		.loc 1 420 1
 406 0048 00BF     		nop
 407 004a 1437     		adds	r7, r7, #20
 408              		.cfi_def_cfa_offset 4
 409 004c BD46     		mov	sp, r7
 410              		.cfi_def_cfa_register 13
 411              		@ sp needed
 412 004e 5DF8047B 		ldr	r7, [sp], #4
 413              		.cfi_restore 7
 414              		.cfi_def_cfa_offset 0
 415 0052 7047     		bx	lr
 416              	.L18:
 417              		.align	2
 418              	.L17:
 419 0054 002C0140 		.word	1073818624
 420              		.cfi_endproc
 421              	.LFE129:
 423              		.section	.text.SDIO_CmdStructInit,"ax",%progbits
 424              		.align	1
 425              		.global	SDIO_CmdStructInit
 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
 430              	SDIO_CmdStructInit:
 431              	.LFB130:
 421:./Lib/Src/stm32f4xx_sdio.c **** 
 422:./Lib/Src/stm32f4xx_sdio.c **** /**
 423:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 424:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 425:./Lib/Src/stm32f4xx_sdio.c ****   *         structure which will be initialized.
 426:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 427:./Lib/Src/stm32f4xx_sdio.c ****   */
 428:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 429:./Lib/Src/stm32f4xx_sdio.c **** {
 432              		.loc 1 429 1
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 8
 435              		@ frame_needed = 1, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccfRZQXH.s 			page 16


 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 7, -4
 440 0002 83B0     		sub	sp, sp, #12
 441              		.cfi_def_cfa_offset 16
 442 0004 00AF     		add	r7, sp, #0
 443              		.cfi_def_cfa_register 7
 444 0006 7860     		str	r0, [r7, #4]
 430:./Lib/Src/stm32f4xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 431:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 445              		.loc 1 431 37
 446 0008 7B68     		ldr	r3, [r7, #4]
 447 000a 0022     		movs	r2, #0
 448 000c 1A60     		str	r2, [r3]
 432:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 449              		.loc 1 432 37
 450 000e 7B68     		ldr	r3, [r7, #4]
 451 0010 0022     		movs	r2, #0
 452 0012 5A60     		str	r2, [r3, #4]
 433:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 453              		.loc 1 433 37
 454 0014 7B68     		ldr	r3, [r7, #4]
 455 0016 0022     		movs	r2, #0
 456 0018 9A60     		str	r2, [r3, #8]
 434:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 457              		.loc 1 434 33
 458 001a 7B68     		ldr	r3, [r7, #4]
 459 001c 0022     		movs	r2, #0
 460 001e DA60     		str	r2, [r3, #12]
 435:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 461              		.loc 1 435 33
 462 0020 7B68     		ldr	r3, [r7, #4]
 463 0022 0022     		movs	r2, #0
 464 0024 1A61     		str	r2, [r3, #16]
 436:./Lib/Src/stm32f4xx_sdio.c **** }
 465              		.loc 1 436 1
 466 0026 00BF     		nop
 467 0028 0C37     		adds	r7, r7, #12
 468              		.cfi_def_cfa_offset 4
 469 002a BD46     		mov	sp, r7
 470              		.cfi_def_cfa_register 13
 471              		@ sp needed
 472 002c 5DF8047B 		ldr	r7, [sp], #4
 473              		.cfi_restore 7
 474              		.cfi_def_cfa_offset 0
 475 0030 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE130:
 479              		.section	.text.SDIO_GetCommandResponse,"ax",%progbits
 480              		.align	1
 481              		.global	SDIO_GetCommandResponse
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 486              	SDIO_GetCommandResponse:
 487              	.LFB131:
 437:./Lib/Src/stm32f4xx_sdio.c **** 
 438:./Lib/Src/stm32f4xx_sdio.c **** /**
ARM GAS  /tmp/ccfRZQXH.s 			page 17


 439:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 440:./Lib/Src/stm32f4xx_sdio.c ****   * @param  None
 441:./Lib/Src/stm32f4xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 442:./Lib/Src/stm32f4xx_sdio.c ****   */
 443:./Lib/Src/stm32f4xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 444:./Lib/Src/stm32f4xx_sdio.c **** {
 488              		.loc 1 444 1
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 1, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493 0000 80B4     		push	{r7}
 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 7, -4
 496 0002 00AF     		add	r7, sp, #0
 497              		.cfi_def_cfa_register 7
 445:./Lib/Src/stm32f4xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 498              		.loc 1 445 24
 499 0004 034B     		ldr	r3, .L22
 500 0006 1B69     		ldr	r3, [r3, #16]
 501              		.loc 1 445 10
 502 0008 DBB2     		uxtb	r3, r3
 446:./Lib/Src/stm32f4xx_sdio.c **** }
 503              		.loc 1 446 1
 504 000a 1846     		mov	r0, r3
 505 000c BD46     		mov	sp, r7
 506              		.cfi_def_cfa_register 13
 507              		@ sp needed
 508 000e 5DF8047B 		ldr	r7, [sp], #4
 509              		.cfi_restore 7
 510              		.cfi_def_cfa_offset 0
 511 0012 7047     		bx	lr
 512              	.L23:
 513              		.align	2
 514              	.L22:
 515 0014 002C0140 		.word	1073818624
 516              		.cfi_endproc
 517              	.LFE131:
 519              		.section	.text.SDIO_GetResponse,"ax",%progbits
 520              		.align	1
 521              		.global	SDIO_GetResponse
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 526              	SDIO_GetResponse:
 527              	.LFB132:
 447:./Lib/Src/stm32f4xx_sdio.c **** 
 448:./Lib/Src/stm32f4xx_sdio.c **** /**
 449:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 450:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 451:./Lib/Src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 452:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
 453:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 454:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 455:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 456:./Lib/Src/stm32f4xx_sdio.c ****   * @retval The Corresponding response register value.
 457:./Lib/Src/stm32f4xx_sdio.c ****   */
ARM GAS  /tmp/ccfRZQXH.s 			page 18


 458:./Lib/Src/stm32f4xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 459:./Lib/Src/stm32f4xx_sdio.c **** {
 528              		.loc 1 459 1
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 16
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0000 80B4     		push	{r7}
 534              		.cfi_def_cfa_offset 4
 535              		.cfi_offset 7, -4
 536 0002 85B0     		sub	sp, sp, #20
 537              		.cfi_def_cfa_offset 24
 538 0004 00AF     		add	r7, sp, #0
 539              		.cfi_def_cfa_register 7
 540 0006 7860     		str	r0, [r7, #4]
 460:./Lib/Src/stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 541              		.loc 1 460 17
 542 0008 0023     		movs	r3, #0
 543 000a FB60     		str	r3, [r7, #12]
 461:./Lib/Src/stm32f4xx_sdio.c **** 
 462:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 463:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 464:./Lib/Src/stm32f4xx_sdio.c **** 
 465:./Lib/Src/stm32f4xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 544              		.loc 1 465 24
 545 000c 7A68     		ldr	r2, [r7, #4]
 546 000e 054B     		ldr	r3, .L26
 547 0010 1344     		add	r3, r3, r2
 548              		.loc 1 465 7
 549 0012 FB60     		str	r3, [r7, #12]
 466:./Lib/Src/stm32f4xx_sdio.c ****   
 467:./Lib/Src/stm32f4xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 550              		.loc 1 467 12
 551 0014 FB68     		ldr	r3, [r7, #12]
 552              		.loc 1 467 11
 553 0016 1B68     		ldr	r3, [r3]
 468:./Lib/Src/stm32f4xx_sdio.c **** }
 554              		.loc 1 468 1
 555 0018 1846     		mov	r0, r3
 556 001a 1437     		adds	r7, r7, #20
 557              		.cfi_def_cfa_offset 4
 558 001c BD46     		mov	sp, r7
 559              		.cfi_def_cfa_register 13
 560              		@ sp needed
 561 001e 5DF8047B 		ldr	r7, [sp], #4
 562              		.cfi_restore 7
 563              		.cfi_def_cfa_offset 0
 564 0022 7047     		bx	lr
 565              	.L27:
 566              		.align	2
 567              	.L26:
 568 0024 142C0140 		.word	1073818644
 569              		.cfi_endproc
 570              	.LFE132:
 572              		.section	.text.SDIO_DataConfig,"ax",%progbits
 573              		.align	1
 574              		.global	SDIO_DataConfig
ARM GAS  /tmp/ccfRZQXH.s 			page 19


 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 579              	SDIO_DataConfig:
 580              	.LFB133:
 469:./Lib/Src/stm32f4xx_sdio.c **** 
 470:./Lib/Src/stm32f4xx_sdio.c **** /**
 471:./Lib/Src/stm32f4xx_sdio.c ****   * @}
 472:./Lib/Src/stm32f4xx_sdio.c ****   */
 473:./Lib/Src/stm32f4xx_sdio.c **** 
 474:./Lib/Src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 475:./Lib/Src/stm32f4xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 476:./Lib/Src/stm32f4xx_sdio.c ****  *
 477:./Lib/Src/stm32f4xx_sdio.c **** @verbatim   
 478:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================
 479:./Lib/Src/stm32f4xx_sdio.c ****          ##### Data path state machine (DPSM) management functions #####
 480:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================  
 481:./Lib/Src/stm32f4xx_sdio.c **** 
 482:./Lib/Src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 483:./Lib/Src/stm32f4xx_sdio.c ****   state machine (DPSM).
 484:./Lib/Src/stm32f4xx_sdio.c **** 
 485:./Lib/Src/stm32f4xx_sdio.c **** @endverbatim
 486:./Lib/Src/stm32f4xx_sdio.c ****   * @{
 487:./Lib/Src/stm32f4xx_sdio.c ****   */
 488:./Lib/Src/stm32f4xx_sdio.c **** 
 489:./Lib/Src/stm32f4xx_sdio.c **** /**
 490:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 491:./Lib/Src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 492:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 493:./Lib/Src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 494:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 495:./Lib/Src/stm32f4xx_sdio.c ****   */
 496:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 497:./Lib/Src/stm32f4xx_sdio.c **** {
 581              		.loc 1 497 1
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 16
 584              		@ frame_needed = 1, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586 0000 80B4     		push	{r7}
 587              		.cfi_def_cfa_offset 4
 588              		.cfi_offset 7, -4
 589 0002 85B0     		sub	sp, sp, #20
 590              		.cfi_def_cfa_offset 24
 591 0004 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 593 0006 7860     		str	r0, [r7, #4]
 498:./Lib/Src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 594              		.loc 1 498 12
 595 0008 0023     		movs	r3, #0
 596 000a FB60     		str	r3, [r7, #12]
 499:./Lib/Src/stm32f4xx_sdio.c ****   
 500:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 501:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 502:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 503:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 504:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
ARM GAS  /tmp/ccfRZQXH.s 			page 20


 505:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 506:./Lib/Src/stm32f4xx_sdio.c **** 
 507:./Lib/Src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 508:./Lib/Src/stm32f4xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
 509:./Lib/Src/stm32f4xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 597              		.loc 1 509 7
 598 000c 124A     		ldr	r2, .L29
 599              		.loc 1 509 37
 600 000e 7B68     		ldr	r3, [r7, #4]
 601 0010 1B68     		ldr	r3, [r3]
 602              		.loc 1 509 16
 603 0012 5362     		str	r3, [r2, #36]
 510:./Lib/Src/stm32f4xx_sdio.c **** 
 511:./Lib/Src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 512:./Lib/Src/stm32f4xx_sdio.c ****   /* Set the SDIO DataLength value */
 513:./Lib/Src/stm32f4xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 604              		.loc 1 513 7
 605 0014 104A     		ldr	r2, .L29
 606              		.loc 1 513 35
 607 0016 7B68     		ldr	r3, [r7, #4]
 608 0018 5B68     		ldr	r3, [r3, #4]
 609              		.loc 1 513 14
 610 001a 9362     		str	r3, [r2, #40]
 514:./Lib/Src/stm32f4xx_sdio.c **** 
 515:./Lib/Src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 516:./Lib/Src/stm32f4xx_sdio.c ****   /* Get the SDIO DCTRL value */
 517:./Lib/Src/stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 611              		.loc 1 517 16
 612 001c 0E4B     		ldr	r3, .L29
 613              		.loc 1 517 10
 614 001e DB6A     		ldr	r3, [r3, #44]
 615 0020 FB60     		str	r3, [r7, #12]
 518:./Lib/Src/stm32f4xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 519:./Lib/Src/stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 616              		.loc 1 519 10
 617 0022 FB68     		ldr	r3, [r7, #12]
 618 0024 23F0F703 		bic	r3, r3, #247
 619 0028 FB60     		str	r3, [r7, #12]
 520:./Lib/Src/stm32f4xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 521:./Lib/Src/stm32f4xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 522:./Lib/Src/stm32f4xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 523:./Lib/Src/stm32f4xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 524:./Lib/Src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 620              		.loc 1 524 42
 621 002a 7B68     		ldr	r3, [r7, #4]
 622 002c 9A68     		ldr	r2, [r3, #8]
 623              		.loc 1 524 84
 624 002e 7B68     		ldr	r3, [r7, #4]
 625 0030 DB68     		ldr	r3, [r3, #12]
 626              		.loc 1 524 63
 627 0032 1A43     		orrs	r2, r2, r3
 525:./Lib/Src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 628              		.loc 1 525 33
 629 0034 7B68     		ldr	r3, [r7, #4]
 630 0036 1B69     		ldr	r3, [r3, #16]
 631              		.loc 1 525 12
 632 0038 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/ccfRZQXH.s 			page 21


 633              		.loc 1 525 74
 634 003a 7B68     		ldr	r3, [r7, #4]
 635 003c 5B69     		ldr	r3, [r3, #20]
 636              		.loc 1 525 53
 637 003e 1343     		orrs	r3, r3, r2
 524:./Lib/Src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 638              		.loc 1 524 10
 639 0040 FA68     		ldr	r2, [r7, #12]
 640 0042 1343     		orrs	r3, r3, r2
 641 0044 FB60     		str	r3, [r7, #12]
 526:./Lib/Src/stm32f4xx_sdio.c **** 
 527:./Lib/Src/stm32f4xx_sdio.c ****   /* Write to SDIO DCTRL */
 528:./Lib/Src/stm32f4xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 642              		.loc 1 528 7
 643 0046 044A     		ldr	r2, .L29
 644              		.loc 1 528 15
 645 0048 FB68     		ldr	r3, [r7, #12]
 646 004a D362     		str	r3, [r2, #44]
 529:./Lib/Src/stm32f4xx_sdio.c **** }
 647              		.loc 1 529 1
 648 004c 00BF     		nop
 649 004e 1437     		adds	r7, r7, #20
 650              		.cfi_def_cfa_offset 4
 651 0050 BD46     		mov	sp, r7
 652              		.cfi_def_cfa_register 13
 653              		@ sp needed
 654 0052 5DF8047B 		ldr	r7, [sp], #4
 655              		.cfi_restore 7
 656              		.cfi_def_cfa_offset 0
 657 0056 7047     		bx	lr
 658              	.L30:
 659              		.align	2
 660              	.L29:
 661 0058 002C0140 		.word	1073818624
 662              		.cfi_endproc
 663              	.LFE133:
 665              		.section	.text.SDIO_DataStructInit,"ax",%progbits
 666              		.align	1
 667              		.global	SDIO_DataStructInit
 668              		.syntax unified
 669              		.thumb
 670              		.thumb_func
 672              	SDIO_DataStructInit:
 673              	.LFB134:
 530:./Lib/Src/stm32f4xx_sdio.c **** 
 531:./Lib/Src/stm32f4xx_sdio.c **** /**
 532:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 533:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 534:./Lib/Src/stm32f4xx_sdio.c ****   *         which will be initialized.
 535:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 536:./Lib/Src/stm32f4xx_sdio.c ****   */
 537:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 538:./Lib/Src/stm32f4xx_sdio.c **** {
 674              		.loc 1 538 1
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 8
 677              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccfRZQXH.s 			page 22


 678              		@ link register save eliminated.
 679 0000 80B4     		push	{r7}
 680              		.cfi_def_cfa_offset 4
 681              		.cfi_offset 7, -4
 682 0002 83B0     		sub	sp, sp, #12
 683              		.cfi_def_cfa_offset 16
 684 0004 00AF     		add	r7, sp, #0
 685              		.cfi_def_cfa_register 7
 686 0006 7860     		str	r0, [r7, #4]
 539:./Lib/Src/stm32f4xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 540:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 687              		.loc 1 540 41
 688 0008 7B68     		ldr	r3, [r7, #4]
 689 000a 4FF0FF32 		mov	r2, #-1
 690 000e 1A60     		str	r2, [r3]
 541:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 691              		.loc 1 541 40
 692 0010 7B68     		ldr	r3, [r7, #4]
 693 0012 0022     		movs	r2, #0
 694 0014 5A60     		str	r2, [r3, #4]
 542:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 695              		.loc 1 542 43
 696 0016 7B68     		ldr	r3, [r7, #4]
 697 0018 0022     		movs	r2, #0
 698 001a 9A60     		str	r2, [r3, #8]
 543:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 699              		.loc 1 543 41
 700 001c 7B68     		ldr	r3, [r7, #4]
 701 001e 0022     		movs	r2, #0
 702 0020 DA60     		str	r2, [r3, #12]
 544:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 703              		.loc 1 544 42
 704 0022 7B68     		ldr	r3, [r7, #4]
 705 0024 0022     		movs	r2, #0
 706 0026 1A61     		str	r2, [r3, #16]
 545:./Lib/Src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 707              		.loc 1 545 34
 708 0028 7B68     		ldr	r3, [r7, #4]
 709 002a 0022     		movs	r2, #0
 710 002c 5A61     		str	r2, [r3, #20]
 546:./Lib/Src/stm32f4xx_sdio.c **** }
 711              		.loc 1 546 1
 712 002e 00BF     		nop
 713 0030 0C37     		adds	r7, r7, #12
 714              		.cfi_def_cfa_offset 4
 715 0032 BD46     		mov	sp, r7
 716              		.cfi_def_cfa_register 13
 717              		@ sp needed
 718 0034 5DF8047B 		ldr	r7, [sp], #4
 719              		.cfi_restore 7
 720              		.cfi_def_cfa_offset 0
 721 0038 7047     		bx	lr
 722              		.cfi_endproc
 723              	.LFE134:
 725              		.section	.text.SDIO_GetDataCounter,"ax",%progbits
 726              		.align	1
 727              		.global	SDIO_GetDataCounter
ARM GAS  /tmp/ccfRZQXH.s 			page 23


 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 732              	SDIO_GetDataCounter:
 733              	.LFB135:
 547:./Lib/Src/stm32f4xx_sdio.c **** 
 548:./Lib/Src/stm32f4xx_sdio.c **** /**
 549:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 550:./Lib/Src/stm32f4xx_sdio.c ****   * @param  None
 551:./Lib/Src/stm32f4xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 552:./Lib/Src/stm32f4xx_sdio.c ****   */
 553:./Lib/Src/stm32f4xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 554:./Lib/Src/stm32f4xx_sdio.c **** { 
 734              		.loc 1 554 1
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 739 0000 80B4     		push	{r7}
 740              		.cfi_def_cfa_offset 4
 741              		.cfi_offset 7, -4
 742 0002 00AF     		add	r7, sp, #0
 743              		.cfi_def_cfa_register 7
 555:./Lib/Src/stm32f4xx_sdio.c ****   return SDIO->DCOUNT;
 744              		.loc 1 555 14
 745 0004 034B     		ldr	r3, .L34
 746 0006 1B6B     		ldr	r3, [r3, #48]
 556:./Lib/Src/stm32f4xx_sdio.c **** }
 747              		.loc 1 556 1
 748 0008 1846     		mov	r0, r3
 749 000a BD46     		mov	sp, r7
 750              		.cfi_def_cfa_register 13
 751              		@ sp needed
 752 000c 5DF8047B 		ldr	r7, [sp], #4
 753              		.cfi_restore 7
 754              		.cfi_def_cfa_offset 0
 755 0010 7047     		bx	lr
 756              	.L35:
 757 0012 00BF     		.align	2
 758              	.L34:
 759 0014 002C0140 		.word	1073818624
 760              		.cfi_endproc
 761              	.LFE135:
 763              		.section	.text.SDIO_ReadData,"ax",%progbits
 764              		.align	1
 765              		.global	SDIO_ReadData
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 770              	SDIO_ReadData:
 771              	.LFB136:
 557:./Lib/Src/stm32f4xx_sdio.c **** 
 558:./Lib/Src/stm32f4xx_sdio.c **** /**
 559:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 560:./Lib/Src/stm32f4xx_sdio.c ****   * @param  None
 561:./Lib/Src/stm32f4xx_sdio.c ****   * @retval Data received
 562:./Lib/Src/stm32f4xx_sdio.c ****   */
ARM GAS  /tmp/ccfRZQXH.s 			page 24


 563:./Lib/Src/stm32f4xx_sdio.c **** uint32_t SDIO_ReadData(void)
 564:./Lib/Src/stm32f4xx_sdio.c **** { 
 772              		.loc 1 564 1
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777 0000 80B4     		push	{r7}
 778              		.cfi_def_cfa_offset 4
 779              		.cfi_offset 7, -4
 780 0002 00AF     		add	r7, sp, #0
 781              		.cfi_def_cfa_register 7
 565:./Lib/Src/stm32f4xx_sdio.c ****   return SDIO->FIFO;
 782              		.loc 1 565 14
 783 0004 034B     		ldr	r3, .L38
 784 0006 D3F88030 		ldr	r3, [r3, #128]
 566:./Lib/Src/stm32f4xx_sdio.c **** }
 785              		.loc 1 566 1
 786 000a 1846     		mov	r0, r3
 787 000c BD46     		mov	sp, r7
 788              		.cfi_def_cfa_register 13
 789              		@ sp needed
 790 000e 5DF8047B 		ldr	r7, [sp], #4
 791              		.cfi_restore 7
 792              		.cfi_def_cfa_offset 0
 793 0012 7047     		bx	lr
 794              	.L39:
 795              		.align	2
 796              	.L38:
 797 0014 002C0140 		.word	1073818624
 798              		.cfi_endproc
 799              	.LFE136:
 801              		.section	.text.SDIO_WriteData,"ax",%progbits
 802              		.align	1
 803              		.global	SDIO_WriteData
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 808              	SDIO_WriteData:
 809              	.LFB137:
 567:./Lib/Src/stm32f4xx_sdio.c **** 
 568:./Lib/Src/stm32f4xx_sdio.c **** /**
 569:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 570:./Lib/Src/stm32f4xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 571:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 572:./Lib/Src/stm32f4xx_sdio.c ****   */
 573:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 574:./Lib/Src/stm32f4xx_sdio.c **** { 
 810              		.loc 1 574 1
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 8
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815 0000 80B4     		push	{r7}
 816              		.cfi_def_cfa_offset 4
 817              		.cfi_offset 7, -4
 818 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccfRZQXH.s 			page 25


 819              		.cfi_def_cfa_offset 16
 820 0004 00AF     		add	r7, sp, #0
 821              		.cfi_def_cfa_register 7
 822 0006 7860     		str	r0, [r7, #4]
 575:./Lib/Src/stm32f4xx_sdio.c ****   SDIO->FIFO = Data;
 823              		.loc 1 575 7
 824 0008 044A     		ldr	r2, .L41
 825              		.loc 1 575 14
 826 000a 7B68     		ldr	r3, [r7, #4]
 827 000c C2F88030 		str	r3, [r2, #128]
 576:./Lib/Src/stm32f4xx_sdio.c **** }
 828              		.loc 1 576 1
 829 0010 00BF     		nop
 830 0012 0C37     		adds	r7, r7, #12
 831              		.cfi_def_cfa_offset 4
 832 0014 BD46     		mov	sp, r7
 833              		.cfi_def_cfa_register 13
 834              		@ sp needed
 835 0016 5DF8047B 		ldr	r7, [sp], #4
 836              		.cfi_restore 7
 837              		.cfi_def_cfa_offset 0
 838 001a 7047     		bx	lr
 839              	.L42:
 840              		.align	2
 841              	.L41:
 842 001c 002C0140 		.word	1073818624
 843              		.cfi_endproc
 844              	.LFE137:
 846              		.section	.text.SDIO_GetFIFOCount,"ax",%progbits
 847              		.align	1
 848              		.global	SDIO_GetFIFOCount
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 853              	SDIO_GetFIFOCount:
 854              	.LFB138:
 577:./Lib/Src/stm32f4xx_sdio.c **** 
 578:./Lib/Src/stm32f4xx_sdio.c **** /**
 579:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 580:./Lib/Src/stm32f4xx_sdio.c ****   * @param  None
 581:./Lib/Src/stm32f4xx_sdio.c ****   * @retval Remaining number of words.
 582:./Lib/Src/stm32f4xx_sdio.c ****   */
 583:./Lib/Src/stm32f4xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 584:./Lib/Src/stm32f4xx_sdio.c **** { 
 855              		.loc 1 584 1
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 1, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 860 0000 80B4     		push	{r7}
 861              		.cfi_def_cfa_offset 4
 862              		.cfi_offset 7, -4
 863 0002 00AF     		add	r7, sp, #0
 864              		.cfi_def_cfa_register 7
 585:./Lib/Src/stm32f4xx_sdio.c ****   return SDIO->FIFOCNT;
 865              		.loc 1 585 14
 866 0004 034B     		ldr	r3, .L45
ARM GAS  /tmp/ccfRZQXH.s 			page 26


 867 0006 9B6C     		ldr	r3, [r3, #72]
 586:./Lib/Src/stm32f4xx_sdio.c **** }
 868              		.loc 1 586 1
 869 0008 1846     		mov	r0, r3
 870 000a BD46     		mov	sp, r7
 871              		.cfi_def_cfa_register 13
 872              		@ sp needed
 873 000c 5DF8047B 		ldr	r7, [sp], #4
 874              		.cfi_restore 7
 875              		.cfi_def_cfa_offset 0
 876 0010 7047     		bx	lr
 877              	.L46:
 878 0012 00BF     		.align	2
 879              	.L45:
 880 0014 002C0140 		.word	1073818624
 881              		.cfi_endproc
 882              	.LFE138:
 884              		.section	.text.SDIO_StartSDIOReadWait,"ax",%progbits
 885              		.align	1
 886              		.global	SDIO_StartSDIOReadWait
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 891              	SDIO_StartSDIOReadWait:
 892              	.LFB139:
 587:./Lib/Src/stm32f4xx_sdio.c **** 
 588:./Lib/Src/stm32f4xx_sdio.c **** /**
 589:./Lib/Src/stm32f4xx_sdio.c ****   * @}
 590:./Lib/Src/stm32f4xx_sdio.c ****   */
 591:./Lib/Src/stm32f4xx_sdio.c **** 
 592:./Lib/Src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 593:./Lib/Src/stm32f4xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 594:./Lib/Src/stm32f4xx_sdio.c ****  *
 595:./Lib/Src/stm32f4xx_sdio.c **** @verbatim   
 596:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================
 597:./Lib/Src/stm32f4xx_sdio.c ****                ##### SDIO IO Cards mode management functions #####
 598:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================  
 599:./Lib/Src/stm32f4xx_sdio.c **** 
 600:./Lib/Src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 601:./Lib/Src/stm32f4xx_sdio.c **** 
 602:./Lib/Src/stm32f4xx_sdio.c **** @endverbatim
 603:./Lib/Src/stm32f4xx_sdio.c ****   * @{
 604:./Lib/Src/stm32f4xx_sdio.c ****   */
 605:./Lib/Src/stm32f4xx_sdio.c **** 
 606:./Lib/Src/stm32f4xx_sdio.c **** /**
 607:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 608:./Lib/Src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 609:./Lib/Src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 610:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 611:./Lib/Src/stm32f4xx_sdio.c ****   */
 612:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 613:./Lib/Src/stm32f4xx_sdio.c **** { 
 893              		.loc 1 613 1
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 8
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897              		@ link register save eliminated.
ARM GAS  /tmp/ccfRZQXH.s 			page 27


 898 0000 80B4     		push	{r7}
 899              		.cfi_def_cfa_offset 4
 900              		.cfi_offset 7, -4
 901 0002 83B0     		sub	sp, sp, #12
 902              		.cfi_def_cfa_offset 16
 903 0004 00AF     		add	r7, sp, #0
 904              		.cfi_def_cfa_register 7
 905 0006 0346     		mov	r3, r0
 906 0008 FB71     		strb	r3, [r7, #7]
 614:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 615:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 616:./Lib/Src/stm32f4xx_sdio.c ****   
 617:./Lib/Src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 907              		.loc 1 617 3
 908 000a 044A     		ldr	r2, .L48
 909              		.loc 1 617 41
 910 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 911              		.loc 1 617 39
 912 000e 1360     		str	r3, [r2]
 618:./Lib/Src/stm32f4xx_sdio.c **** }
 913              		.loc 1 618 1
 914 0010 00BF     		nop
 915 0012 0C37     		adds	r7, r7, #12
 916              		.cfi_def_cfa_offset 4
 917 0014 BD46     		mov	sp, r7
 918              		.cfi_def_cfa_register 13
 919              		@ sp needed
 920 0016 5DF8047B 		ldr	r7, [sp], #4
 921              		.cfi_restore 7
 922              		.cfi_def_cfa_offset 0
 923 001a 7047     		bx	lr
 924              	.L49:
 925              		.align	2
 926              	.L48:
 927 001c A0852542 		.word	1109755296
 928              		.cfi_endproc
 929              	.LFE139:
 931              		.section	.text.SDIO_StopSDIOReadWait,"ax",%progbits
 932              		.align	1
 933              		.global	SDIO_StopSDIOReadWait
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 938              	SDIO_StopSDIOReadWait:
 939              	.LFB140:
 619:./Lib/Src/stm32f4xx_sdio.c **** 
 620:./Lib/Src/stm32f4xx_sdio.c **** /**
 621:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 622:./Lib/Src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 623:./Lib/Src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 624:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 625:./Lib/Src/stm32f4xx_sdio.c ****   */
 626:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 627:./Lib/Src/stm32f4xx_sdio.c **** { 
 940              		.loc 1 627 1
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccfRZQXH.s 			page 28


 943              		@ frame_needed = 1, uses_anonymous_args = 0
 944              		@ link register save eliminated.
 945 0000 80B4     		push	{r7}
 946              		.cfi_def_cfa_offset 4
 947              		.cfi_offset 7, -4
 948 0002 83B0     		sub	sp, sp, #12
 949              		.cfi_def_cfa_offset 16
 950 0004 00AF     		add	r7, sp, #0
 951              		.cfi_def_cfa_register 7
 952 0006 0346     		mov	r3, r0
 953 0008 FB71     		strb	r3, [r7, #7]
 628:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 629:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 630:./Lib/Src/stm32f4xx_sdio.c ****   
 631:./Lib/Src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 954              		.loc 1 631 3
 955 000a 044A     		ldr	r2, .L51
 956              		.loc 1 631 40
 957 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 958              		.loc 1 631 38
 959 000e 1360     		str	r3, [r2]
 632:./Lib/Src/stm32f4xx_sdio.c **** }
 960              		.loc 1 632 1
 961 0010 00BF     		nop
 962 0012 0C37     		adds	r7, r7, #12
 963              		.cfi_def_cfa_offset 4
 964 0014 BD46     		mov	sp, r7
 965              		.cfi_def_cfa_register 13
 966              		@ sp needed
 967 0016 5DF8047B 		ldr	r7, [sp], #4
 968              		.cfi_restore 7
 969              		.cfi_def_cfa_offset 0
 970 001a 7047     		bx	lr
 971              	.L52:
 972              		.align	2
 973              	.L51:
 974 001c A4852542 		.word	1109755300
 975              		.cfi_endproc
 976              	.LFE140:
 978              		.section	.text.SDIO_SetSDIOReadWaitMode,"ax",%progbits
 979              		.align	1
 980              		.global	SDIO_SetSDIOReadWaitMode
 981              		.syntax unified
 982              		.thumb
 983              		.thumb_func
 985              	SDIO_SetSDIOReadWaitMode:
 986              	.LFB141:
 633:./Lib/Src/stm32f4xx_sdio.c **** 
 634:./Lib/Src/stm32f4xx_sdio.c **** /**
 635:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 636:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 637:./Lib/Src/stm32f4xx_sdio.c ****   *          This parameter can be:
 638:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 639:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 640:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 641:./Lib/Src/stm32f4xx_sdio.c ****   */
 642:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
ARM GAS  /tmp/ccfRZQXH.s 			page 29


 643:./Lib/Src/stm32f4xx_sdio.c **** {
 987              		.loc 1 643 1
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 8
 990              		@ frame_needed = 1, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 992 0000 80B4     		push	{r7}
 993              		.cfi_def_cfa_offset 4
 994              		.cfi_offset 7, -4
 995 0002 83B0     		sub	sp, sp, #12
 996              		.cfi_def_cfa_offset 16
 997 0004 00AF     		add	r7, sp, #0
 998              		.cfi_def_cfa_register 7
 999 0006 7860     		str	r0, [r7, #4]
 644:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 645:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 646:./Lib/Src/stm32f4xx_sdio.c ****   
 647:./Lib/Src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 1000              		.loc 1 647 3
 1001 0008 044A     		ldr	r2, .L54
 1002              		.loc 1 647 37
 1003 000a 7B68     		ldr	r3, [r7, #4]
 1004 000c 1360     		str	r3, [r2]
 648:./Lib/Src/stm32f4xx_sdio.c **** }
 1005              		.loc 1 648 1
 1006 000e 00BF     		nop
 1007 0010 0C37     		adds	r7, r7, #12
 1008              		.cfi_def_cfa_offset 4
 1009 0012 BD46     		mov	sp, r7
 1010              		.cfi_def_cfa_register 13
 1011              		@ sp needed
 1012 0014 5DF8047B 		ldr	r7, [sp], #4
 1013              		.cfi_restore 7
 1014              		.cfi_def_cfa_offset 0
 1015 0018 7047     		bx	lr
 1016              	.L55:
 1017 001a 00BF     		.align	2
 1018              	.L54:
 1019 001c A8852542 		.word	1109755304
 1020              		.cfi_endproc
 1021              	.LFE141:
 1023              		.section	.text.SDIO_SetSDIOOperation,"ax",%progbits
 1024              		.align	1
 1025              		.global	SDIO_SetSDIOOperation
 1026              		.syntax unified
 1027              		.thumb
 1028              		.thumb_func
 1030              	SDIO_SetSDIOOperation:
 1031              	.LFB142:
 649:./Lib/Src/stm32f4xx_sdio.c **** 
 650:./Lib/Src/stm32f4xx_sdio.c **** /**
 651:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 652:./Lib/Src/stm32f4xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 653:./Lib/Src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 654:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 655:./Lib/Src/stm32f4xx_sdio.c ****   */
 656:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
ARM GAS  /tmp/ccfRZQXH.s 			page 30


 657:./Lib/Src/stm32f4xx_sdio.c **** { 
 1032              		.loc 1 657 1
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 8
 1035              		@ frame_needed = 1, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
 1037 0000 80B4     		push	{r7}
 1038              		.cfi_def_cfa_offset 4
 1039              		.cfi_offset 7, -4
 1040 0002 83B0     		sub	sp, sp, #12
 1041              		.cfi_def_cfa_offset 16
 1042 0004 00AF     		add	r7, sp, #0
 1043              		.cfi_def_cfa_register 7
 1044 0006 0346     		mov	r3, r0
 1045 0008 FB71     		strb	r3, [r7, #7]
 658:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 659:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 660:./Lib/Src/stm32f4xx_sdio.c ****   
 661:./Lib/Src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 1046              		.loc 1 661 3
 1047 000a 044A     		ldr	r2, .L57
 1048              		.loc 1 661 40
 1049 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1050              		.loc 1 661 38
 1051 000e 1360     		str	r3, [r2]
 662:./Lib/Src/stm32f4xx_sdio.c **** }
 1052              		.loc 1 662 1
 1053 0010 00BF     		nop
 1054 0012 0C37     		adds	r7, r7, #12
 1055              		.cfi_def_cfa_offset 4
 1056 0014 BD46     		mov	sp, r7
 1057              		.cfi_def_cfa_register 13
 1058              		@ sp needed
 1059 0016 5DF8047B 		ldr	r7, [sp], #4
 1060              		.cfi_restore 7
 1061              		.cfi_def_cfa_offset 0
 1062 001a 7047     		bx	lr
 1063              	.L58:
 1064              		.align	2
 1065              	.L57:
 1066 001c AC852542 		.word	1109755308
 1067              		.cfi_endproc
 1068              	.LFE142:
 1070              		.section	.text.SDIO_SendSDIOSuspendCmd,"ax",%progbits
 1071              		.align	1
 1072              		.global	SDIO_SendSDIOSuspendCmd
 1073              		.syntax unified
 1074              		.thumb
 1075              		.thumb_func
 1077              	SDIO_SendSDIOSuspendCmd:
 1078              	.LFB143:
 663:./Lib/Src/stm32f4xx_sdio.c **** 
 664:./Lib/Src/stm32f4xx_sdio.c **** /**
 665:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 666:./Lib/Src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 667:./Lib/Src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 668:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
ARM GAS  /tmp/ccfRZQXH.s 			page 31


 669:./Lib/Src/stm32f4xx_sdio.c ****   */
 670:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 671:./Lib/Src/stm32f4xx_sdio.c **** { 
 1079              		.loc 1 671 1
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 8
 1082              		@ frame_needed = 1, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 1084 0000 80B4     		push	{r7}
 1085              		.cfi_def_cfa_offset 4
 1086              		.cfi_offset 7, -4
 1087 0002 83B0     		sub	sp, sp, #12
 1088              		.cfi_def_cfa_offset 16
 1089 0004 00AF     		add	r7, sp, #0
 1090              		.cfi_def_cfa_register 7
 1091 0006 0346     		mov	r3, r0
 1092 0008 FB71     		strb	r3, [r7, #7]
 672:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 673:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 674:./Lib/Src/stm32f4xx_sdio.c ****   
 675:./Lib/Src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 1093              		.loc 1 675 3
 1094 000a 044A     		ldr	r2, .L60
 1095              		.loc 1 675 43
 1096 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1097              		.loc 1 675 41
 1098 000e 1360     		str	r3, [r2]
 676:./Lib/Src/stm32f4xx_sdio.c **** }
 1099              		.loc 1 676 1
 1100 0010 00BF     		nop
 1101 0012 0C37     		adds	r7, r7, #12
 1102              		.cfi_def_cfa_offset 4
 1103 0014 BD46     		mov	sp, r7
 1104              		.cfi_def_cfa_register 13
 1105              		@ sp needed
 1106 0016 5DF8047B 		ldr	r7, [sp], #4
 1107              		.cfi_restore 7
 1108              		.cfi_def_cfa_offset 0
 1109 001a 7047     		bx	lr
 1110              	.L61:
 1111              		.align	2
 1112              	.L60:
 1113 001c AC812542 		.word	1109754284
 1114              		.cfi_endproc
 1115              	.LFE143:
 1117              		.section	.text.SDIO_CommandCompletionCmd,"ax",%progbits
 1118              		.align	1
 1119              		.global	SDIO_CommandCompletionCmd
 1120              		.syntax unified
 1121              		.thumb
 1122              		.thumb_func
 1124              	SDIO_CommandCompletionCmd:
 1125              	.LFB144:
 677:./Lib/Src/stm32f4xx_sdio.c **** 
 678:./Lib/Src/stm32f4xx_sdio.c **** /**
 679:./Lib/Src/stm32f4xx_sdio.c ****   * @}
 680:./Lib/Src/stm32f4xx_sdio.c ****   */
ARM GAS  /tmp/ccfRZQXH.s 			page 32


 681:./Lib/Src/stm32f4xx_sdio.c **** 
 682:./Lib/Src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 683:./Lib/Src/stm32f4xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 684:./Lib/Src/stm32f4xx_sdio.c ****  *
 685:./Lib/Src/stm32f4xx_sdio.c **** @verbatim   
 686:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================
 687:./Lib/Src/stm32f4xx_sdio.c ****                   ##### CE-ATA mode management functions #####
 688:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================  
 689:./Lib/Src/stm32f4xx_sdio.c **** 
 690:./Lib/Src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 691:./Lib/Src/stm32f4xx_sdio.c **** 
 692:./Lib/Src/stm32f4xx_sdio.c **** @endverbatim
 693:./Lib/Src/stm32f4xx_sdio.c ****   * @{
 694:./Lib/Src/stm32f4xx_sdio.c ****   */
 695:./Lib/Src/stm32f4xx_sdio.c **** 
 696:./Lib/Src/stm32f4xx_sdio.c **** /**
 697:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 698:./Lib/Src/stm32f4xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 699:./Lib/Src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 700:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 701:./Lib/Src/stm32f4xx_sdio.c ****   */
 702:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 703:./Lib/Src/stm32f4xx_sdio.c **** { 
 1126              		.loc 1 703 1
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 8
 1129              		@ frame_needed = 1, uses_anonymous_args = 0
 1130              		@ link register save eliminated.
 1131 0000 80B4     		push	{r7}
 1132              		.cfi_def_cfa_offset 4
 1133              		.cfi_offset 7, -4
 1134 0002 83B0     		sub	sp, sp, #12
 1135              		.cfi_def_cfa_offset 16
 1136 0004 00AF     		add	r7, sp, #0
 1137              		.cfi_def_cfa_register 7
 1138 0006 0346     		mov	r3, r0
 1139 0008 FB71     		strb	r3, [r7, #7]
 704:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 705:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 706:./Lib/Src/stm32f4xx_sdio.c ****   
 707:./Lib/Src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 1140              		.loc 1 707 3
 1141 000a 044A     		ldr	r2, .L63
 1142              		.loc 1 707 42
 1143 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1144              		.loc 1 707 40
 1145 000e 1360     		str	r3, [r2]
 708:./Lib/Src/stm32f4xx_sdio.c **** }
 1146              		.loc 1 708 1
 1147 0010 00BF     		nop
 1148 0012 0C37     		adds	r7, r7, #12
 1149              		.cfi_def_cfa_offset 4
 1150 0014 BD46     		mov	sp, r7
 1151              		.cfi_def_cfa_register 13
 1152              		@ sp needed
 1153 0016 5DF8047B 		ldr	r7, [sp], #4
 1154              		.cfi_restore 7
ARM GAS  /tmp/ccfRZQXH.s 			page 33


 1155              		.cfi_def_cfa_offset 0
 1156 001a 7047     		bx	lr
 1157              	.L64:
 1158              		.align	2
 1159              	.L63:
 1160 001c B0812542 		.word	1109754288
 1161              		.cfi_endproc
 1162              	.LFE144:
 1164              		.section	.text.SDIO_CEATAITCmd,"ax",%progbits
 1165              		.align	1
 1166              		.global	SDIO_CEATAITCmd
 1167              		.syntax unified
 1168              		.thumb
 1169              		.thumb_func
 1171              	SDIO_CEATAITCmd:
 1172              	.LFB145:
 709:./Lib/Src/stm32f4xx_sdio.c **** 
 710:./Lib/Src/stm32f4xx_sdio.c **** /**
 711:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 712:./Lib/Src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 713:./Lib/Src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 714:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 715:./Lib/Src/stm32f4xx_sdio.c ****   */
 716:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 717:./Lib/Src/stm32f4xx_sdio.c **** { 
 1173              		.loc 1 717 1
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 8
 1176              		@ frame_needed = 1, uses_anonymous_args = 0
 1177              		@ link register save eliminated.
 1178 0000 80B4     		push	{r7}
 1179              		.cfi_def_cfa_offset 4
 1180              		.cfi_offset 7, -4
 1181 0002 83B0     		sub	sp, sp, #12
 1182              		.cfi_def_cfa_offset 16
 1183 0004 00AF     		add	r7, sp, #0
 1184              		.cfi_def_cfa_register 7
 1185 0006 0346     		mov	r3, r0
 1186 0008 FB71     		strb	r3, [r7, #7]
 718:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 719:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 720:./Lib/Src/stm32f4xx_sdio.c ****   
 721:./Lib/Src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 1187              		.loc 1 721 50
 1188 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1189              		.loc 1 721 36
 1190 000c 03F00103 		and	r3, r3, #1
 1191 0010 002B     		cmp	r3, #0
 1192 0012 0CBF     		ite	eq
 1193 0014 0123     		moveq	r3, #1
 1194 0016 0023     		movne	r3, #0
 1195 0018 DAB2     		uxtb	r2, r3
 1196              		.loc 1 721 3
 1197 001a 044B     		ldr	r3, .L66
 1198              		.loc 1 721 34
 1199 001c 1A60     		str	r2, [r3]
 722:./Lib/Src/stm32f4xx_sdio.c **** }
ARM GAS  /tmp/ccfRZQXH.s 			page 34


 1200              		.loc 1 722 1
 1201 001e 00BF     		nop
 1202 0020 0C37     		adds	r7, r7, #12
 1203              		.cfi_def_cfa_offset 4
 1204 0022 BD46     		mov	sp, r7
 1205              		.cfi_def_cfa_register 13
 1206              		@ sp needed
 1207 0024 5DF8047B 		ldr	r7, [sp], #4
 1208              		.cfi_restore 7
 1209              		.cfi_def_cfa_offset 0
 1210 0028 7047     		bx	lr
 1211              	.L67:
 1212 002a 00BF     		.align	2
 1213              	.L66:
 1214 002c B4812542 		.word	1109754292
 1215              		.cfi_endproc
 1216              	.LFE145:
 1218              		.section	.text.SDIO_SendCEATACmd,"ax",%progbits
 1219              		.align	1
 1220              		.global	SDIO_SendCEATACmd
 1221              		.syntax unified
 1222              		.thumb
 1223              		.thumb_func
 1225              	SDIO_SendCEATACmd:
 1226              	.LFB146:
 723:./Lib/Src/stm32f4xx_sdio.c **** 
 724:./Lib/Src/stm32f4xx_sdio.c **** /**
 725:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 726:./Lib/Src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 727:./Lib/Src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 728:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 729:./Lib/Src/stm32f4xx_sdio.c ****   */
 730:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 731:./Lib/Src/stm32f4xx_sdio.c **** { 
 1227              		.loc 1 731 1
 1228              		.cfi_startproc
 1229              		@ args = 0, pretend = 0, frame = 8
 1230              		@ frame_needed = 1, uses_anonymous_args = 0
 1231              		@ link register save eliminated.
 1232 0000 80B4     		push	{r7}
 1233              		.cfi_def_cfa_offset 4
 1234              		.cfi_offset 7, -4
 1235 0002 83B0     		sub	sp, sp, #12
 1236              		.cfi_def_cfa_offset 16
 1237 0004 00AF     		add	r7, sp, #0
 1238              		.cfi_def_cfa_register 7
 1239 0006 0346     		mov	r3, r0
 1240 0008 FB71     		strb	r3, [r7, #7]
 732:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 733:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 734:./Lib/Src/stm32f4xx_sdio.c ****   
 735:./Lib/Src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 1241              		.loc 1 735 3
 1242 000a 044A     		ldr	r2, .L69
 1243              		.loc 1 735 38
 1244 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1245              		.loc 1 735 36
ARM GAS  /tmp/ccfRZQXH.s 			page 35


 1246 000e 1360     		str	r3, [r2]
 736:./Lib/Src/stm32f4xx_sdio.c **** }
 1247              		.loc 1 736 1
 1248 0010 00BF     		nop
 1249 0012 0C37     		adds	r7, r7, #12
 1250              		.cfi_def_cfa_offset 4
 1251 0014 BD46     		mov	sp, r7
 1252              		.cfi_def_cfa_register 13
 1253              		@ sp needed
 1254 0016 5DF8047B 		ldr	r7, [sp], #4
 1255              		.cfi_restore 7
 1256              		.cfi_def_cfa_offset 0
 1257 001a 7047     		bx	lr
 1258              	.L70:
 1259              		.align	2
 1260              	.L69:
 1261 001c B8812542 		.word	1109754296
 1262              		.cfi_endproc
 1263              	.LFE146:
 1265              		.section	.text.SDIO_DMACmd,"ax",%progbits
 1266              		.align	1
 1267              		.global	SDIO_DMACmd
 1268              		.syntax unified
 1269              		.thumb
 1270              		.thumb_func
 1272              	SDIO_DMACmd:
 1273              	.LFB147:
 737:./Lib/Src/stm32f4xx_sdio.c **** 
 738:./Lib/Src/stm32f4xx_sdio.c **** /**
 739:./Lib/Src/stm32f4xx_sdio.c ****   * @}
 740:./Lib/Src/stm32f4xx_sdio.c ****   */
 741:./Lib/Src/stm32f4xx_sdio.c **** 
 742:./Lib/Src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 743:./Lib/Src/stm32f4xx_sdio.c ****  *  @brief   DMA transfers management functions
 744:./Lib/Src/stm32f4xx_sdio.c ****  *
 745:./Lib/Src/stm32f4xx_sdio.c **** @verbatim   
 746:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================
 747:./Lib/Src/stm32f4xx_sdio.c ****                   ##### DMA transfers management functions #####
 748:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================  
 749:./Lib/Src/stm32f4xx_sdio.c **** 
 750:./Lib/Src/stm32f4xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
 751:./Lib/Src/stm32f4xx_sdio.c **** 
 752:./Lib/Src/stm32f4xx_sdio.c **** @endverbatim
 753:./Lib/Src/stm32f4xx_sdio.c ****   * @{
 754:./Lib/Src/stm32f4xx_sdio.c ****   */
 755:./Lib/Src/stm32f4xx_sdio.c **** 
 756:./Lib/Src/stm32f4xx_sdio.c **** /**
 757:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 758:./Lib/Src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 759:./Lib/Src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 760:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 761:./Lib/Src/stm32f4xx_sdio.c ****   */
 762:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 763:./Lib/Src/stm32f4xx_sdio.c **** {
 1274              		.loc 1 763 1
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccfRZQXH.s 			page 36


 1277              		@ frame_needed = 1, uses_anonymous_args = 0
 1278              		@ link register save eliminated.
 1279 0000 80B4     		push	{r7}
 1280              		.cfi_def_cfa_offset 4
 1281              		.cfi_offset 7, -4
 1282 0002 83B0     		sub	sp, sp, #12
 1283              		.cfi_def_cfa_offset 16
 1284 0004 00AF     		add	r7, sp, #0
 1285              		.cfi_def_cfa_register 7
 1286 0006 0346     		mov	r3, r0
 1287 0008 FB71     		strb	r3, [r7, #7]
 764:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 765:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 766:./Lib/Src/stm32f4xx_sdio.c ****   
 767:./Lib/Src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 1288              		.loc 1 767 3
 1289 000a 044A     		ldr	r2, .L72
 1290              		.loc 1 767 39
 1291 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1292              		.loc 1 767 37
 1293 000e 1360     		str	r3, [r2]
 768:./Lib/Src/stm32f4xx_sdio.c **** }
 1294              		.loc 1 768 1
 1295 0010 00BF     		nop
 1296 0012 0C37     		adds	r7, r7, #12
 1297              		.cfi_def_cfa_offset 4
 1298 0014 BD46     		mov	sp, r7
 1299              		.cfi_def_cfa_register 13
 1300              		@ sp needed
 1301 0016 5DF8047B 		ldr	r7, [sp], #4
 1302              		.cfi_restore 7
 1303              		.cfi_def_cfa_offset 0
 1304 001a 7047     		bx	lr
 1305              	.L73:
 1306              		.align	2
 1307              	.L72:
 1308 001c 8C852542 		.word	1109755276
 1309              		.cfi_endproc
 1310              	.LFE147:
 1312              		.section	.text.SDIO_ITConfig,"ax",%progbits
 1313              		.align	1
 1314              		.global	SDIO_ITConfig
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1319              	SDIO_ITConfig:
 1320              	.LFB148:
 769:./Lib/Src/stm32f4xx_sdio.c **** 
 770:./Lib/Src/stm32f4xx_sdio.c **** /**
 771:./Lib/Src/stm32f4xx_sdio.c ****   * @}
 772:./Lib/Src/stm32f4xx_sdio.c ****   */
 773:./Lib/Src/stm32f4xx_sdio.c **** 
 774:./Lib/Src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 775:./Lib/Src/stm32f4xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 776:./Lib/Src/stm32f4xx_sdio.c ****  *
 777:./Lib/Src/stm32f4xx_sdio.c **** @verbatim   
 778:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================
ARM GAS  /tmp/ccfRZQXH.s 			page 37


 779:./Lib/Src/stm32f4xx_sdio.c ****               ##### Interrupts and flags management functions #####
 780:./Lib/Src/stm32f4xx_sdio.c ****  ===============================================================================  
 781:./Lib/Src/stm32f4xx_sdio.c **** 
 782:./Lib/Src/stm32f4xx_sdio.c **** 
 783:./Lib/Src/stm32f4xx_sdio.c **** @endverbatim
 784:./Lib/Src/stm32f4xx_sdio.c ****   * @{
 785:./Lib/Src/stm32f4xx_sdio.c ****   */
 786:./Lib/Src/stm32f4xx_sdio.c **** 
 787:./Lib/Src/stm32f4xx_sdio.c **** /**
 788:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 789:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 790:./Lib/Src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 791:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 792:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 793:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 794:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 795:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 796:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 797:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 798:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 799:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 800:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 801:./Lib/Src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 802:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 803:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 804:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 805:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 806:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 807:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 808:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 809:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 810:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 811:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 812:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 813:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 814:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 815:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 816:./Lib/Src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 817:./Lib/Src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 818:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None 
 819:./Lib/Src/stm32f4xx_sdio.c ****   */
 820:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 821:./Lib/Src/stm32f4xx_sdio.c **** {
 1321              		.loc 1 821 1
 1322              		.cfi_startproc
 1323              		@ args = 0, pretend = 0, frame = 8
 1324              		@ frame_needed = 1, uses_anonymous_args = 0
 1325              		@ link register save eliminated.
 1326 0000 80B4     		push	{r7}
 1327              		.cfi_def_cfa_offset 4
 1328              		.cfi_offset 7, -4
 1329 0002 83B0     		sub	sp, sp, #12
 1330              		.cfi_def_cfa_offset 16
 1331 0004 00AF     		add	r7, sp, #0
 1332              		.cfi_def_cfa_register 7
 1333 0006 7860     		str	r0, [r7, #4]
 1334 0008 0B46     		mov	r3, r1
ARM GAS  /tmp/ccfRZQXH.s 			page 38


 1335 000a FB70     		strb	r3, [r7, #3]
 822:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 823:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 824:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 825:./Lib/Src/stm32f4xx_sdio.c ****   
 826:./Lib/Src/stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 1336              		.loc 1 826 6
 1337 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1338 000e 002B     		cmp	r3, #0
 1339 0010 06D0     		beq	.L75
 827:./Lib/Src/stm32f4xx_sdio.c ****   {
 828:./Lib/Src/stm32f4xx_sdio.c ****     /* Enable the SDIO interrupts */
 829:./Lib/Src/stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 1340              		.loc 1 829 9
 1341 0012 0A4B     		ldr	r3, .L78
 1342 0014 DA6B     		ldr	r2, [r3, #60]
 1343 0016 0949     		ldr	r1, .L78
 1344              		.loc 1 829 16
 1345 0018 7B68     		ldr	r3, [r7, #4]
 1346 001a 1343     		orrs	r3, r3, r2
 1347 001c CB63     		str	r3, [r1, #60]
 830:./Lib/Src/stm32f4xx_sdio.c ****   }
 831:./Lib/Src/stm32f4xx_sdio.c ****   else
 832:./Lib/Src/stm32f4xx_sdio.c ****   {
 833:./Lib/Src/stm32f4xx_sdio.c ****     /* Disable the SDIO interrupts */
 834:./Lib/Src/stm32f4xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 835:./Lib/Src/stm32f4xx_sdio.c ****   } 
 836:./Lib/Src/stm32f4xx_sdio.c **** }
 1348              		.loc 1 836 1
 1349 001e 06E0     		b	.L77
 1350              	.L75:
 834:./Lib/Src/stm32f4xx_sdio.c ****   } 
 1351              		.loc 1 834 9
 1352 0020 064B     		ldr	r3, .L78
 1353 0022 DA6B     		ldr	r2, [r3, #60]
 834:./Lib/Src/stm32f4xx_sdio.c ****   } 
 1354              		.loc 1 834 19
 1355 0024 7B68     		ldr	r3, [r7, #4]
 1356 0026 DB43     		mvns	r3, r3
 834:./Lib/Src/stm32f4xx_sdio.c ****   } 
 1357              		.loc 1 834 9
 1358 0028 0449     		ldr	r1, .L78
 834:./Lib/Src/stm32f4xx_sdio.c ****   } 
 1359              		.loc 1 834 16
 1360 002a 1340     		ands	r3, r3, r2
 1361 002c CB63     		str	r3, [r1, #60]
 1362              	.L77:
 1363              		.loc 1 836 1
 1364 002e 00BF     		nop
 1365 0030 0C37     		adds	r7, r7, #12
 1366              		.cfi_def_cfa_offset 4
 1367 0032 BD46     		mov	sp, r7
 1368              		.cfi_def_cfa_register 13
 1369              		@ sp needed
 1370 0034 5DF8047B 		ldr	r7, [sp], #4
 1371              		.cfi_restore 7
 1372              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccfRZQXH.s 			page 39


 1373 0038 7047     		bx	lr
 1374              	.L79:
 1375 003a 00BF     		.align	2
 1376              	.L78:
 1377 003c 002C0140 		.word	1073818624
 1378              		.cfi_endproc
 1379              	.LFE148:
 1381              		.section	.text.SDIO_GetFlagStatus,"ax",%progbits
 1382              		.align	1
 1383              		.global	SDIO_GetFlagStatus
 1384              		.syntax unified
 1385              		.thumb
 1386              		.thumb_func
 1388              	SDIO_GetFlagStatus:
 1389              	.LFB149:
 837:./Lib/Src/stm32f4xx_sdio.c **** 
 838:./Lib/Src/stm32f4xx_sdio.c **** /**
 839:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 840:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 841:./Lib/Src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 842:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 843:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 844:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 845:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 846:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 847:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 848:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 849:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 850:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 851:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 852:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 853:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 854:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 855:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
 856:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 857:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 858:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 859:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 860:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 861:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 862:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 863:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 864:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 865:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 866:./Lib/Src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 867:./Lib/Src/stm32f4xx_sdio.c ****   */
 868:./Lib/Src/stm32f4xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 869:./Lib/Src/stm32f4xx_sdio.c **** { 
 1390              		.loc 1 869 1
 1391              		.cfi_startproc
 1392              		@ args = 0, pretend = 0, frame = 16
 1393              		@ frame_needed = 1, uses_anonymous_args = 0
 1394              		@ link register save eliminated.
 1395 0000 80B4     		push	{r7}
 1396              		.cfi_def_cfa_offset 4
 1397              		.cfi_offset 7, -4
 1398 0002 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/ccfRZQXH.s 			page 40


 1399              		.cfi_def_cfa_offset 24
 1400 0004 00AF     		add	r7, sp, #0
 1401              		.cfi_def_cfa_register 7
 1402 0006 7860     		str	r0, [r7, #4]
 870:./Lib/Src/stm32f4xx_sdio.c ****   FlagStatus bitstatus = RESET;
 1403              		.loc 1 870 14
 1404 0008 0023     		movs	r3, #0
 1405 000a FB73     		strb	r3, [r7, #15]
 871:./Lib/Src/stm32f4xx_sdio.c ****   
 872:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 873:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 874:./Lib/Src/stm32f4xx_sdio.c ****   
 875:./Lib/Src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 1406              		.loc 1 875 12
 1407 000c 084B     		ldr	r3, .L84
 1408 000e 5A6B     		ldr	r2, [r3, #52]
 1409              		.loc 1 875 18
 1410 0010 7B68     		ldr	r3, [r7, #4]
 1411 0012 1340     		ands	r3, r3, r2
 1412              		.loc 1 875 6
 1413 0014 002B     		cmp	r3, #0
 1414 0016 02D0     		beq	.L81
 876:./Lib/Src/stm32f4xx_sdio.c ****   {
 877:./Lib/Src/stm32f4xx_sdio.c ****     bitstatus = SET;
 1415              		.loc 1 877 15
 1416 0018 0123     		movs	r3, #1
 1417 001a FB73     		strb	r3, [r7, #15]
 1418 001c 01E0     		b	.L82
 1419              	.L81:
 878:./Lib/Src/stm32f4xx_sdio.c ****   }
 879:./Lib/Src/stm32f4xx_sdio.c ****   else
 880:./Lib/Src/stm32f4xx_sdio.c ****   {
 881:./Lib/Src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 1420              		.loc 1 881 15
 1421 001e 0023     		movs	r3, #0
 1422 0020 FB73     		strb	r3, [r7, #15]
 1423              	.L82:
 882:./Lib/Src/stm32f4xx_sdio.c ****   }
 883:./Lib/Src/stm32f4xx_sdio.c ****   return bitstatus;
 1424              		.loc 1 883 10
 1425 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 884:./Lib/Src/stm32f4xx_sdio.c **** }
 1426              		.loc 1 884 1
 1427 0024 1846     		mov	r0, r3
 1428 0026 1437     		adds	r7, r7, #20
 1429              		.cfi_def_cfa_offset 4
 1430 0028 BD46     		mov	sp, r7
 1431              		.cfi_def_cfa_register 13
 1432              		@ sp needed
 1433 002a 5DF8047B 		ldr	r7, [sp], #4
 1434              		.cfi_restore 7
 1435              		.cfi_def_cfa_offset 0
 1436 002e 7047     		bx	lr
 1437              	.L85:
 1438              		.align	2
 1439              	.L84:
 1440 0030 002C0140 		.word	1073818624
ARM GAS  /tmp/ccfRZQXH.s 			page 41


 1441              		.cfi_endproc
 1442              	.LFE149:
 1444              		.section	.text.SDIO_ClearFlag,"ax",%progbits
 1445              		.align	1
 1446              		.global	SDIO_ClearFlag
 1447              		.syntax unified
 1448              		.thumb
 1449              		.thumb_func
 1451              	SDIO_ClearFlag:
 1452              	.LFB150:
 885:./Lib/Src/stm32f4xx_sdio.c **** 
 886:./Lib/Src/stm32f4xx_sdio.c **** /**
 887:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 888:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 889:./Lib/Src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 890:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 891:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 892:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 893:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 894:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 895:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 896:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 897:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 898:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 899:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 900:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 901:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 902:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 903:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 904:./Lib/Src/stm32f4xx_sdio.c ****   */
 905:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 906:./Lib/Src/stm32f4xx_sdio.c **** { 
 1453              		.loc 1 906 1
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 8
 1456              		@ frame_needed = 1, uses_anonymous_args = 0
 1457              		@ link register save eliminated.
 1458 0000 80B4     		push	{r7}
 1459              		.cfi_def_cfa_offset 4
 1460              		.cfi_offset 7, -4
 1461 0002 83B0     		sub	sp, sp, #12
 1462              		.cfi_def_cfa_offset 16
 1463 0004 00AF     		add	r7, sp, #0
 1464              		.cfi_def_cfa_register 7
 1465 0006 7860     		str	r0, [r7, #4]
 907:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 908:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 909:./Lib/Src/stm32f4xx_sdio.c ****    
 910:./Lib/Src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 1466              		.loc 1 910 7
 1467 0008 044A     		ldr	r2, .L87
 1468              		.loc 1 910 13
 1469 000a 7B68     		ldr	r3, [r7, #4]
 1470 000c 9363     		str	r3, [r2, #56]
 911:./Lib/Src/stm32f4xx_sdio.c **** }
 1471              		.loc 1 911 1
 1472 000e 00BF     		nop
ARM GAS  /tmp/ccfRZQXH.s 			page 42


 1473 0010 0C37     		adds	r7, r7, #12
 1474              		.cfi_def_cfa_offset 4
 1475 0012 BD46     		mov	sp, r7
 1476              		.cfi_def_cfa_register 13
 1477              		@ sp needed
 1478 0014 5DF8047B 		ldr	r7, [sp], #4
 1479              		.cfi_restore 7
 1480              		.cfi_def_cfa_offset 0
 1481 0018 7047     		bx	lr
 1482              	.L88:
 1483 001a 00BF     		.align	2
 1484              	.L87:
 1485 001c 002C0140 		.word	1073818624
 1486              		.cfi_endproc
 1487              	.LFE150:
 1489              		.section	.text.SDIO_GetITStatus,"ax",%progbits
 1490              		.align	1
 1491              		.global	SDIO_GetITStatus
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1496              	SDIO_GetITStatus:
 1497              	.LFB151:
 912:./Lib/Src/stm32f4xx_sdio.c **** 
 913:./Lib/Src/stm32f4xx_sdio.c **** /**
 914:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 915:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 916:./Lib/Src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 917:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 918:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 919:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 920:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 921:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 922:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 923:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 924:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 925:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 926:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 927:./Lib/Src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 928:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 929:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 930:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 931:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 932:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 933:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 934:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 935:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 936:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 937:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 938:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 939:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 940:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 941:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 942:./Lib/Src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 943:./Lib/Src/stm32f4xx_sdio.c ****   */
 944:./Lib/Src/stm32f4xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 945:./Lib/Src/stm32f4xx_sdio.c **** { 
ARM GAS  /tmp/ccfRZQXH.s 			page 43


 1498              		.loc 1 945 1
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 16
 1501              		@ frame_needed = 1, uses_anonymous_args = 0
 1502              		@ link register save eliminated.
 1503 0000 80B4     		push	{r7}
 1504              		.cfi_def_cfa_offset 4
 1505              		.cfi_offset 7, -4
 1506 0002 85B0     		sub	sp, sp, #20
 1507              		.cfi_def_cfa_offset 24
 1508 0004 00AF     		add	r7, sp, #0
 1509              		.cfi_def_cfa_register 7
 1510 0006 7860     		str	r0, [r7, #4]
 946:./Lib/Src/stm32f4xx_sdio.c ****   ITStatus bitstatus = RESET;
 1511              		.loc 1 946 12
 1512 0008 0023     		movs	r3, #0
 1513 000a FB73     		strb	r3, [r7, #15]
 947:./Lib/Src/stm32f4xx_sdio.c ****   
 948:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 949:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 950:./Lib/Src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 1514              		.loc 1 950 12
 1515 000c 084B     		ldr	r3, .L93
 1516 000e 5A6B     		ldr	r2, [r3, #52]
 1517              		.loc 1 950 18
 1518 0010 7B68     		ldr	r3, [r7, #4]
 1519 0012 1340     		ands	r3, r3, r2
 1520              		.loc 1 950 6
 1521 0014 002B     		cmp	r3, #0
 1522 0016 02D0     		beq	.L90
 951:./Lib/Src/stm32f4xx_sdio.c ****   {
 952:./Lib/Src/stm32f4xx_sdio.c ****     bitstatus = SET;
 1523              		.loc 1 952 15
 1524 0018 0123     		movs	r3, #1
 1525 001a FB73     		strb	r3, [r7, #15]
 1526 001c 01E0     		b	.L91
 1527              	.L90:
 953:./Lib/Src/stm32f4xx_sdio.c ****   }
 954:./Lib/Src/stm32f4xx_sdio.c ****   else
 955:./Lib/Src/stm32f4xx_sdio.c ****   {
 956:./Lib/Src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 1528              		.loc 1 956 15
 1529 001e 0023     		movs	r3, #0
 1530 0020 FB73     		strb	r3, [r7, #15]
 1531              	.L91:
 957:./Lib/Src/stm32f4xx_sdio.c ****   }
 958:./Lib/Src/stm32f4xx_sdio.c ****   return bitstatus;
 1532              		.loc 1 958 10
 1533 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 959:./Lib/Src/stm32f4xx_sdio.c **** }
 1534              		.loc 1 959 1
 1535 0024 1846     		mov	r0, r3
 1536 0026 1437     		adds	r7, r7, #20
 1537              		.cfi_def_cfa_offset 4
 1538 0028 BD46     		mov	sp, r7
 1539              		.cfi_def_cfa_register 13
 1540              		@ sp needed
ARM GAS  /tmp/ccfRZQXH.s 			page 44


 1541 002a 5DF8047B 		ldr	r7, [sp], #4
 1542              		.cfi_restore 7
 1543              		.cfi_def_cfa_offset 0
 1544 002e 7047     		bx	lr
 1545              	.L94:
 1546              		.align	2
 1547              	.L93:
 1548 0030 002C0140 		.word	1073818624
 1549              		.cfi_endproc
 1550              	.LFE151:
 1552              		.section	.text.SDIO_ClearITPendingBit,"ax",%progbits
 1553              		.align	1
 1554              		.global	SDIO_ClearITPendingBit
 1555              		.syntax unified
 1556              		.thumb
 1557              		.thumb_func
 1559              	SDIO_ClearITPendingBit:
 1560              	.LFB152:
 960:./Lib/Src/stm32f4xx_sdio.c **** 
 961:./Lib/Src/stm32f4xx_sdio.c **** /**
 962:./Lib/Src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 963:./Lib/Src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 964:./Lib/Src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 965:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 966:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 967:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 968:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 969:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 970:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 971:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 972:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 973:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 974:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 975:./Lib/Src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 976:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 977:./Lib/Src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 978:./Lib/Src/stm32f4xx_sdio.c ****   * @retval None
 979:./Lib/Src/stm32f4xx_sdio.c ****   */
 980:./Lib/Src/stm32f4xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 981:./Lib/Src/stm32f4xx_sdio.c **** { 
 1561              		.loc 1 981 1
 1562              		.cfi_startproc
 1563              		@ args = 0, pretend = 0, frame = 8
 1564              		@ frame_needed = 1, uses_anonymous_args = 0
 1565              		@ link register save eliminated.
 1566 0000 80B4     		push	{r7}
 1567              		.cfi_def_cfa_offset 4
 1568              		.cfi_offset 7, -4
 1569 0002 83B0     		sub	sp, sp, #12
 1570              		.cfi_def_cfa_offset 16
 1571 0004 00AF     		add	r7, sp, #0
 1572              		.cfi_def_cfa_register 7
 1573 0006 7860     		str	r0, [r7, #4]
 982:./Lib/Src/stm32f4xx_sdio.c ****   /* Check the parameters */
 983:./Lib/Src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 984:./Lib/Src/stm32f4xx_sdio.c ****    
 985:./Lib/Src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_IT;
ARM GAS  /tmp/ccfRZQXH.s 			page 45


 1574              		.loc 1 985 7
 1575 0008 044A     		ldr	r2, .L96
 1576              		.loc 1 985 13
 1577 000a 7B68     		ldr	r3, [r7, #4]
 1578 000c 9363     		str	r3, [r2, #56]
 986:./Lib/Src/stm32f4xx_sdio.c **** }
 1579              		.loc 1 986 1
 1580 000e 00BF     		nop
 1581 0010 0C37     		adds	r7, r7, #12
 1582              		.cfi_def_cfa_offset 4
 1583 0012 BD46     		mov	sp, r7
 1584              		.cfi_def_cfa_register 13
 1585              		@ sp needed
 1586 0014 5DF8047B 		ldr	r7, [sp], #4
 1587              		.cfi_restore 7
 1588              		.cfi_def_cfa_offset 0
 1589 0018 7047     		bx	lr
 1590              	.L97:
 1591 001a 00BF     		.align	2
 1592              	.L96:
 1593 001c 002C0140 		.word	1073818624
 1594              		.cfi_endproc
 1595              	.LFE152:
 1597              		.text
 1598              	.Letext0:
 1599              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 1600              		.file 3 "./Start/stm32f4xx.h"
 1601              		.file 4 "./Lib/inc/stm32f4xx_sdio.h"
 1602              		.file 5 "./Lib/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccfRZQXH.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_sdio.c
     /tmp/ccfRZQXH.s:21     .text.SDIO_DeInit:0000000000000000 $t
     /tmp/ccfRZQXH.s:27     .text.SDIO_DeInit:0000000000000000 SDIO_DeInit
     /tmp/ccfRZQXH.s:54     .text.SDIO_Init:0000000000000000 $t
     /tmp/ccfRZQXH.s:60     .text.SDIO_Init:0000000000000000 SDIO_Init
     /tmp/ccfRZQXH.s:140    .text.SDIO_Init:000000000000005c $d
     /tmp/ccfRZQXH.s:145    .text.SDIO_StructInit:0000000000000000 $t
     /tmp/ccfRZQXH.s:151    .text.SDIO_StructInit:0000000000000000 SDIO_StructInit
     /tmp/ccfRZQXH.s:205    .text.SDIO_ClockCmd:0000000000000000 $t
     /tmp/ccfRZQXH.s:211    .text.SDIO_ClockCmd:0000000000000000 SDIO_ClockCmd
     /tmp/ccfRZQXH.s:247    .text.SDIO_ClockCmd:000000000000001c $d
     /tmp/ccfRZQXH.s:252    .text.SDIO_SetPowerState:0000000000000000 $t
     /tmp/ccfRZQXH.s:258    .text.SDIO_SetPowerState:0000000000000000 SDIO_SetPowerState
     /tmp/ccfRZQXH.s:292    .text.SDIO_SetPowerState:000000000000001c $d
     /tmp/ccfRZQXH.s:297    .text.SDIO_GetPowerState:0000000000000000 $t
     /tmp/ccfRZQXH.s:303    .text.SDIO_GetPowerState:0000000000000000 SDIO_GetPowerState
     /tmp/ccfRZQXH.s:332    .text.SDIO_GetPowerState:0000000000000018 $d
     /tmp/ccfRZQXH.s:337    .text.SDIO_SendCommand:0000000000000000 $t
     /tmp/ccfRZQXH.s:343    .text.SDIO_SendCommand:0000000000000000 SDIO_SendCommand
     /tmp/ccfRZQXH.s:419    .text.SDIO_SendCommand:0000000000000054 $d
     /tmp/ccfRZQXH.s:424    .text.SDIO_CmdStructInit:0000000000000000 $t
     /tmp/ccfRZQXH.s:430    .text.SDIO_CmdStructInit:0000000000000000 SDIO_CmdStructInit
     /tmp/ccfRZQXH.s:480    .text.SDIO_GetCommandResponse:0000000000000000 $t
     /tmp/ccfRZQXH.s:486    .text.SDIO_GetCommandResponse:0000000000000000 SDIO_GetCommandResponse
     /tmp/ccfRZQXH.s:515    .text.SDIO_GetCommandResponse:0000000000000014 $d
     /tmp/ccfRZQXH.s:520    .text.SDIO_GetResponse:0000000000000000 $t
     /tmp/ccfRZQXH.s:526    .text.SDIO_GetResponse:0000000000000000 SDIO_GetResponse
     /tmp/ccfRZQXH.s:568    .text.SDIO_GetResponse:0000000000000024 $d
     /tmp/ccfRZQXH.s:573    .text.SDIO_DataConfig:0000000000000000 $t
     /tmp/ccfRZQXH.s:579    .text.SDIO_DataConfig:0000000000000000 SDIO_DataConfig
     /tmp/ccfRZQXH.s:661    .text.SDIO_DataConfig:0000000000000058 $d
     /tmp/ccfRZQXH.s:666    .text.SDIO_DataStructInit:0000000000000000 $t
     /tmp/ccfRZQXH.s:672    .text.SDIO_DataStructInit:0000000000000000 SDIO_DataStructInit
     /tmp/ccfRZQXH.s:726    .text.SDIO_GetDataCounter:0000000000000000 $t
     /tmp/ccfRZQXH.s:732    .text.SDIO_GetDataCounter:0000000000000000 SDIO_GetDataCounter
     /tmp/ccfRZQXH.s:759    .text.SDIO_GetDataCounter:0000000000000014 $d
     /tmp/ccfRZQXH.s:764    .text.SDIO_ReadData:0000000000000000 $t
     /tmp/ccfRZQXH.s:770    .text.SDIO_ReadData:0000000000000000 SDIO_ReadData
     /tmp/ccfRZQXH.s:797    .text.SDIO_ReadData:0000000000000014 $d
     /tmp/ccfRZQXH.s:802    .text.SDIO_WriteData:0000000000000000 $t
     /tmp/ccfRZQXH.s:808    .text.SDIO_WriteData:0000000000000000 SDIO_WriteData
     /tmp/ccfRZQXH.s:842    .text.SDIO_WriteData:000000000000001c $d
     /tmp/ccfRZQXH.s:847    .text.SDIO_GetFIFOCount:0000000000000000 $t
     /tmp/ccfRZQXH.s:853    .text.SDIO_GetFIFOCount:0000000000000000 SDIO_GetFIFOCount
     /tmp/ccfRZQXH.s:880    .text.SDIO_GetFIFOCount:0000000000000014 $d
     /tmp/ccfRZQXH.s:885    .text.SDIO_StartSDIOReadWait:0000000000000000 $t
     /tmp/ccfRZQXH.s:891    .text.SDIO_StartSDIOReadWait:0000000000000000 SDIO_StartSDIOReadWait
     /tmp/ccfRZQXH.s:927    .text.SDIO_StartSDIOReadWait:000000000000001c $d
     /tmp/ccfRZQXH.s:932    .text.SDIO_StopSDIOReadWait:0000000000000000 $t
     /tmp/ccfRZQXH.s:938    .text.SDIO_StopSDIOReadWait:0000000000000000 SDIO_StopSDIOReadWait
     /tmp/ccfRZQXH.s:974    .text.SDIO_StopSDIOReadWait:000000000000001c $d
     /tmp/ccfRZQXH.s:979    .text.SDIO_SetSDIOReadWaitMode:0000000000000000 $t
     /tmp/ccfRZQXH.s:985    .text.SDIO_SetSDIOReadWaitMode:0000000000000000 SDIO_SetSDIOReadWaitMode
     /tmp/ccfRZQXH.s:1019   .text.SDIO_SetSDIOReadWaitMode:000000000000001c $d
     /tmp/ccfRZQXH.s:1024   .text.SDIO_SetSDIOOperation:0000000000000000 $t
     /tmp/ccfRZQXH.s:1030   .text.SDIO_SetSDIOOperation:0000000000000000 SDIO_SetSDIOOperation
ARM GAS  /tmp/ccfRZQXH.s 			page 47


     /tmp/ccfRZQXH.s:1066   .text.SDIO_SetSDIOOperation:000000000000001c $d
     /tmp/ccfRZQXH.s:1071   .text.SDIO_SendSDIOSuspendCmd:0000000000000000 $t
     /tmp/ccfRZQXH.s:1077   .text.SDIO_SendSDIOSuspendCmd:0000000000000000 SDIO_SendSDIOSuspendCmd
     /tmp/ccfRZQXH.s:1113   .text.SDIO_SendSDIOSuspendCmd:000000000000001c $d
     /tmp/ccfRZQXH.s:1118   .text.SDIO_CommandCompletionCmd:0000000000000000 $t
     /tmp/ccfRZQXH.s:1124   .text.SDIO_CommandCompletionCmd:0000000000000000 SDIO_CommandCompletionCmd
     /tmp/ccfRZQXH.s:1160   .text.SDIO_CommandCompletionCmd:000000000000001c $d
     /tmp/ccfRZQXH.s:1165   .text.SDIO_CEATAITCmd:0000000000000000 $t
     /tmp/ccfRZQXH.s:1171   .text.SDIO_CEATAITCmd:0000000000000000 SDIO_CEATAITCmd
     /tmp/ccfRZQXH.s:1214   .text.SDIO_CEATAITCmd:000000000000002c $d
     /tmp/ccfRZQXH.s:1219   .text.SDIO_SendCEATACmd:0000000000000000 $t
     /tmp/ccfRZQXH.s:1225   .text.SDIO_SendCEATACmd:0000000000000000 SDIO_SendCEATACmd
     /tmp/ccfRZQXH.s:1261   .text.SDIO_SendCEATACmd:000000000000001c $d
     /tmp/ccfRZQXH.s:1266   .text.SDIO_DMACmd:0000000000000000 $t
     /tmp/ccfRZQXH.s:1272   .text.SDIO_DMACmd:0000000000000000 SDIO_DMACmd
     /tmp/ccfRZQXH.s:1308   .text.SDIO_DMACmd:000000000000001c $d
     /tmp/ccfRZQXH.s:1313   .text.SDIO_ITConfig:0000000000000000 $t
     /tmp/ccfRZQXH.s:1319   .text.SDIO_ITConfig:0000000000000000 SDIO_ITConfig
     /tmp/ccfRZQXH.s:1377   .text.SDIO_ITConfig:000000000000003c $d
     /tmp/ccfRZQXH.s:1382   .text.SDIO_GetFlagStatus:0000000000000000 $t
     /tmp/ccfRZQXH.s:1388   .text.SDIO_GetFlagStatus:0000000000000000 SDIO_GetFlagStatus
     /tmp/ccfRZQXH.s:1440   .text.SDIO_GetFlagStatus:0000000000000030 $d
     /tmp/ccfRZQXH.s:1445   .text.SDIO_ClearFlag:0000000000000000 $t
     /tmp/ccfRZQXH.s:1451   .text.SDIO_ClearFlag:0000000000000000 SDIO_ClearFlag
     /tmp/ccfRZQXH.s:1485   .text.SDIO_ClearFlag:000000000000001c $d
     /tmp/ccfRZQXH.s:1490   .text.SDIO_GetITStatus:0000000000000000 $t
     /tmp/ccfRZQXH.s:1496   .text.SDIO_GetITStatus:0000000000000000 SDIO_GetITStatus
     /tmp/ccfRZQXH.s:1548   .text.SDIO_GetITStatus:0000000000000030 $d
     /tmp/ccfRZQXH.s:1553   .text.SDIO_ClearITPendingBit:0000000000000000 $t
     /tmp/ccfRZQXH.s:1559   .text.SDIO_ClearITPendingBit:0000000000000000 SDIO_ClearITPendingBit
     /tmp/ccfRZQXH.s:1593   .text.SDIO_ClearITPendingBit:000000000000001c $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
