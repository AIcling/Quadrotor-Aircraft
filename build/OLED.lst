ARM GAS  /tmp/ccR9eYAD.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"OLED.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Hardware/Src/OLED.c"
  20              		.global	OLED_F8x16
  21              		.section	.rodata.OLED_F8x16,"a"
  22              		.align	2
  25              	OLED_F8x16:
  26 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
  26      00000000 
  26      00000000 
  26      00
  27 000d 000000   		.ascii	"\000\000\000"
  28 0010 000000F8 		.ascii	"\000\000\000\370\000\000\000\000\000\000\00030\000\000"
  28      00000000 
  28      00000033 
  28      300000
  29 001f 00       		.ascii	"\000"
  30 0020 00100C06 		.ascii	"\000\020\014\006\020\014\006\000\000\000\000\000\000"
  30      100C0600 
  30      00000000 
  30      00
  31 002d 000000   		.ascii	"\000\000\000"
  32 0030 40C07840 		.ascii	"@\300x@\300x@\000\004?\004\004?\004\004\000"
  32      C0784000 
  32      043F0404 
  32      3F040400 
  33 0040 007088FC 		.ascii	"\000p\210\374\0100\000\000\000\030 \377!\036\000\000"
  33      08300000 
  33      001820FF 
  33      211E0000 
  34 0050 F008F000 		.ascii	"\360\010\360\000\340\030\000\000\000!\034\003\036!\036"
  34      E0180000 
  34      00211C03 
  34      1E211E
  35 005f 00       		.ascii	"\000"
  36 0060 00F00888 		.ascii	"\000\360\010\210p\000\000\000\036!#$\031'!\020"
  36      70000000 
  36      1E212324 
  36      19272110 
  37 0070 10160E00 		.ascii	"\020\026\016\000\000\000\000\000\000\000\000\000\000"
  37      00000000 
ARM GAS  /tmp/ccR9eYAD.s 			page 2


  37      00000000 
  37      00
  38 007d 000000   		.ascii	"\000\000\000"
  39 0080 000000E0 		.ascii	"\000\000\000\340\030\004\002\000\000\000\000\007\030"
  39      18040200 
  39      00000007 
  39      18
  40 008d 204000   		.ascii	" @\000"
  41 0090 00020418 		.ascii	"\000\002\004\030\340\000\000\000\000@ \030\007\000\000"
  41      E0000000 
  41      00402018 
  41      070000
  42 009f 00       		.ascii	"\000"
  43 00a0 404080F0 		.ascii	"@@\200\360\200@@\000\002\002\001\017\001\002\002\000"
  43      80404000 
  43      0202010F 
  43      01020200 
  44 00b0 000000F0 		.ascii	"\000\000\000\360\000\000\000\000\001\001\001\037\001"
  44      00000000 
  44      0101011F 
  44      01
  45 00bd 010100   		.ascii	"\001\001\000"
  46 00c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\200\260p\000\000\000"
  46      00000000 
  46      80B07000 
  46      0000
  47 00ce 0000     		.ascii	"\000\000"
  48 00d0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\001\001\001\001"
  48      00000000 
  48      00010101 
  48      01
  49 00dd 010101   		.ascii	"\001\001\001"
  50 00e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\00000\000\000\000\000"
  50      00000000 
  50      00303000 
  50      000000
  51 00ef 00       		.ascii	"\000"
  52 00f0 00000000 		.ascii	"\000\000\000\000\200`\030\004\000`\030\006\001\000\000"
  52      80601804 
  52      00601806 
  52      010000
  53 00ff 00       		.ascii	"\000"
  54 0100 00E01008 		.ascii	"\000\340\020\010\010\020\340\000\000\017\020  \020\017"
  54      0810E000 
  54      000F1020 
  54      20100F
  55 010f 00       		.ascii	"\000"
  56 0110 001010F8 		.ascii	"\000\020\020\370\000\000\000\000\000  ?  \000\000"
  56      00000000 
  56      0020203F 
  56      20200000 
  57 0120 00700808 		.ascii	"\000p\010\010\010\210p\000\0000($\"!0\000"
  57      08887000 
  57      00302824 
  57      22213000 
  58 0130 00300888 		.ascii	"\0000\010\210\210H0\000\000\030   \021\016\000"
  58      88483000 
ARM GAS  /tmp/ccR9eYAD.s 			page 3


  58      00182020 
  58      20110E00 
  59 0140 0000C020 		.ascii	"\000\000\300 \020\370\000\000\000\007\004$$?$\000"
  59      10F80000 
  59      00070424 
  59      243F2400 
  60 0150 00F80888 		.ascii	"\000\370\010\210\210\010\010\000\000\031!  \021\016"
  60      88080800 
  60      00192120 
  60      20110E
  61 015f 00       		.ascii	"\000"
  62 0160 00E01088 		.ascii	"\000\340\020\210\210\030\000\000\000\017\021  \021\016"
  62      88180000 
  62      000F1120 
  62      20110E
  63 016f 00       		.ascii	"\000"
  64 0170 00380808 		.ascii	"\0008\010\010\3108\010\000\000\000\000?\000\000\000"
  64      C8380800 
  64      0000003F 
  64      000000
  65 017f 00       		.ascii	"\000"
  66 0180 00708808 		.ascii	"\000p\210\010\010\210p\000\000\034\"!!\"\034\000"
  66      08887000 
  66      001C2221 
  66      21221C00 
  67 0190 00E01008 		.ascii	"\000\340\020\010\010\020\340\000\000\0001\"\"\021\017"
  67      0810E000 
  67      00003122 
  67      22110F
  68 019f 00       		.ascii	"\000"
  69 01a0 000000C0 		.ascii	"\000\000\000\300\300\000\000\000\000\000\00000\000\000"
  69      C0000000 
  69      00000030 
  69      300000
  70 01af 00       		.ascii	"\000"
  71 01b0 00000080 		.ascii	"\000\000\000\200\000\000\000\000\000\000\200`\000\000"
  71      00000000 
  71      00008060 
  71      0000
  72 01be 0000     		.ascii	"\000\000"
  73 01c0 00008040 		.ascii	"\000\000\200@ \020\010\000\000\001\002\004\010\020 "
  73      20100800 
  73      00010204 
  73      081020
  74 01cf 00       		.ascii	"\000"
  75 01d0 40404040 		.ascii	"@@@@@@@\000\004\004\004\004\004\004\004\000"
  75      40404000 
  75      04040404 
  75      04040400 
  76 01e0 00081020 		.ascii	"\000\010\020 @\200\000\000\000 \020\010\004\002\001"
  76      40800000 
  76      00201008 
  76      040201
  77 01ef 00       		.ascii	"\000"
  78 01f0 00704808 		.ascii	"\000pH\010\010\010\360\000\000\000\00006\001\000\000"
  78      0808F000 
  78      00000030 
ARM GAS  /tmp/ccR9eYAD.s 			page 4


  78      36010000 
  79 0200 C030C828 		.ascii	"\3000\310(\350\020\340\000\007\030'$#\024\013\000"
  79      E810E000 
  79      07182724 
  79      23140B00 
  80 0210 0000C038 		.ascii	"\000\000\3008\340\000\000\000 <#\002\002'8 "
  80      E0000000 
  80      203C2302 
  80      02273820 
  81 0220 08F88888 		.ascii	"\010\370\210\210\210p\000\000 ?   \021\016\000"
  81      88700000 
  81      203F2020 
  81      20110E00 
  82 0230 C0300808 		.ascii	"\3000\010\010\010\0108\000\007\030   \020\010\000"
  82      08083800 
  82      07182020 
  82      20100800 
  83 0240 08F80808 		.ascii	"\010\370\010\010\010\020\340\000 ?   \020\017\000"
  83      0810E000 
  83      203F2020 
  83      20100F00 
  84 0250 08F88888 		.ascii	"\010\370\210\210\350\010\020\000 ?  # \030\000"
  84      E8081000 
  84      203F2020 
  84      23201800 
  85 0260 08F88888 		.ascii	"\010\370\210\210\350\010\020\000 ? \000\003\000\000"
  85      E8081000 
  85      203F2000 
  85      030000
  86 026f 00       		.ascii	"\000"
  87 0270 C0300808 		.ascii	"\3000\010\010\0108\000\000\007\030  \"\036\002\000"
  87      08380000 
  87      07182020 
  87      221E0200 
  88 0280 08F80800 		.ascii	"\010\370\010\000\000\010\370\010 ?!\001\001!? "
  88      0008F808 
  88      203F2101 
  88      01213F20 
  89 0290 000808F8 		.ascii	"\000\010\010\370\010\010\000\000\000  ?  \000\000"
  89      08080000 
  89      0020203F 
  89      20200000 
  90 02a0 00000808 		.ascii	"\000\000\010\010\370\010\010\000\300\200\200\200\177"
  90      F8080800 
  90      C0808080 
  90      7F
  91 02ad 000000   		.ascii	"\000\000\000"
  92 02b0 08F888C0 		.ascii	"\010\370\210\300(\030\010\000 ? \001&8 \000"
  92      28180800 
  92      203F2001 
  92      26382000 
  93 02c0 08F80800 		.ascii	"\010\370\010\000\000\000\000\000 ?    0\000"
  93      00000000 
  93      203F2020 
  93      20203000 
  94 02d0 08F8F800 		.ascii	"\010\370\370\000\370\370\010\000 ?\000?\000? \000"
  94      F8F80800 
ARM GAS  /tmp/ccR9eYAD.s 			page 5


  94      203F003F 
  94      003F2000 
  95 02e0 08F830C0 		.ascii	"\010\3700\300\000\010\370\010 ? \000\007\030?\000"
  95      0008F808 
  95      203F2000 
  95      07183F00 
  96 02f0 E0100808 		.ascii	"\340\020\010\010\010\020\340\000\017\020   \020\017"
  96      0810E000 
  96      0F102020 
  96      20100F
  97 02ff 00       		.ascii	"\000"
  98 0300 08F80808 		.ascii	"\010\370\010\010\010\010\360\000 ?!\001\001\001\000"
  98      0808F000 
  98      203F2101 
  98      010100
  99 030f 00       		.ascii	"\000"
 100 0310 E0100808 		.ascii	"\340\020\010\010\010\020\340\000\017\030$$8PO\000"
 100      0810E000 
 100      0F182424 
 100      38504F00 
 101 0320 08F88888 		.ascii	"\010\370\210\210\210\210p\000 ? \000\003\0140 "
 101      88887000 
 101      203F2000 
 101      030C3020 
 102 0330 00708808 		.ascii	"\000p\210\010\010\0108\000\0008 !!\"\034\000"
 102      08083800 
 102      00382021 
 102      21221C00 
 103 0340 180808F8 		.ascii	"\030\010\010\370\010\010\030\000\000\000 ? \000\000"
 103      08081800 
 103      0000203F 
 103      200000
 104 034f 00       		.ascii	"\000"
 105 0350 08F80800 		.ascii	"\010\370\010\000\000\010\370\010\000\037    \037\000"
 105      0008F808 
 105      001F2020 
 105      20201F00 
 106 0360 08788800 		.ascii	"\010x\210\000\000\3108\010\000\000\0078\016\001\000"
 106      00C83808 
 106      00000738 
 106      0E0100
 107 036f 00       		.ascii	"\000"
 108 0370 F80800F8 		.ascii	"\370\010\000\370\000\010\370\000\003<\007\000\007<\003"
 108      0008F800 
 108      033C0700 
 108      073C03
 109 037f 00       		.ascii	"\000"
 110 0380 08186880 		.ascii	"\010\030h\200\200h\030\010 0,\003\003,0 "
 110      80681808 
 110      20302C03 
 110      032C3020 
 111 0390 0838C800 		.ascii	"\0108\310\000\3108\010\000\000\000 ? \000\000\000"
 111      C8380800 
 111      0000203F 
 111      20000000 
 112 03a0 10080808 		.ascii	"\020\010\010\010\3108\010\000 8&!  \030\000"
 112      C8380800 
ARM GAS  /tmp/ccR9eYAD.s 			page 6


 112      20382621 
 112      20201800 
 113 03b0 000000FE 		.ascii	"\000\000\000\376\002\002\002\000\000\000\000\177@@@"
 113      02020200 
 113      0000007F 
 113      404040
 114 03bf 00       		.ascii	"\000"
 115 03c0 000C30C0 		.ascii	"\000\0140\300\000\000\000\000\000\000\000\001\0068\300"
 115      00000000 
 115      00000001 
 115      0638C0
 116 03cf 00       		.ascii	"\000"
 117 03d0 00020202 		.ascii	"\000\002\002\002\376\000\000\000\000@@@\177\000\000"
 117      FE000000 
 117      00404040 
 117      7F0000
 118 03df 00       		.ascii	"\000"
 119 03e0 00000402 		.ascii	"\000\000\004\002\002\002\004\000\000\000\000\000\000"
 119      02020400 
 119      00000000 
 119      00
 120 03ed 000000   		.ascii	"\000\000\000"
 121 03f0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\200\200\200\200\200"
 121      00000000 
 121      80808080 
 121      80
 122 03fd 808080   		.ascii	"\200\200\200"
 123 0400 00020204 		.ascii	"\000\002\002\004\000\000\000\000\000\000\000\000\000"
 123      00000000 
 123      00000000 
 123      00
 124 040d 000000   		.ascii	"\000\000\000"
 125 0410 00008080 		.ascii	"\000\000\200\200\200\200\000\000\000\031$\"\"\"? "
 125      80800000 
 125      00192422 
 125      22223F20 
 126 0420 08F80080 		.ascii	"\010\370\000\200\200\000\000\000\000?\021  \021\016"
 126      80000000 
 126      003F1120 
 126      20110E
 127 042f 00       		.ascii	"\000"
 128 0430 00000080 		.ascii	"\000\000\000\200\200\200\000\000\000\016\021   \021"
 128      80800000 
 128      000E1120 
 128      202011
 129 043f 00       		.ascii	"\000"
 130 0440 00000080 		.ascii	"\000\000\000\200\200\210\370\000\000\016\021  \020?"
 130      8088F800 
 130      000E1120 
 130      20103F
 131 044f 20       		.ascii	" "
 132 0450 00008080 		.ascii	"\000\000\200\200\200\200\000\000\000\037\"\"\"\"\023"
 132      80800000 
 132      001F2222 
 132      222213
 133 045f 00       		.ascii	"\000"
 134 0460 008080F0 		.ascii	"\000\200\200\360\210\210\210\030\000  ?  \000\000"
ARM GAS  /tmp/ccR9eYAD.s 			page 7


 134      88888818 
 134      0020203F 
 134      20200000 
 135 0470 00008080 		.ascii	"\000\000\200\200\200\200\200\000\000k\224\224\224\223"
 135      80808000 
 135      006B9494 
 135      9493
 136 047e 6000     		.ascii	"`\000"
 137 0480 08F80080 		.ascii	"\010\370\000\200\200\200\000\000 ?!\000\000 ? "
 137      80800000 
 137      203F2100 
 137      00203F20 
 138 0490 00809898 		.ascii	"\000\200\230\230\000\000\000\000\000  ?  \000\000"
 138      00000000 
 138      0020203F 
 138      20200000 
 139 04a0 00000080 		.ascii	"\000\000\000\200\230\230\000\000\000\300\200\200\200"
 139      98980000 
 139      00C08080 
 139      80
 140 04ad 7F0000   		.ascii	"\177\000\000"
 141 04b0 08F80000 		.ascii	"\010\370\000\000\200\200\200\000 ?$\002-0 \000"
 141      80808000 
 141      203F2402 
 141      2D302000 
 142 04c0 000808F8 		.ascii	"\000\010\010\370\000\000\000\000\000  ?  \000\000"
 142      00000000 
 142      0020203F 
 142      20200000 
 143 04d0 80808080 		.ascii	"\200\200\200\200\200\200\200\000 ? \000? \000?"
 143      80808000 
 143      203F2000 
 143      3F20003F 
 144 04e0 80800080 		.ascii	"\200\200\000\200\200\200\000\000 ?!\000\000 ? "
 144      80800000 
 144      203F2100 
 144      00203F20 
 145 04f0 00008080 		.ascii	"\000\000\200\200\200\200\000\000\000\037    \037\000"
 145      80800000 
 145      001F2020 
 145      20201F00 
 146 0500 80800080 		.ascii	"\200\200\000\200\200\000\000\000\200\377\241  \021\016"
 146      80000000 
 146      80FFA120 
 146      20110E
 147 050f 00       		.ascii	"\000"
 148 0510 00000080 		.ascii	"\000\000\000\200\200\200\200\000\000\016\021  \240\377"
 148      80808000 
 148      000E1120 
 148      20A0FF
 149 051f 80       		.ascii	"\200"
 150 0520 80808000 		.ascii	"\200\200\200\000\200\200\200\000  ?! \000\001\000"
 150      80808000 
 150      20203F21 
 150      20000100 
 151 0530 00008080 		.ascii	"\000\000\200\200\200\200\200\000\0003$$$$\031\000"
 151      80808000 
ARM GAS  /tmp/ccR9eYAD.s 			page 8


 151      00332424 
 151      24241900 
 152 0540 008080E0 		.ascii	"\000\200\200\340\200\200\000\000\000\000\000\037  \000"
 152      80800000 
 152      0000001F 
 152      202000
 153 054f 00       		.ascii	"\000"
 154 0550 80800000 		.ascii	"\200\200\000\000\000\200\200\000\000\037   \020? "
 154      00808000 
 154      001F2020 
 154      20103F20 
 155 0560 80808000 		.ascii	"\200\200\200\000\000\200\200\200\000\001\0160\010\006"
 155      00808080 
 155      00010E30 
 155      0806
 156 056e 0100     		.ascii	"\001\000"
 157 0570 80800080 		.ascii	"\200\200\000\200\000\200\200\200\0170\014\003\0140\017"
 157      00808080 
 157      0F300C03 
 157      0C300F
 158 057f 00       		.ascii	"\000"
 159 0580 00808000 		.ascii	"\000\200\200\000\200\200\200\000\000 1.\0161 \000"
 159      80808000 
 159      0020312E 
 159      0E312000 
 160 0590 80808000 		.ascii	"\200\200\200\000\000\200\200\200\200\201\216p\030\006"
 160      00808080 
 160      80818E70 
 160      1806
 161 059e 0100     		.ascii	"\001\000"
 162 05a0 00808080 		.ascii	"\000\200\200\200\200\200\200\000\000!0,\"!0\000"
 162      80808000 
 162      0021302C 
 162      22213000 
 163 05b0 00000000 		.ascii	"\000\000\000\000\200|\002\002\000\000\000\000\000?@"
 163      807C0202 
 163      00000000 
 163      003F40
 164 05bf 40       		.ascii	"@"
 165 05c0 00000000 		.ascii	"\000\000\000\000\377\000\000\000\000\000\000\000\377"
 165      FF000000 
 165      00000000 
 165      FF
 166 05cd 000000   		.ascii	"\000\000\000"
 167 05d0 0002027C 		.ascii	"\000\002\002|\200\000\000\000\000@@?\000\000\000\000"
 167      80000000 
 167      0040403F 
 167      00000000 
 168 05e0 00060101 		.ascii	"\000\006\001\001\002\002\004\004\000\000\000\000\000"
 168      02020404 
 168      00000000 
 168      00
 169 05ed 000000   		.ascii	"\000\000\000"
 170              		.section	.text.My_Write_SDA,"ax",%progbits
 171              		.align	1
 172              		.global	My_Write_SDA
 173              		.syntax unified
ARM GAS  /tmp/ccR9eYAD.s 			page 9


 174              		.thumb
 175              		.thumb_func
 177              	My_Write_SDA:
 178              	.LFB123:
   1:./Hardware/Src/OLED.c **** #include "stm32f4xx.h" 
   2:./Hardware/Src/OLED.c **** #include "OLED_Font.h"
   3:./Hardware/Src/OLED.c **** 
   4:./Hardware/Src/OLED.c **** void My_Write_SDA(uint8_t x)
   5:./Hardware/Src/OLED.c **** {
 179              		.loc 1 5 1
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 8
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184 0000 80B4     		push	{r7}
 185              		.cfi_def_cfa_offset 4
 186              		.cfi_offset 7, -4
 187 0002 83B0     		sub	sp, sp, #12
 188              		.cfi_def_cfa_offset 16
 189 0004 00AF     		add	r7, sp, #0
 190              		.cfi_def_cfa_register 7
 191 0006 0346     		mov	r3, r0
 192 0008 FB71     		strb	r3, [r7, #7]
   6:./Hardware/Src/OLED.c **** 	if(x==1)
 193              		.loc 1 6 4
 194 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 195 000c 012B     		cmp	r3, #1
 196 000e 03D1     		bne	.L2
   7:./Hardware/Src/OLED.c **** 	{
   8:./Hardware/Src/OLED.c **** 		GPIOB->BSRR=(uint16_t)0x0008;
 197              		.loc 1 8 8
 198 0010 064B     		ldr	r3, .L5
 199              		.loc 1 8 14
 200 0012 0822     		movs	r2, #8
 201 0014 9A61     		str	r2, [r3, #24]
   9:./Hardware/Src/OLED.c **** 	}
  10:./Hardware/Src/OLED.c **** 	else
  11:./Hardware/Src/OLED.c **** 	{
  12:./Hardware/Src/OLED.c **** 		GPIOB->BSRR=(uint32_t)0x0008<<16;
  13:./Hardware/Src/OLED.c **** 	}
  14:./Hardware/Src/OLED.c **** }
 202              		.loc 1 14 1
 203 0016 03E0     		b	.L4
 204              	.L2:
  12:./Hardware/Src/OLED.c **** 	}
 205              		.loc 1 12 8
 206 0018 044B     		ldr	r3, .L5
  12:./Hardware/Src/OLED.c **** 	}
 207              		.loc 1 12 14
 208 001a 4FF40022 		mov	r2, #524288
 209 001e 9A61     		str	r2, [r3, #24]
 210              	.L4:
 211              		.loc 1 14 1
 212 0020 00BF     		nop
 213 0022 0C37     		adds	r7, r7, #12
 214              		.cfi_def_cfa_offset 4
 215 0024 BD46     		mov	sp, r7
ARM GAS  /tmp/ccR9eYAD.s 			page 10


 216              		.cfi_def_cfa_register 13
 217              		@ sp needed
 218 0026 5DF8047B 		ldr	r7, [sp], #4
 219              		.cfi_restore 7
 220              		.cfi_def_cfa_offset 0
 221 002a 7047     		bx	lr
 222              	.L6:
 223              		.align	2
 224              	.L5:
 225 002c 00040240 		.word	1073873920
 226              		.cfi_endproc
 227              	.LFE123:
 229              		.section	.text.My_Write_SCL,"ax",%progbits
 230              		.align	1
 231              		.global	My_Write_SCL
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	My_Write_SCL:
 237              	.LFB124:
  15:./Hardware/Src/OLED.c **** void My_Write_SCL(uint8_t x)
  16:./Hardware/Src/OLED.c **** {
 238              		.loc 1 16 1
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 8
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243 0000 80B4     		push	{r7}
 244              		.cfi_def_cfa_offset 4
 245              		.cfi_offset 7, -4
 246 0002 83B0     		sub	sp, sp, #12
 247              		.cfi_def_cfa_offset 16
 248 0004 00AF     		add	r7, sp, #0
 249              		.cfi_def_cfa_register 7
 250 0006 0346     		mov	r3, r0
 251 0008 FB71     		strb	r3, [r7, #7]
  17:./Hardware/Src/OLED.c **** 	if(x==1)
 252              		.loc 1 17 4
 253 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 254 000c 012B     		cmp	r3, #1
 255 000e 04D1     		bne	.L8
  18:./Hardware/Src/OLED.c **** 	{
  19:./Hardware/Src/OLED.c **** 		GPIOB->BSRR=(uint16_t)0x0400;
 256              		.loc 1 19 8
 257 0010 074B     		ldr	r3, .L11
 258              		.loc 1 19 14
 259 0012 4FF48062 		mov	r2, #1024
 260 0016 9A61     		str	r2, [r3, #24]
  20:./Hardware/Src/OLED.c **** 	}
  21:./Hardware/Src/OLED.c **** 	else
  22:./Hardware/Src/OLED.c **** 	{
  23:./Hardware/Src/OLED.c **** 		GPIOB->BSRR=(uint32_t)0x0400<<16;
  24:./Hardware/Src/OLED.c **** 	}
  25:./Hardware/Src/OLED.c **** }
 261              		.loc 1 25 1
 262 0018 03E0     		b	.L10
 263              	.L8:
ARM GAS  /tmp/ccR9eYAD.s 			page 11


  23:./Hardware/Src/OLED.c **** 	}
 264              		.loc 1 23 8
 265 001a 054B     		ldr	r3, .L11
  23:./Hardware/Src/OLED.c **** 	}
 266              		.loc 1 23 14
 267 001c 4FF08062 		mov	r2, #67108864
 268 0020 9A61     		str	r2, [r3, #24]
 269              	.L10:
 270              		.loc 1 25 1
 271 0022 00BF     		nop
 272 0024 0C37     		adds	r7, r7, #12
 273              		.cfi_def_cfa_offset 4
 274 0026 BD46     		mov	sp, r7
 275              		.cfi_def_cfa_register 13
 276              		@ sp needed
 277 0028 5DF8047B 		ldr	r7, [sp], #4
 278              		.cfi_restore 7
 279              		.cfi_def_cfa_offset 0
 280 002c 7047     		bx	lr
 281              	.L12:
 282 002e 00BF     		.align	2
 283              	.L11:
 284 0030 00040240 		.word	1073873920
 285              		.cfi_endproc
 286              	.LFE124:
 288              		.section	.text.OLED_I2C_Init,"ax",%progbits
 289              		.align	1
 290              		.global	OLED_I2C_Init
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	OLED_I2C_Init:
 296              	.LFB125:
  26:./Hardware/Src/OLED.c **** 
  27:./Hardware/Src/OLED.c **** /*引脚配置*/
  28:./Hardware/Src/OLED.c **** #define OLED_W_SCL(x)		GPIO_WriteBit(GPIOB, GPIO_Pin_10, (BitAction)(x))
  29:./Hardware/Src/OLED.c **** #define OLED_W_SDA(x)		GPIO_WriteBit(GPIOB, GPIO_Pin_3, (BitAction)(x))
  30:./Hardware/Src/OLED.c **** 
  31:./Hardware/Src/OLED.c **** //#define OLED_W_SCL(x)		My_Write_SCL(x)
  32:./Hardware/Src/OLED.c **** //#define OLED_W_SDA(x)		My_Write_SDA(x)
  33:./Hardware/Src/OLED.c **** 
  34:./Hardware/Src/OLED.c **** //void OLED_W_SDA(uint8_t x)//Pin_3
  35:./Hardware/Src/OLED.c **** //{
  36:./Hardware/Src/OLED.c **** //	//GPIOB->BSRR=0x01;
  37:./Hardware/Src/OLED.c **** //	if(x==1)
  38:./Hardware/Src/OLED.c **** //	{
  39:./Hardware/Src/OLED.c **** //		GPIOB->BSRR|=0x01<<3;
  40:./Hardware/Src/OLED.c **** //	}
  41:./Hardware/Src/OLED.c **** //	else
  42:./Hardware/Src/OLED.c **** //	{
  43:./Hardware/Src/OLED.c **** //		GPIOB->BSRR&=~(0x01<<19);
  44:./Hardware/Src/OLED.c **** //	}
  45:./Hardware/Src/OLED.c **** //}
  46:./Hardware/Src/OLED.c **** 
  47:./Hardware/Src/OLED.c **** //void OLED_W_SCL(uint8_t x)//Pin_10
  48:./Hardware/Src/OLED.c **** //{
  49:./Hardware/Src/OLED.c **** //	if(x==1)
ARM GAS  /tmp/ccR9eYAD.s 			page 12


  50:./Hardware/Src/OLED.c **** //	{
  51:./Hardware/Src/OLED.c **** //		GPIOB->BSRR|=0x01<<10;
  52:./Hardware/Src/OLED.c **** //	}
  53:./Hardware/Src/OLED.c **** //	else
  54:./Hardware/Src/OLED.c **** //	{
  55:./Hardware/Src/OLED.c **** //		GPIOB->BSRR&=~(0x01<<26);
  56:./Hardware/Src/OLED.c **** //	}
  57:./Hardware/Src/OLED.c **** //}
  58:./Hardware/Src/OLED.c **** 
  59:./Hardware/Src/OLED.c **** 
  60:./Hardware/Src/OLED.c **** 
  61:./Hardware/Src/OLED.c **** /*引脚初始化*/
  62:./Hardware/Src/OLED.c **** void OLED_I2C_Init(void)
  63:./Hardware/Src/OLED.c **** {
 297              		.loc 1 63 1
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301 0000 80B5     		push	{r7, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 7, -8
 304              		.cfi_offset 14, -4
 305 0002 00AF     		add	r7, sp, #0
 306              		.cfi_def_cfa_register 7
  64:./Hardware/Src/OLED.c ****     RCC->AHB1ENR=0x01<<1;
 307              		.loc 1 64 8
 308 0004 1F4B     		ldr	r3, .L14
 309              		.loc 1 64 17
 310 0006 0222     		movs	r2, #2
 311 0008 1A63     		str	r2, [r3, #48]
  65:./Hardware/Src/OLED.c **** //	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB,ENABLE);
  66:./Hardware/Src/OLED.c **** //	GPIO_InitTypeDef GPIO_InitStruct;
  67:./Hardware/Src/OLED.c **** //	GPIO_InitStruct.GPIO_Mode=GPIO_Mode_OUT;
  68:./Hardware/Src/OLED.c **** //	GPIO_InitStruct.GPIO_OType=GPIO_OType_OD;
  69:./Hardware/Src/OLED.c **** //	GPIO_InitStruct.GPIO_Pin=GPIO_Pin_3;
  70:./Hardware/Src/OLED.c **** //	GPIO_InitStruct.GPIO_PuPd=GPIO_PuPd_NOPULL;
  71:./Hardware/Src/OLED.c **** //	GPIO_InitStruct.GPIO_Speed=GPIO_Speed_50MHz;
  72:./Hardware/Src/OLED.c **** // 	GPIO_Init(GPIOB, &GPIO_InitStruct);
  73:./Hardware/Src/OLED.c **** //	GPIO_InitStruct.GPIO_Pin = GPIO_Pin_10;
  74:./Hardware/Src/OLED.c **** // 	GPIO_Init(GPIOB, &GPIO_InitStruct);
  75:./Hardware/Src/OLED.c **** 	GPIOB->MODER=0x00;
 312              		.loc 1 75 7
 313 000a 1F4B     		ldr	r3, .L14+4
 314              		.loc 1 75 14
 315 000c 0022     		movs	r2, #0
 316 000e 1A60     		str	r2, [r3]
  76:./Hardware/Src/OLED.c **** 	GPIOB->MODER|=0x01<<(2*3);
 317              		.loc 1 76 7
 318 0010 1D4B     		ldr	r3, .L14+4
 319 0012 1B68     		ldr	r3, [r3]
 320 0014 1C4A     		ldr	r2, .L14+4
 321              		.loc 1 76 14
 322 0016 43F04003 		orr	r3, r3, #64
 323 001a 1360     		str	r3, [r2]
  77:./Hardware/Src/OLED.c **** 	GPIOB->MODER|=0x01<<(2*10);
 324              		.loc 1 77 7
 325 001c 1A4B     		ldr	r3, .L14+4
ARM GAS  /tmp/ccR9eYAD.s 			page 13


 326 001e 1B68     		ldr	r3, [r3]
 327 0020 194A     		ldr	r2, .L14+4
 328              		.loc 1 77 14
 329 0022 43F48013 		orr	r3, r3, #1048576
 330 0026 1360     		str	r3, [r2]
  78:./Hardware/Src/OLED.c **** 	GPIOB->OTYPER=0x00;
 331              		.loc 1 78 7
 332 0028 174B     		ldr	r3, .L14+4
 333              		.loc 1 78 15
 334 002a 0022     		movs	r2, #0
 335 002c 5A60     		str	r2, [r3, #4]
  79:./Hardware/Src/OLED.c **** 	GPIOB->OTYPER|=0x01<<3;
 336              		.loc 1 79 7
 337 002e 164B     		ldr	r3, .L14+4
 338 0030 5B68     		ldr	r3, [r3, #4]
 339 0032 154A     		ldr	r2, .L14+4
 340              		.loc 1 79 15
 341 0034 43F00803 		orr	r3, r3, #8
 342 0038 5360     		str	r3, [r2, #4]
  80:./Hardware/Src/OLED.c **** 	GPIOB->OTYPER|=0x01<<10;
 343              		.loc 1 80 7
 344 003a 134B     		ldr	r3, .L14+4
 345 003c 5B68     		ldr	r3, [r3, #4]
 346 003e 124A     		ldr	r2, .L14+4
 347              		.loc 1 80 15
 348 0040 43F48063 		orr	r3, r3, #1024
 349 0044 5360     		str	r3, [r2, #4]
  81:./Hardware/Src/OLED.c **** 	GPIOB->OSPEEDR=0x00;
 350              		.loc 1 81 7
 351 0046 104B     		ldr	r3, .L14+4
 352              		.loc 1 81 16
 353 0048 0022     		movs	r2, #0
 354 004a 9A60     		str	r2, [r3, #8]
  82:./Hardware/Src/OLED.c **** 	GPIOB->OSPEEDR|=0x02<<(2*3);
 355              		.loc 1 82 7
 356 004c 0E4B     		ldr	r3, .L14+4
 357 004e 9B68     		ldr	r3, [r3, #8]
 358 0050 0D4A     		ldr	r2, .L14+4
 359              		.loc 1 82 16
 360 0052 43F08003 		orr	r3, r3, #128
 361 0056 9360     		str	r3, [r2, #8]
  83:./Hardware/Src/OLED.c **** 	GPIOB->OSPEEDR|=0x02<<(2*10);
 362              		.loc 1 83 7
 363 0058 0B4B     		ldr	r3, .L14+4
 364 005a 9B68     		ldr	r3, [r3, #8]
 365 005c 0A4A     		ldr	r2, .L14+4
 366              		.loc 1 83 16
 367 005e 43F40013 		orr	r3, r3, #2097152
 368 0062 9360     		str	r3, [r2, #8]
  84:./Hardware/Src/OLED.c **** 	GPIOB->PUPDR=0x00;
 369              		.loc 1 84 7
 370 0064 084B     		ldr	r3, .L14+4
 371              		.loc 1 84 14
 372 0066 0022     		movs	r2, #0
 373 0068 DA60     		str	r2, [r3, #12]
  85:./Hardware/Src/OLED.c **** 	
  86:./Hardware/Src/OLED.c **** 	OLED_W_SCL(1);
ARM GAS  /tmp/ccR9eYAD.s 			page 14


 374              		.loc 1 86 2
 375 006a 0122     		movs	r2, #1
 376 006c 4FF48061 		mov	r1, #1024
 377 0070 0548     		ldr	r0, .L14+4
 378 0072 FFF7FEFF 		bl	GPIO_WriteBit
  87:./Hardware/Src/OLED.c **** 	OLED_W_SDA(1);
 379              		.loc 1 87 2
 380 0076 0122     		movs	r2, #1
 381 0078 0821     		movs	r1, #8
 382 007a 0348     		ldr	r0, .L14+4
 383 007c FFF7FEFF 		bl	GPIO_WriteBit
  88:./Hardware/Src/OLED.c **** }
 384              		.loc 1 88 1
 385 0080 00BF     		nop
 386 0082 80BD     		pop	{r7, pc}
 387              	.L15:
 388              		.align	2
 389              	.L14:
 390 0084 00380240 		.word	1073887232
 391 0088 00040240 		.word	1073873920
 392              		.cfi_endproc
 393              	.LFE125:
 395              		.section	.text.OLED_I2C_Start,"ax",%progbits
 396              		.align	1
 397              		.global	OLED_I2C_Start
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 402              	OLED_I2C_Start:
 403              	.LFB126:
  89:./Hardware/Src/OLED.c **** 
  90:./Hardware/Src/OLED.c **** /**
  91:./Hardware/Src/OLED.c ****   * @brief  I2C开始
  92:./Hardware/Src/OLED.c ****   * @param  无
  93:./Hardware/Src/OLED.c ****   * @retval 无
  94:./Hardware/Src/OLED.c ****   */
  95:./Hardware/Src/OLED.c **** void OLED_I2C_Start(void)
  96:./Hardware/Src/OLED.c **** {
 404              		.loc 1 96 1
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 1, uses_anonymous_args = 0
 408 0000 80B5     		push	{r7, lr}
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 7, -8
 411              		.cfi_offset 14, -4
 412 0002 00AF     		add	r7, sp, #0
 413              		.cfi_def_cfa_register 7
  97:./Hardware/Src/OLED.c **** 	OLED_W_SDA(1);
 414              		.loc 1 97 2
 415 0004 0122     		movs	r2, #1
 416 0006 0821     		movs	r1, #8
 417 0008 0A48     		ldr	r0, .L17
 418 000a FFF7FEFF 		bl	GPIO_WriteBit
  98:./Hardware/Src/OLED.c **** 	OLED_W_SCL(1);
 419              		.loc 1 98 2
 420 000e 0122     		movs	r2, #1
ARM GAS  /tmp/ccR9eYAD.s 			page 15


 421 0010 4FF48061 		mov	r1, #1024
 422 0014 0748     		ldr	r0, .L17
 423 0016 FFF7FEFF 		bl	GPIO_WriteBit
  99:./Hardware/Src/OLED.c **** 	OLED_W_SDA(0);
 424              		.loc 1 99 2
 425 001a 0022     		movs	r2, #0
 426 001c 0821     		movs	r1, #8
 427 001e 0548     		ldr	r0, .L17
 428 0020 FFF7FEFF 		bl	GPIO_WriteBit
 100:./Hardware/Src/OLED.c **** 	OLED_W_SCL(0);
 429              		.loc 1 100 2
 430 0024 0022     		movs	r2, #0
 431 0026 4FF48061 		mov	r1, #1024
 432 002a 0248     		ldr	r0, .L17
 433 002c FFF7FEFF 		bl	GPIO_WriteBit
 101:./Hardware/Src/OLED.c **** }
 434              		.loc 1 101 1
 435 0030 00BF     		nop
 436 0032 80BD     		pop	{r7, pc}
 437              	.L18:
 438              		.align	2
 439              	.L17:
 440 0034 00040240 		.word	1073873920
 441              		.cfi_endproc
 442              	.LFE126:
 444              		.section	.text.OLED_I2C_Stop,"ax",%progbits
 445              		.align	1
 446              		.global	OLED_I2C_Stop
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 451              	OLED_I2C_Stop:
 452              	.LFB127:
 102:./Hardware/Src/OLED.c **** 
 103:./Hardware/Src/OLED.c **** /**
 104:./Hardware/Src/OLED.c ****   * @brief  I2C停止
 105:./Hardware/Src/OLED.c ****   * @param  无
 106:./Hardware/Src/OLED.c ****   * @retval 无
 107:./Hardware/Src/OLED.c ****   */
 108:./Hardware/Src/OLED.c **** void OLED_I2C_Stop(void)
 109:./Hardware/Src/OLED.c **** {
 453              		.loc 1 109 1
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 1, uses_anonymous_args = 0
 457 0000 80B5     		push	{r7, lr}
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 7, -8
 460              		.cfi_offset 14, -4
 461 0002 00AF     		add	r7, sp, #0
 462              		.cfi_def_cfa_register 7
 110:./Hardware/Src/OLED.c **** 	OLED_W_SDA(0);
 463              		.loc 1 110 2
 464 0004 0022     		movs	r2, #0
 465 0006 0821     		movs	r1, #8
 466 0008 0748     		ldr	r0, .L20
 467 000a FFF7FEFF 		bl	GPIO_WriteBit
ARM GAS  /tmp/ccR9eYAD.s 			page 16


 111:./Hardware/Src/OLED.c **** 	OLED_W_SCL(1);
 468              		.loc 1 111 2
 469 000e 0122     		movs	r2, #1
 470 0010 4FF48061 		mov	r1, #1024
 471 0014 0448     		ldr	r0, .L20
 472 0016 FFF7FEFF 		bl	GPIO_WriteBit
 112:./Hardware/Src/OLED.c **** 	OLED_W_SDA(1);
 473              		.loc 1 112 2
 474 001a 0122     		movs	r2, #1
 475 001c 0821     		movs	r1, #8
 476 001e 0248     		ldr	r0, .L20
 477 0020 FFF7FEFF 		bl	GPIO_WriteBit
 113:./Hardware/Src/OLED.c **** }
 478              		.loc 1 113 1
 479 0024 00BF     		nop
 480 0026 80BD     		pop	{r7, pc}
 481              	.L21:
 482              		.align	2
 483              	.L20:
 484 0028 00040240 		.word	1073873920
 485              		.cfi_endproc
 486              	.LFE127:
 488              		.section	.text.OLED_I2C_SendByte,"ax",%progbits
 489              		.align	1
 490              		.global	OLED_I2C_SendByte
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 495              	OLED_I2C_SendByte:
 496              	.LFB128:
 114:./Hardware/Src/OLED.c **** 
 115:./Hardware/Src/OLED.c **** /**
 116:./Hardware/Src/OLED.c ****   * @brief  I2C发送一个字节
 117:./Hardware/Src/OLED.c ****   * @param  Byte 要发送的一个字节
 118:./Hardware/Src/OLED.c ****   * @retval 无
 119:./Hardware/Src/OLED.c ****   */
 120:./Hardware/Src/OLED.c **** void OLED_I2C_SendByte(uint8_t Byte)
 121:./Hardware/Src/OLED.c **** {
 497              		.loc 1 121 1
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 16
 500              		@ frame_needed = 1, uses_anonymous_args = 0
 501 0000 80B5     		push	{r7, lr}
 502              		.cfi_def_cfa_offset 8
 503              		.cfi_offset 7, -8
 504              		.cfi_offset 14, -4
 505 0002 84B0     		sub	sp, sp, #16
 506              		.cfi_def_cfa_offset 24
 507 0004 00AF     		add	r7, sp, #0
 508              		.cfi_def_cfa_register 7
 509 0006 0346     		mov	r3, r0
 510 0008 FB71     		strb	r3, [r7, #7]
 122:./Hardware/Src/OLED.c **** 	uint8_t i;
 123:./Hardware/Src/OLED.c **** 	for (i = 0; i < 8; i++)
 511              		.loc 1 123 9
 512 000a 0023     		movs	r3, #0
 513 000c FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccR9eYAD.s 			page 17


 514              		.loc 1 123 2
 515 000e 1DE0     		b	.L23
 516              	.L24:
 124:./Hardware/Src/OLED.c **** 	{
 125:./Hardware/Src/OLED.c **** 		OLED_W_SDA(Byte & (0x80 >> i));
 517              		.loc 1 125 3 discriminator 3
 518 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 519 0012 8022     		movs	r2, #128
 520 0014 42FA03F3 		asr	r3, r2, r3
 521 0018 5AB2     		sxtb	r2, r3
 522 001a 97F90730 		ldrsb	r3, [r7, #7]
 523 001e 1340     		ands	r3, r3, r2
 524 0020 5BB2     		sxtb	r3, r3
 525 0022 DBB2     		uxtb	r3, r3
 526 0024 1A46     		mov	r2, r3
 527 0026 0821     		movs	r1, #8
 528 0028 1248     		ldr	r0, .L25
 529 002a FFF7FEFF 		bl	GPIO_WriteBit
 126:./Hardware/Src/OLED.c **** 		OLED_W_SCL(1);
 530              		.loc 1 126 3 discriminator 3
 531 002e 0122     		movs	r2, #1
 532 0030 4FF48061 		mov	r1, #1024
 533 0034 0F48     		ldr	r0, .L25
 534 0036 FFF7FEFF 		bl	GPIO_WriteBit
 127:./Hardware/Src/OLED.c **** 		OLED_W_SCL(0);
 535              		.loc 1 127 3 discriminator 3
 536 003a 0022     		movs	r2, #0
 537 003c 4FF48061 		mov	r1, #1024
 538 0040 0C48     		ldr	r0, .L25
 539 0042 FFF7FEFF 		bl	GPIO_WriteBit
 123:./Hardware/Src/OLED.c **** 	{
 540              		.loc 1 123 22 discriminator 3
 541 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 542 0048 0133     		adds	r3, r3, #1
 543 004a FB73     		strb	r3, [r7, #15]
 544              	.L23:
 123:./Hardware/Src/OLED.c **** 	{
 545              		.loc 1 123 16 discriminator 1
 546 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 547 004e 072B     		cmp	r3, #7
 548 0050 DED9     		bls	.L24
 128:./Hardware/Src/OLED.c **** 	}
 129:./Hardware/Src/OLED.c **** 	OLED_W_SCL(1);	//额外的一个时钟，不处理应答信号
 549              		.loc 1 129 2
 550 0052 0122     		movs	r2, #1
 551 0054 4FF48061 		mov	r1, #1024
 552 0058 0648     		ldr	r0, .L25
 553 005a FFF7FEFF 		bl	GPIO_WriteBit
 130:./Hardware/Src/OLED.c **** 	OLED_W_SCL(0);
 554              		.loc 1 130 2
 555 005e 0022     		movs	r2, #0
 556 0060 4FF48061 		mov	r1, #1024
 557 0064 0348     		ldr	r0, .L25
 558 0066 FFF7FEFF 		bl	GPIO_WriteBit
 131:./Hardware/Src/OLED.c **** }
 559              		.loc 1 131 1
 560 006a 00BF     		nop
ARM GAS  /tmp/ccR9eYAD.s 			page 18


 561 006c 1037     		adds	r7, r7, #16
 562              		.cfi_def_cfa_offset 8
 563 006e BD46     		mov	sp, r7
 564              		.cfi_def_cfa_register 13
 565              		@ sp needed
 566 0070 80BD     		pop	{r7, pc}
 567              	.L26:
 568 0072 00BF     		.align	2
 569              	.L25:
 570 0074 00040240 		.word	1073873920
 571              		.cfi_endproc
 572              	.LFE128:
 574              		.section	.text.OLED_WriteCommand,"ax",%progbits
 575              		.align	1
 576              		.global	OLED_WriteCommand
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 581              	OLED_WriteCommand:
 582              	.LFB129:
 132:./Hardware/Src/OLED.c **** 
 133:./Hardware/Src/OLED.c **** /**
 134:./Hardware/Src/OLED.c ****   * @brief  OLED写命令
 135:./Hardware/Src/OLED.c ****   * @param  Command 要写入的命令
 136:./Hardware/Src/OLED.c ****   * @retval 无
 137:./Hardware/Src/OLED.c ****   */
 138:./Hardware/Src/OLED.c **** void OLED_WriteCommand(uint8_t Command)
 139:./Hardware/Src/OLED.c **** {
 583              		.loc 1 139 1
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 8
 586              		@ frame_needed = 1, uses_anonymous_args = 0
 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 82B0     		sub	sp, sp, #8
 592              		.cfi_def_cfa_offset 16
 593 0004 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
 595 0006 0346     		mov	r3, r0
 596 0008 FB71     		strb	r3, [r7, #7]
 140:./Hardware/Src/OLED.c **** 	OLED_I2C_Start();
 597              		.loc 1 140 2
 598 000a FFF7FEFF 		bl	OLED_I2C_Start
 141:./Hardware/Src/OLED.c **** 	OLED_I2C_SendByte(0x78);		//从机地址
 599              		.loc 1 141 2
 600 000e 7820     		movs	r0, #120
 601 0010 FFF7FEFF 		bl	OLED_I2C_SendByte
 142:./Hardware/Src/OLED.c **** 	OLED_I2C_SendByte(0x00);		//写命令
 602              		.loc 1 142 2
 603 0014 0020     		movs	r0, #0
 604 0016 FFF7FEFF 		bl	OLED_I2C_SendByte
 143:./Hardware/Src/OLED.c **** 	OLED_I2C_SendByte(Command); 
 605              		.loc 1 143 2
 606 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 607 001c 1846     		mov	r0, r3
ARM GAS  /tmp/ccR9eYAD.s 			page 19


 608 001e FFF7FEFF 		bl	OLED_I2C_SendByte
 144:./Hardware/Src/OLED.c **** 	OLED_I2C_Stop();
 609              		.loc 1 144 2
 610 0022 FFF7FEFF 		bl	OLED_I2C_Stop
 145:./Hardware/Src/OLED.c **** }
 611              		.loc 1 145 1
 612 0026 00BF     		nop
 613 0028 0837     		adds	r7, r7, #8
 614              		.cfi_def_cfa_offset 8
 615 002a BD46     		mov	sp, r7
 616              		.cfi_def_cfa_register 13
 617              		@ sp needed
 618 002c 80BD     		pop	{r7, pc}
 619              		.cfi_endproc
 620              	.LFE129:
 622              		.section	.text.OLED_WriteData,"ax",%progbits
 623              		.align	1
 624              		.global	OLED_WriteData
 625              		.syntax unified
 626              		.thumb
 627              		.thumb_func
 629              	OLED_WriteData:
 630              	.LFB130:
 146:./Hardware/Src/OLED.c **** 
 147:./Hardware/Src/OLED.c **** /**
 148:./Hardware/Src/OLED.c ****   * @brief  OLED写数据
 149:./Hardware/Src/OLED.c ****   * @param  Data 要写入的数据
 150:./Hardware/Src/OLED.c ****   * @retval 无
 151:./Hardware/Src/OLED.c ****   */
 152:./Hardware/Src/OLED.c **** void OLED_WriteData(uint8_t Data)
 153:./Hardware/Src/OLED.c **** {
 631              		.loc 1 153 1
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 8
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635 0000 80B5     		push	{r7, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 7, -8
 638              		.cfi_offset 14, -4
 639 0002 82B0     		sub	sp, sp, #8
 640              		.cfi_def_cfa_offset 16
 641 0004 00AF     		add	r7, sp, #0
 642              		.cfi_def_cfa_register 7
 643 0006 0346     		mov	r3, r0
 644 0008 FB71     		strb	r3, [r7, #7]
 154:./Hardware/Src/OLED.c **** 	OLED_I2C_Start();
 645              		.loc 1 154 2
 646 000a FFF7FEFF 		bl	OLED_I2C_Start
 155:./Hardware/Src/OLED.c **** 	OLED_I2C_SendByte(0x78);		//从机地址
 647              		.loc 1 155 2
 648 000e 7820     		movs	r0, #120
 649 0010 FFF7FEFF 		bl	OLED_I2C_SendByte
 156:./Hardware/Src/OLED.c **** 	OLED_I2C_SendByte(0x40);		//写数据
 650              		.loc 1 156 2
 651 0014 4020     		movs	r0, #64
 652 0016 FFF7FEFF 		bl	OLED_I2C_SendByte
 157:./Hardware/Src/OLED.c **** 	OLED_I2C_SendByte(Data);
ARM GAS  /tmp/ccR9eYAD.s 			page 20


 653              		.loc 1 157 2
 654 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 655 001c 1846     		mov	r0, r3
 656 001e FFF7FEFF 		bl	OLED_I2C_SendByte
 158:./Hardware/Src/OLED.c **** 	OLED_I2C_Stop();
 657              		.loc 1 158 2
 658 0022 FFF7FEFF 		bl	OLED_I2C_Stop
 159:./Hardware/Src/OLED.c **** }
 659              		.loc 1 159 1
 660 0026 00BF     		nop
 661 0028 0837     		adds	r7, r7, #8
 662              		.cfi_def_cfa_offset 8
 663 002a BD46     		mov	sp, r7
 664              		.cfi_def_cfa_register 13
 665              		@ sp needed
 666 002c 80BD     		pop	{r7, pc}
 667              		.cfi_endproc
 668              	.LFE130:
 670              		.section	.text.OLED_SetCursor,"ax",%progbits
 671              		.align	1
 672              		.global	OLED_SetCursor
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 677              	OLED_SetCursor:
 678              	.LFB131:
 160:./Hardware/Src/OLED.c **** 
 161:./Hardware/Src/OLED.c **** /**
 162:./Hardware/Src/OLED.c ****   * @brief  OLED设置光标位置
 163:./Hardware/Src/OLED.c ****   * @param  Y 以左上角为原点，向下方向的坐标，范围：0~7
 164:./Hardware/Src/OLED.c ****   * @param  X 以左上角为原点，向右方向的坐标，范围：0~127
 165:./Hardware/Src/OLED.c ****   * @retval 无
 166:./Hardware/Src/OLED.c ****   */
 167:./Hardware/Src/OLED.c **** void OLED_SetCursor(uint8_t Y, uint8_t X)
 168:./Hardware/Src/OLED.c **** {
 679              		.loc 1 168 1
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 8
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683 0000 80B5     		push	{r7, lr}
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 82B0     		sub	sp, sp, #8
 688              		.cfi_def_cfa_offset 16
 689 0004 00AF     		add	r7, sp, #0
 690              		.cfi_def_cfa_register 7
 691 0006 0346     		mov	r3, r0
 692 0008 0A46     		mov	r2, r1
 693 000a FB71     		strb	r3, [r7, #7]
 694 000c 1346     		mov	r3, r2
 695 000e BB71     		strb	r3, [r7, #6]
 169:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xB0 | Y);					//设置Y位置
 696              		.loc 1 169 2
 697 0010 FB79     		ldrb	r3, [r7, #7]
 698 0012 63F04F03 		orn	r3, r3, #79
 699 0016 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccR9eYAD.s 			page 21


 700 0018 1846     		mov	r0, r3
 701 001a FFF7FEFF 		bl	OLED_WriteCommand
 170:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0x10 | ((X & 0xF0) >> 4));	//设置X位置低4位
 702              		.loc 1 170 39
 703 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 704 0020 1B09     		lsrs	r3, r3, #4
 705 0022 DBB2     		uxtb	r3, r3
 706              		.loc 1 170 2
 707 0024 43F01003 		orr	r3, r3, #16
 708 0028 DBB2     		uxtb	r3, r3
 709 002a 1846     		mov	r0, r3
 710 002c FFF7FEFF 		bl	OLED_WriteCommand
 171:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0x00 | (X & 0x0F));			//设置X位置高4位
 711              		.loc 1 171 2
 712 0030 BB79     		ldrb	r3, [r7, #6]
 713 0032 03F00F03 		and	r3, r3, #15
 714 0036 DBB2     		uxtb	r3, r3
 715 0038 1846     		mov	r0, r3
 716 003a FFF7FEFF 		bl	OLED_WriteCommand
 172:./Hardware/Src/OLED.c **** }
 717              		.loc 1 172 1
 718 003e 00BF     		nop
 719 0040 0837     		adds	r7, r7, #8
 720              		.cfi_def_cfa_offset 8
 721 0042 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 0044 80BD     		pop	{r7, pc}
 725              		.cfi_endproc
 726              	.LFE131:
 728              		.section	.text.OLED_Clear,"ax",%progbits
 729              		.align	1
 730              		.global	OLED_Clear
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	OLED_Clear:
 736              	.LFB132:
 173:./Hardware/Src/OLED.c **** 
 174:./Hardware/Src/OLED.c **** /**
 175:./Hardware/Src/OLED.c ****   * @brief  OLED清屏
 176:./Hardware/Src/OLED.c ****   * @param  无
 177:./Hardware/Src/OLED.c ****   * @retval 无
 178:./Hardware/Src/OLED.c ****   */
 179:./Hardware/Src/OLED.c **** void OLED_Clear(void)
 180:./Hardware/Src/OLED.c **** {  
 737              		.loc 1 180 1
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 8
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741 0000 80B5     		push	{r7, lr}
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 7, -8
 744              		.cfi_offset 14, -4
 745 0002 82B0     		sub	sp, sp, #8
 746              		.cfi_def_cfa_offset 16
 747 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccR9eYAD.s 			page 22


 748              		.cfi_def_cfa_register 7
 181:./Hardware/Src/OLED.c **** 	uint8_t i, j;
 182:./Hardware/Src/OLED.c **** 	for (j = 0; j < 8; j++)
 749              		.loc 1 182 9
 750 0006 0023     		movs	r3, #0
 751 0008 BB71     		strb	r3, [r7, #6]
 752              		.loc 1 182 2
 753 000a 14E0     		b	.L31
 754              	.L34:
 183:./Hardware/Src/OLED.c **** 	{
 184:./Hardware/Src/OLED.c **** 		OLED_SetCursor(j, 0);
 755              		.loc 1 184 3
 756 000c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 757 000e 0021     		movs	r1, #0
 758 0010 1846     		mov	r0, r3
 759 0012 FFF7FEFF 		bl	OLED_SetCursor
 185:./Hardware/Src/OLED.c **** 		for(i = 0; i < 128; i++)
 760              		.loc 1 185 9
 761 0016 0023     		movs	r3, #0
 762 0018 FB71     		strb	r3, [r7, #7]
 763              		.loc 1 185 3
 764 001a 05E0     		b	.L32
 765              	.L33:
 186:./Hardware/Src/OLED.c **** 		{
 187:./Hardware/Src/OLED.c **** 			OLED_WriteData(0x00);
 766              		.loc 1 187 4 discriminator 3
 767 001c 0020     		movs	r0, #0
 768 001e FFF7FEFF 		bl	OLED_WriteData
 185:./Hardware/Src/OLED.c **** 		for(i = 0; i < 128; i++)
 769              		.loc 1 185 24 discriminator 3
 770 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 771 0024 0133     		adds	r3, r3, #1
 772 0026 FB71     		strb	r3, [r7, #7]
 773              	.L32:
 185:./Hardware/Src/OLED.c **** 		for(i = 0; i < 128; i++)
 774              		.loc 1 185 16 discriminator 1
 775 0028 97F90730 		ldrsb	r3, [r7, #7]
 776 002c 002B     		cmp	r3, #0
 777 002e F5DA     		bge	.L33
 182:./Hardware/Src/OLED.c **** 	{
 778              		.loc 1 182 22 discriminator 2
 779 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 780 0032 0133     		adds	r3, r3, #1
 781 0034 BB71     		strb	r3, [r7, #6]
 782              	.L31:
 182:./Hardware/Src/OLED.c **** 	{
 783              		.loc 1 182 16 discriminator 1
 784 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 785 0038 072B     		cmp	r3, #7
 786 003a E7D9     		bls	.L34
 188:./Hardware/Src/OLED.c **** 		}
 189:./Hardware/Src/OLED.c **** 	}
 190:./Hardware/Src/OLED.c **** }
 787              		.loc 1 190 1
 788 003c 00BF     		nop
 789 003e 00BF     		nop
 790 0040 0837     		adds	r7, r7, #8
ARM GAS  /tmp/ccR9eYAD.s 			page 23


 791              		.cfi_def_cfa_offset 8
 792 0042 BD46     		mov	sp, r7
 793              		.cfi_def_cfa_register 13
 794              		@ sp needed
 795 0044 80BD     		pop	{r7, pc}
 796              		.cfi_endproc
 797              	.LFE132:
 799              		.section	.text.OLED_ShowChar,"ax",%progbits
 800              		.align	1
 801              		.global	OLED_ShowChar
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 806              	OLED_ShowChar:
 807              	.LFB133:
 191:./Hardware/Src/OLED.c **** 
 192:./Hardware/Src/OLED.c **** /**
 193:./Hardware/Src/OLED.c ****   * @brief  OLED显示一个字符
 194:./Hardware/Src/OLED.c ****   * @param  Line 行位置，范围：1~4
 195:./Hardware/Src/OLED.c ****   * @param  Column 列位置，范围：1~16
 196:./Hardware/Src/OLED.c ****   * @param  Char 要显示的一个字符，范围：ASCII可见字符
 197:./Hardware/Src/OLED.c ****   * @retval 无
 198:./Hardware/Src/OLED.c ****   */
 199:./Hardware/Src/OLED.c **** void OLED_ShowChar(uint8_t Line, uint8_t Column, char Char)
 200:./Hardware/Src/OLED.c **** {      	
 808              		.loc 1 200 1
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 16
 811              		@ frame_needed = 1, uses_anonymous_args = 0
 812 0000 80B5     		push	{r7, lr}
 813              		.cfi_def_cfa_offset 8
 814              		.cfi_offset 7, -8
 815              		.cfi_offset 14, -4
 816 0002 84B0     		sub	sp, sp, #16
 817              		.cfi_def_cfa_offset 24
 818 0004 00AF     		add	r7, sp, #0
 819              		.cfi_def_cfa_register 7
 820 0006 0346     		mov	r3, r0
 821 0008 FB71     		strb	r3, [r7, #7]
 822 000a 0B46     		mov	r3, r1
 823 000c BB71     		strb	r3, [r7, #6]
 824 000e 1346     		mov	r3, r2
 825 0010 7B71     		strb	r3, [r7, #5]
 201:./Hardware/Src/OLED.c **** 	uint8_t i;
 202:./Hardware/Src/OLED.c **** 	OLED_SetCursor((Line - 1) * 2, (Column - 1) * 8);		//设置光标位置在上半部分
 826              		.loc 1 202 2
 827 0012 FB79     		ldrb	r3, [r7, #7]
 828 0014 013B     		subs	r3, r3, #1
 829 0016 DBB2     		uxtb	r3, r3
 830 0018 5B00     		lsls	r3, r3, #1
 831 001a DAB2     		uxtb	r2, r3
 832 001c BB79     		ldrb	r3, [r7, #6]
 833 001e 013B     		subs	r3, r3, #1
 834 0020 DBB2     		uxtb	r3, r3
 835 0022 DB00     		lsls	r3, r3, #3
 836 0024 DBB2     		uxtb	r3, r3
 837 0026 1946     		mov	r1, r3
ARM GAS  /tmp/ccR9eYAD.s 			page 24


 838 0028 1046     		mov	r0, r2
 839 002a FFF7FEFF 		bl	OLED_SetCursor
 203:./Hardware/Src/OLED.c **** 	for (i = 0; i < 8; i++)
 840              		.loc 1 203 9
 841 002e 0023     		movs	r3, #0
 842 0030 FB73     		strb	r3, [r7, #15]
 843              		.loc 1 203 2
 844 0032 0EE0     		b	.L36
 845              	.L37:
 204:./Hardware/Src/OLED.c **** 	{
 205:./Hardware/Src/OLED.c **** 		OLED_WriteData(OLED_F8x16[Char - ' '][i]);			//显示上半部分内容
 846              		.loc 1 205 34 discriminator 3
 847 0034 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 848 0036 A3F12002 		sub	r2, r3, #32
 849              		.loc 1 205 3 discriminator 3
 850 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 851              		.loc 1 205 40 discriminator 3
 852 003c 1C49     		ldr	r1, .L40
 853 003e 1201     		lsls	r2, r2, #4
 854 0040 0A44     		add	r2, r2, r1
 855 0042 1344     		add	r3, r3, r2
 856 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 857              		.loc 1 205 3 discriminator 3
 858 0046 1846     		mov	r0, r3
 859 0048 FFF7FEFF 		bl	OLED_WriteData
 203:./Hardware/Src/OLED.c **** 	for (i = 0; i < 8; i++)
 860              		.loc 1 203 22 discriminator 3
 861 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 862 004e 0133     		adds	r3, r3, #1
 863 0050 FB73     		strb	r3, [r7, #15]
 864              	.L36:
 203:./Hardware/Src/OLED.c **** 	for (i = 0; i < 8; i++)
 865              		.loc 1 203 16 discriminator 1
 866 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 867 0054 072B     		cmp	r3, #7
 868 0056 EDD9     		bls	.L37
 206:./Hardware/Src/OLED.c **** 	}
 207:./Hardware/Src/OLED.c **** 	OLED_SetCursor((Line - 1) * 2 + 1, (Column - 1) * 8);	//设置光标位置在下半部分
 869              		.loc 1 207 2
 870 0058 FB79     		ldrb	r3, [r7, #7]
 871 005a 013B     		subs	r3, r3, #1
 872 005c DBB2     		uxtb	r3, r3
 873 005e 5B00     		lsls	r3, r3, #1
 874 0060 DBB2     		uxtb	r3, r3
 875 0062 0133     		adds	r3, r3, #1
 876 0064 DAB2     		uxtb	r2, r3
 877 0066 BB79     		ldrb	r3, [r7, #6]
 878 0068 013B     		subs	r3, r3, #1
 879 006a DBB2     		uxtb	r3, r3
 880 006c DB00     		lsls	r3, r3, #3
 881 006e DBB2     		uxtb	r3, r3
 882 0070 1946     		mov	r1, r3
 883 0072 1046     		mov	r0, r2
 884 0074 FFF7FEFF 		bl	OLED_SetCursor
 208:./Hardware/Src/OLED.c **** 	for (i = 0; i < 8; i++)
 885              		.loc 1 208 9
 886 0078 0023     		movs	r3, #0
ARM GAS  /tmp/ccR9eYAD.s 			page 25


 887 007a FB73     		strb	r3, [r7, #15]
 888              		.loc 1 208 2
 889 007c 0FE0     		b	.L38
 890              	.L39:
 209:./Hardware/Src/OLED.c **** 	{
 210:./Hardware/Src/OLED.c **** 		OLED_WriteData(OLED_F8x16[Char - ' '][i + 8]);		//显示下半部分内容
 891              		.loc 1 210 34 discriminator 3
 892 007e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 893 0080 A3F12002 		sub	r2, r3, #32
 894              		.loc 1 210 43 discriminator 3
 895 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 896 0086 0833     		adds	r3, r3, #8
 897              		.loc 1 210 40 discriminator 3
 898 0088 0949     		ldr	r1, .L40
 899 008a 1201     		lsls	r2, r2, #4
 900 008c 0A44     		add	r2, r2, r1
 901 008e 1344     		add	r3, r3, r2
 902 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 903              		.loc 1 210 3 discriminator 3
 904 0092 1846     		mov	r0, r3
 905 0094 FFF7FEFF 		bl	OLED_WriteData
 208:./Hardware/Src/OLED.c **** 	for (i = 0; i < 8; i++)
 906              		.loc 1 208 22 discriminator 3
 907 0098 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 908 009a 0133     		adds	r3, r3, #1
 909 009c FB73     		strb	r3, [r7, #15]
 910              	.L38:
 208:./Hardware/Src/OLED.c **** 	for (i = 0; i < 8; i++)
 911              		.loc 1 208 16 discriminator 1
 912 009e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 913 00a0 072B     		cmp	r3, #7
 914 00a2 ECD9     		bls	.L39
 211:./Hardware/Src/OLED.c **** 	}
 212:./Hardware/Src/OLED.c **** }
 915              		.loc 1 212 1
 916 00a4 00BF     		nop
 917 00a6 00BF     		nop
 918 00a8 1037     		adds	r7, r7, #16
 919              		.cfi_def_cfa_offset 8
 920 00aa BD46     		mov	sp, r7
 921              		.cfi_def_cfa_register 13
 922              		@ sp needed
 923 00ac 80BD     		pop	{r7, pc}
 924              	.L41:
 925 00ae 00BF     		.align	2
 926              	.L40:
 927 00b0 00000000 		.word	OLED_F8x16
 928              		.cfi_endproc
 929              	.LFE133:
 931              		.section	.text.OLED_ShowString,"ax",%progbits
 932              		.align	1
 933              		.global	OLED_ShowString
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 938              	OLED_ShowString:
 939              	.LFB134:
ARM GAS  /tmp/ccR9eYAD.s 			page 26


 213:./Hardware/Src/OLED.c **** 
 214:./Hardware/Src/OLED.c **** /**
 215:./Hardware/Src/OLED.c ****   * @brief  OLED显示字符串
 216:./Hardware/Src/OLED.c ****   * @param  Line 起始行位置，范围：1~4
 217:./Hardware/Src/OLED.c ****   * @param  Column 起始列位置，范围：1~16
 218:./Hardware/Src/OLED.c ****   * @param  String 要显示的字符串，范围：ASCII可见字符
 219:./Hardware/Src/OLED.c ****   * @retval 无
 220:./Hardware/Src/OLED.c ****   */
 221:./Hardware/Src/OLED.c **** void OLED_ShowString(uint8_t Line, uint8_t Column, char *String)
 222:./Hardware/Src/OLED.c **** {
 940              		.loc 1 222 1
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 16
 943              		@ frame_needed = 1, uses_anonymous_args = 0
 944 0000 80B5     		push	{r7, lr}
 945              		.cfi_def_cfa_offset 8
 946              		.cfi_offset 7, -8
 947              		.cfi_offset 14, -4
 948 0002 84B0     		sub	sp, sp, #16
 949              		.cfi_def_cfa_offset 24
 950 0004 00AF     		add	r7, sp, #0
 951              		.cfi_def_cfa_register 7
 952 0006 0346     		mov	r3, r0
 953 0008 3A60     		str	r2, [r7]
 954 000a FB71     		strb	r3, [r7, #7]
 955 000c 0B46     		mov	r3, r1
 956 000e BB71     		strb	r3, [r7, #6]
 223:./Hardware/Src/OLED.c **** 	uint8_t i;
 224:./Hardware/Src/OLED.c **** 	for (i = 0; String[i] != '\0'; i++)
 957              		.loc 1 224 9
 958 0010 0023     		movs	r3, #0
 959 0012 FB73     		strb	r3, [r7, #15]
 960              		.loc 1 224 2
 961 0014 0EE0     		b	.L43
 962              	.L44:
 225:./Hardware/Src/OLED.c **** 	{
 226:./Hardware/Src/OLED.c **** 		OLED_ShowChar(Line, Column + i, String[i]);
 963              		.loc 1 226 3 discriminator 3
 964 0016 BA79     		ldrb	r2, [r7, #6]
 965 0018 FB7B     		ldrb	r3, [r7, #15]
 966 001a 1344     		add	r3, r3, r2
 967 001c D9B2     		uxtb	r1, r3
 968              		.loc 1 226 41 discriminator 3
 969 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 970 0020 3A68     		ldr	r2, [r7]
 971 0022 1344     		add	r3, r3, r2
 972              		.loc 1 226 3 discriminator 3
 973 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 974 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 975 0028 1846     		mov	r0, r3
 976 002a FFF7FEFF 		bl	OLED_ShowChar
 224:./Hardware/Src/OLED.c **** 	{
 977              		.loc 1 224 34 discriminator 3
 978 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 979 0030 0133     		adds	r3, r3, #1
 980 0032 FB73     		strb	r3, [r7, #15]
 981              	.L43:
ARM GAS  /tmp/ccR9eYAD.s 			page 27


 224:./Hardware/Src/OLED.c **** 	{
 982              		.loc 1 224 20 discriminator 1
 983 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 984 0036 3A68     		ldr	r2, [r7]
 985 0038 1344     		add	r3, r3, r2
 986 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 224:./Hardware/Src/OLED.c **** 	{
 987              		.loc 1 224 24 discriminator 1
 988 003c 002B     		cmp	r3, #0
 989 003e EAD1     		bne	.L44
 227:./Hardware/Src/OLED.c **** 	}
 228:./Hardware/Src/OLED.c **** }
 990              		.loc 1 228 1
 991 0040 00BF     		nop
 992 0042 00BF     		nop
 993 0044 1037     		adds	r7, r7, #16
 994              		.cfi_def_cfa_offset 8
 995 0046 BD46     		mov	sp, r7
 996              		.cfi_def_cfa_register 13
 997              		@ sp needed
 998 0048 80BD     		pop	{r7, pc}
 999              		.cfi_endproc
 1000              	.LFE134:
 1002              		.section	.text.OLED_Pow,"ax",%progbits
 1003              		.align	1
 1004              		.global	OLED_Pow
 1005              		.syntax unified
 1006              		.thumb
 1007              		.thumb_func
 1009              	OLED_Pow:
 1010              	.LFB135:
 229:./Hardware/Src/OLED.c **** 
 230:./Hardware/Src/OLED.c **** /**
 231:./Hardware/Src/OLED.c ****   * @brief  OLED次方函数
 232:./Hardware/Src/OLED.c ****   * @retval 返回值等于X的Y次方
 233:./Hardware/Src/OLED.c ****   */
 234:./Hardware/Src/OLED.c **** uint32_t OLED_Pow(uint32_t X, uint32_t Y)
 235:./Hardware/Src/OLED.c **** {
 1011              		.loc 1 235 1
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 16
 1014              		@ frame_needed = 1, uses_anonymous_args = 0
 1015              		@ link register save eliminated.
 1016 0000 80B4     		push	{r7}
 1017              		.cfi_def_cfa_offset 4
 1018              		.cfi_offset 7, -4
 1019 0002 85B0     		sub	sp, sp, #20
 1020              		.cfi_def_cfa_offset 24
 1021 0004 00AF     		add	r7, sp, #0
 1022              		.cfi_def_cfa_register 7
 1023 0006 7860     		str	r0, [r7, #4]
 1024 0008 3960     		str	r1, [r7]
 236:./Hardware/Src/OLED.c **** 	uint32_t Result = 1;
 1025              		.loc 1 236 11
 1026 000a 0123     		movs	r3, #1
 1027 000c FB60     		str	r3, [r7, #12]
 237:./Hardware/Src/OLED.c **** 	while (Y--)
ARM GAS  /tmp/ccR9eYAD.s 			page 28


 1028              		.loc 1 237 8
 1029 000e 04E0     		b	.L46
 1030              	.L47:
 238:./Hardware/Src/OLED.c **** 	{
 239:./Hardware/Src/OLED.c **** 		Result *= X;
 1031              		.loc 1 239 10
 1032 0010 FB68     		ldr	r3, [r7, #12]
 1033 0012 7A68     		ldr	r2, [r7, #4]
 1034 0014 02FB03F3 		mul	r3, r2, r3
 1035 0018 FB60     		str	r3, [r7, #12]
 1036              	.L46:
 237:./Hardware/Src/OLED.c **** 	while (Y--)
 1037              		.loc 1 237 10
 1038 001a 3B68     		ldr	r3, [r7]
 1039 001c 5A1E     		subs	r2, r3, #1
 1040 001e 3A60     		str	r2, [r7]
 237:./Hardware/Src/OLED.c **** 	while (Y--)
 1041              		.loc 1 237 9
 1042 0020 002B     		cmp	r3, #0
 1043 0022 F5D1     		bne	.L47
 240:./Hardware/Src/OLED.c **** 	}
 241:./Hardware/Src/OLED.c **** 	return Result;
 1044              		.loc 1 241 9
 1045 0024 FB68     		ldr	r3, [r7, #12]
 242:./Hardware/Src/OLED.c **** }
 1046              		.loc 1 242 1
 1047 0026 1846     		mov	r0, r3
 1048 0028 1437     		adds	r7, r7, #20
 1049              		.cfi_def_cfa_offset 4
 1050 002a BD46     		mov	sp, r7
 1051              		.cfi_def_cfa_register 13
 1052              		@ sp needed
 1053 002c 5DF8047B 		ldr	r7, [sp], #4
 1054              		.cfi_restore 7
 1055              		.cfi_def_cfa_offset 0
 1056 0030 7047     		bx	lr
 1057              		.cfi_endproc
 1058              	.LFE135:
 1060              		.section	.text.OLED_ShowNum,"ax",%progbits
 1061              		.align	1
 1062              		.global	OLED_ShowNum
 1063              		.syntax unified
 1064              		.thumb
 1065              		.thumb_func
 1067              	OLED_ShowNum:
 1068              	.LFB136:
 243:./Hardware/Src/OLED.c **** 
 244:./Hardware/Src/OLED.c **** /**
 245:./Hardware/Src/OLED.c ****   * @brief  OLED显示数字（十进制，正数）
 246:./Hardware/Src/OLED.c ****   * @param  Line 起始行位置，范围：1~4
 247:./Hardware/Src/OLED.c ****   * @param  Column 起始列位置，范围：1~16
 248:./Hardware/Src/OLED.c ****   * @param  Number 要显示的数字，范围：0~4294967295
 249:./Hardware/Src/OLED.c ****   * @param  Length 要显示数字的长度，范围：1~10
 250:./Hardware/Src/OLED.c ****   * @retval 无
 251:./Hardware/Src/OLED.c ****   */
 252:./Hardware/Src/OLED.c **** void OLED_ShowNum(uint8_t Line, uint8_t Column, uint32_t Number, uint8_t Length)
 253:./Hardware/Src/OLED.c **** {
ARM GAS  /tmp/ccR9eYAD.s 			page 29


 1069              		.loc 1 253 1
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 16
 1072              		@ frame_needed = 1, uses_anonymous_args = 0
 1073 0000 90B5     		push	{r4, r7, lr}
 1074              		.cfi_def_cfa_offset 12
 1075              		.cfi_offset 4, -12
 1076              		.cfi_offset 7, -8
 1077              		.cfi_offset 14, -4
 1078 0002 85B0     		sub	sp, sp, #20
 1079              		.cfi_def_cfa_offset 32
 1080 0004 00AF     		add	r7, sp, #0
 1081              		.cfi_def_cfa_register 7
 1082 0006 3A60     		str	r2, [r7]
 1083 0008 1A46     		mov	r2, r3
 1084 000a 0346     		mov	r3, r0
 1085 000c FB71     		strb	r3, [r7, #7]
 1086 000e 0B46     		mov	r3, r1
 1087 0010 BB71     		strb	r3, [r7, #6]
 1088 0012 1346     		mov	r3, r2
 1089 0014 7B71     		strb	r3, [r7, #5]
 254:./Hardware/Src/OLED.c **** 	uint8_t i;
 255:./Hardware/Src/OLED.c **** 	for (i = 0; i < Length; i++)							
 1090              		.loc 1 255 9
 1091 0016 0023     		movs	r3, #0
 1092 0018 FB73     		strb	r3, [r7, #15]
 1093              		.loc 1 255 2
 1094 001a 23E0     		b	.L50
 1095              	.L51:
 256:./Hardware/Src/OLED.c **** 	{
 257:./Hardware/Src/OLED.c **** 		OLED_ShowChar(Line, Column + i, Number / OLED_Pow(10, Length - i - 1) % 10 + '0');
 1096              		.loc 1 257 3 discriminator 3
 1097 001c BA79     		ldrb	r2, [r7, #6]
 1098 001e FB7B     		ldrb	r3, [r7, #15]
 1099 0020 1344     		add	r3, r3, r2
 1100 0022 DCB2     		uxtb	r4, r3
 1101              		.loc 1 257 64 discriminator 3
 1102 0024 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1103 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1104 0028 D31A     		subs	r3, r2, r3
 1105              		.loc 1 257 68 discriminator 3
 1106 002a 013B     		subs	r3, r3, #1
 1107              		.loc 1 257 44 discriminator 3
 1108 002c 1946     		mov	r1, r3
 1109 002e 0A20     		movs	r0, #10
 1110 0030 FFF7FEFF 		bl	OLED_Pow
 1111 0034 0246     		mov	r2, r0
 1112              		.loc 1 257 42 discriminator 3
 1113 0036 3B68     		ldr	r3, [r7]
 1114 0038 B3FBF2F1 		udiv	r1, r3, r2
 1115              		.loc 1 257 73 discriminator 3
 1116 003c 0E4B     		ldr	r3, .L52
 1117 003e A3FB0123 		umull	r2, r3, r3, r1
 1118 0042 DA08     		lsrs	r2, r3, #3
 1119 0044 1346     		mov	r3, r2
 1120 0046 9B00     		lsls	r3, r3, #2
 1121 0048 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccR9eYAD.s 			page 30


 1122 004a 5B00     		lsls	r3, r3, #1
 1123 004c CA1A     		subs	r2, r1, r3
 1124              		.loc 1 257 3 discriminator 3
 1125 004e D3B2     		uxtb	r3, r2
 1126 0050 3033     		adds	r3, r3, #48
 1127 0052 DAB2     		uxtb	r2, r3
 1128 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1129 0056 2146     		mov	r1, r4
 1130 0058 1846     		mov	r0, r3
 1131 005a FFF7FEFF 		bl	OLED_ShowChar
 255:./Hardware/Src/OLED.c **** 	{
 1132              		.loc 1 255 27 discriminator 3
 1133 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1134 0060 0133     		adds	r3, r3, #1
 1135 0062 FB73     		strb	r3, [r7, #15]
 1136              	.L50:
 255:./Hardware/Src/OLED.c **** 	{
 1137              		.loc 1 255 16 discriminator 1
 1138 0064 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1139 0066 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1140 0068 9A42     		cmp	r2, r3
 1141 006a D7D3     		bcc	.L51
 258:./Hardware/Src/OLED.c **** 	}
 259:./Hardware/Src/OLED.c **** }
 1142              		.loc 1 259 1
 1143 006c 00BF     		nop
 1144 006e 00BF     		nop
 1145 0070 1437     		adds	r7, r7, #20
 1146              		.cfi_def_cfa_offset 12
 1147 0072 BD46     		mov	sp, r7
 1148              		.cfi_def_cfa_register 13
 1149              		@ sp needed
 1150 0074 90BD     		pop	{r4, r7, pc}
 1151              	.L53:
 1152 0076 00BF     		.align	2
 1153              	.L52:
 1154 0078 CDCCCCCC 		.word	-858993459
 1155              		.cfi_endproc
 1156              	.LFE136:
 1158              		.section	.text.OLED_ShowSignedNum,"ax",%progbits
 1159              		.align	1
 1160              		.global	OLED_ShowSignedNum
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1165              	OLED_ShowSignedNum:
 1166              	.LFB137:
 260:./Hardware/Src/OLED.c **** 
 261:./Hardware/Src/OLED.c **** /**
 262:./Hardware/Src/OLED.c ****   * @brief  OLED显示数字（十进制，带符号数）
 263:./Hardware/Src/OLED.c ****   * @param  Line 起始行位置，范围：1~4
 264:./Hardware/Src/OLED.c ****   * @param  Column 起始列位置，范围：1~16
 265:./Hardware/Src/OLED.c ****   * @param  Number 要显示的数字，范围：-2147483648~2147483647
 266:./Hardware/Src/OLED.c ****   * @param  Length 要显示数字的长度，范围：1~10
 267:./Hardware/Src/OLED.c ****   * @retval 无
 268:./Hardware/Src/OLED.c ****   */
 269:./Hardware/Src/OLED.c **** void OLED_ShowSignedNum(uint8_t Line, uint8_t Column, int32_t Number, uint8_t Length)
ARM GAS  /tmp/ccR9eYAD.s 			page 31


 270:./Hardware/Src/OLED.c **** {
 1167              		.loc 1 270 1
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 16
 1170              		@ frame_needed = 1, uses_anonymous_args = 0
 1171 0000 90B5     		push	{r4, r7, lr}
 1172              		.cfi_def_cfa_offset 12
 1173              		.cfi_offset 4, -12
 1174              		.cfi_offset 7, -8
 1175              		.cfi_offset 14, -4
 1176 0002 85B0     		sub	sp, sp, #20
 1177              		.cfi_def_cfa_offset 32
 1178 0004 00AF     		add	r7, sp, #0
 1179              		.cfi_def_cfa_register 7
 1180 0006 3A60     		str	r2, [r7]
 1181 0008 1A46     		mov	r2, r3
 1182 000a 0346     		mov	r3, r0
 1183 000c FB71     		strb	r3, [r7, #7]
 1184 000e 0B46     		mov	r3, r1
 1185 0010 BB71     		strb	r3, [r7, #6]
 1186 0012 1346     		mov	r3, r2
 1187 0014 7B71     		strb	r3, [r7, #5]
 271:./Hardware/Src/OLED.c **** 	uint8_t i;
 272:./Hardware/Src/OLED.c **** 	uint32_t Number1;
 273:./Hardware/Src/OLED.c **** 	if (Number >= 0)
 1188              		.loc 1 273 5
 1189 0016 3B68     		ldr	r3, [r7]
 1190 0018 002B     		cmp	r3, #0
 1191 001a 08DB     		blt	.L55
 274:./Hardware/Src/OLED.c **** 	{
 275:./Hardware/Src/OLED.c **** 		OLED_ShowChar(Line, Column, '+');
 1192              		.loc 1 275 3
 1193 001c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 1194 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1195 0020 2B22     		movs	r2, #43
 1196 0022 1846     		mov	r0, r3
 1197 0024 FFF7FEFF 		bl	OLED_ShowChar
 276:./Hardware/Src/OLED.c **** 		Number1 = Number;
 1198              		.loc 1 276 11
 1199 0028 3B68     		ldr	r3, [r7]
 1200 002a BB60     		str	r3, [r7, #8]
 1201 002c 08E0     		b	.L56
 1202              	.L55:
 277:./Hardware/Src/OLED.c **** 	}
 278:./Hardware/Src/OLED.c **** 	else
 279:./Hardware/Src/OLED.c **** 	{
 280:./Hardware/Src/OLED.c **** 		OLED_ShowChar(Line, Column, '-');
 1203              		.loc 1 280 3
 1204 002e B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 1205 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1206 0032 2D22     		movs	r2, #45
 1207 0034 1846     		mov	r0, r3
 1208 0036 FFF7FEFF 		bl	OLED_ShowChar
 281:./Hardware/Src/OLED.c **** 		Number1 = -Number;
 1209              		.loc 1 281 13
 1210 003a 3B68     		ldr	r3, [r7]
 1211 003c 5B42     		rsbs	r3, r3, #0
ARM GAS  /tmp/ccR9eYAD.s 			page 32


 1212              		.loc 1 281 11
 1213 003e BB60     		str	r3, [r7, #8]
 1214              	.L56:
 282:./Hardware/Src/OLED.c **** 	}
 283:./Hardware/Src/OLED.c **** 	for (i = 0; i < Length; i++)							
 1215              		.loc 1 283 9
 1216 0040 0023     		movs	r3, #0
 1217 0042 FB73     		strb	r3, [r7, #15]
 1218              		.loc 1 283 2
 1219 0044 25E0     		b	.L57
 1220              	.L58:
 284:./Hardware/Src/OLED.c **** 	{
 285:./Hardware/Src/OLED.c **** 		OLED_ShowChar(Line, Column + i + 1, Number1 / OLED_Pow(10, Length - i - 1) % 10 + '0');
 1221              		.loc 1 285 30 discriminator 3
 1222 0046 BA79     		ldrb	r2, [r7, #6]
 1223 0048 FB7B     		ldrb	r3, [r7, #15]
 1224 004a 1344     		add	r3, r3, r2
 1225 004c DBB2     		uxtb	r3, r3
 1226              		.loc 1 285 3 discriminator 3
 1227 004e 0133     		adds	r3, r3, #1
 1228 0050 DCB2     		uxtb	r4, r3
 1229              		.loc 1 285 69 discriminator 3
 1230 0052 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1231 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1232 0056 D31A     		subs	r3, r2, r3
 1233              		.loc 1 285 73 discriminator 3
 1234 0058 013B     		subs	r3, r3, #1
 1235              		.loc 1 285 49 discriminator 3
 1236 005a 1946     		mov	r1, r3
 1237 005c 0A20     		movs	r0, #10
 1238 005e FFF7FEFF 		bl	OLED_Pow
 1239 0062 0246     		mov	r2, r0
 1240              		.loc 1 285 47 discriminator 3
 1241 0064 BB68     		ldr	r3, [r7, #8]
 1242 0066 B3FBF2F1 		udiv	r1, r3, r2
 1243              		.loc 1 285 78 discriminator 3
 1244 006a 0E4B     		ldr	r3, .L59
 1245 006c A3FB0123 		umull	r2, r3, r3, r1
 1246 0070 DA08     		lsrs	r2, r3, #3
 1247 0072 1346     		mov	r3, r2
 1248 0074 9B00     		lsls	r3, r3, #2
 1249 0076 1344     		add	r3, r3, r2
 1250 0078 5B00     		lsls	r3, r3, #1
 1251 007a CA1A     		subs	r2, r1, r3
 1252              		.loc 1 285 3 discriminator 3
 1253 007c D3B2     		uxtb	r3, r2
 1254 007e 3033     		adds	r3, r3, #48
 1255 0080 DAB2     		uxtb	r2, r3
 1256 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1257 0084 2146     		mov	r1, r4
 1258 0086 1846     		mov	r0, r3
 1259 0088 FFF7FEFF 		bl	OLED_ShowChar
 283:./Hardware/Src/OLED.c **** 	{
 1260              		.loc 1 283 27 discriminator 3
 1261 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1262 008e 0133     		adds	r3, r3, #1
 1263 0090 FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccR9eYAD.s 			page 33


 1264              	.L57:
 283:./Hardware/Src/OLED.c **** 	{
 1265              		.loc 1 283 16 discriminator 1
 1266 0092 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1267 0094 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1268 0096 9A42     		cmp	r2, r3
 1269 0098 D5D3     		bcc	.L58
 286:./Hardware/Src/OLED.c **** 	}
 287:./Hardware/Src/OLED.c **** }
 1270              		.loc 1 287 1
 1271 009a 00BF     		nop
 1272 009c 00BF     		nop
 1273 009e 1437     		adds	r7, r7, #20
 1274              		.cfi_def_cfa_offset 12
 1275 00a0 BD46     		mov	sp, r7
 1276              		.cfi_def_cfa_register 13
 1277              		@ sp needed
 1278 00a2 90BD     		pop	{r4, r7, pc}
 1279              	.L60:
 1280              		.align	2
 1281              	.L59:
 1282 00a4 CDCCCCCC 		.word	-858993459
 1283              		.cfi_endproc
 1284              	.LFE137:
 1286              		.section	.text.OLED_ShowHexNum,"ax",%progbits
 1287              		.align	1
 1288              		.global	OLED_ShowHexNum
 1289              		.syntax unified
 1290              		.thumb
 1291              		.thumb_func
 1293              	OLED_ShowHexNum:
 1294              	.LFB138:
 288:./Hardware/Src/OLED.c **** 
 289:./Hardware/Src/OLED.c **** /**
 290:./Hardware/Src/OLED.c ****   * @brief  OLED显示数字（十六进制，正数）
 291:./Hardware/Src/OLED.c ****   * @param  Line 起始行位置，范围：1~4
 292:./Hardware/Src/OLED.c ****   * @param  Column 起始列位置，范围：1~16
 293:./Hardware/Src/OLED.c ****   * @param  Number 要显示的数字，范围：0~0xFFFFFFFF
 294:./Hardware/Src/OLED.c ****   * @param  Length 要显示数字的长度，范围：1~8
 295:./Hardware/Src/OLED.c ****   * @retval 无
 296:./Hardware/Src/OLED.c ****   */
 297:./Hardware/Src/OLED.c **** void OLED_ShowHexNum(uint8_t Line, uint8_t Column, uint32_t Number, uint8_t Length)
 298:./Hardware/Src/OLED.c **** {
 1295              		.loc 1 298 1
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 16
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299 0000 80B5     		push	{r7, lr}
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 7, -8
 1302              		.cfi_offset 14, -4
 1303 0002 84B0     		sub	sp, sp, #16
 1304              		.cfi_def_cfa_offset 24
 1305 0004 00AF     		add	r7, sp, #0
 1306              		.cfi_def_cfa_register 7
 1307 0006 3A60     		str	r2, [r7]
 1308 0008 1A46     		mov	r2, r3
ARM GAS  /tmp/ccR9eYAD.s 			page 34


 1309 000a 0346     		mov	r3, r0
 1310 000c FB71     		strb	r3, [r7, #7]
 1311 000e 0B46     		mov	r3, r1
 1312 0010 BB71     		strb	r3, [r7, #6]
 1313 0012 1346     		mov	r3, r2
 1314 0014 7B71     		strb	r3, [r7, #5]
 299:./Hardware/Src/OLED.c **** 	uint8_t i, SingleNumber;
 300:./Hardware/Src/OLED.c **** 	for (i = 0; i < Length; i++)							
 1315              		.loc 1 300 9
 1316 0016 0023     		movs	r3, #0
 1317 0018 FB73     		strb	r3, [r7, #15]
 1318              		.loc 1 300 2
 1319 001a 2CE0     		b	.L62
 1320              	.L65:
 301:./Hardware/Src/OLED.c **** 	{
 302:./Hardware/Src/OLED.c **** 		SingleNumber = Number / OLED_Pow(16, Length - i - 1) % 16;
 1321              		.loc 1 302 47
 1322 001c 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1323 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1324 0020 D31A     		subs	r3, r2, r3
 1325              		.loc 1 302 51
 1326 0022 013B     		subs	r3, r3, #1
 1327              		.loc 1 302 27
 1328 0024 1946     		mov	r1, r3
 1329 0026 1020     		movs	r0, #16
 1330 0028 FFF7FEFF 		bl	OLED_Pow
 1331 002c 0246     		mov	r2, r0
 1332              		.loc 1 302 25
 1333 002e 3B68     		ldr	r3, [r7]
 1334 0030 B3FBF2F3 		udiv	r3, r3, r2
 1335              		.loc 1 302 56
 1336 0034 DBB2     		uxtb	r3, r3
 1337              		.loc 1 302 16
 1338 0036 03F00F03 		and	r3, r3, #15
 1339 003a BB73     		strb	r3, [r7, #14]
 303:./Hardware/Src/OLED.c **** 		if (SingleNumber < 10)
 1340              		.loc 1 303 6
 1341 003c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1342 003e 092B     		cmp	r3, #9
 1343 0040 0BD8     		bhi	.L63
 304:./Hardware/Src/OLED.c **** 		{
 305:./Hardware/Src/OLED.c **** 			OLED_ShowChar(Line, Column + i, SingleNumber + '0');
 1344              		.loc 1 305 4
 1345 0042 BA79     		ldrb	r2, [r7, #6]
 1346 0044 FB7B     		ldrb	r3, [r7, #15]
 1347 0046 1344     		add	r3, r3, r2
 1348 0048 D9B2     		uxtb	r1, r3
 1349 004a BB7B     		ldrb	r3, [r7, #14]
 1350 004c 3033     		adds	r3, r3, #48
 1351 004e DAB2     		uxtb	r2, r3
 1352 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1353 0052 1846     		mov	r0, r3
 1354 0054 FFF7FEFF 		bl	OLED_ShowChar
 1355 0058 0AE0     		b	.L64
 1356              	.L63:
 306:./Hardware/Src/OLED.c **** 		}
 307:./Hardware/Src/OLED.c **** 		else
ARM GAS  /tmp/ccR9eYAD.s 			page 35


 308:./Hardware/Src/OLED.c **** 		{
 309:./Hardware/Src/OLED.c **** 			OLED_ShowChar(Line, Column + i, SingleNumber - 10 + 'A');
 1357              		.loc 1 309 4
 1358 005a BA79     		ldrb	r2, [r7, #6]
 1359 005c FB7B     		ldrb	r3, [r7, #15]
 1360 005e 1344     		add	r3, r3, r2
 1361 0060 D9B2     		uxtb	r1, r3
 1362 0062 BB7B     		ldrb	r3, [r7, #14]
 1363 0064 3733     		adds	r3, r3, #55
 1364 0066 DAB2     		uxtb	r2, r3
 1365 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1366 006a 1846     		mov	r0, r3
 1367 006c FFF7FEFF 		bl	OLED_ShowChar
 1368              	.L64:
 300:./Hardware/Src/OLED.c **** 	{
 1369              		.loc 1 300 27 discriminator 2
 1370 0070 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1371 0072 0133     		adds	r3, r3, #1
 1372 0074 FB73     		strb	r3, [r7, #15]
 1373              	.L62:
 300:./Hardware/Src/OLED.c **** 	{
 1374              		.loc 1 300 16 discriminator 1
 1375 0076 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1376 0078 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1377 007a 9A42     		cmp	r2, r3
 1378 007c CED3     		bcc	.L65
 310:./Hardware/Src/OLED.c **** 		}
 311:./Hardware/Src/OLED.c **** 	}
 312:./Hardware/Src/OLED.c **** }
 1379              		.loc 1 312 1
 1380 007e 00BF     		nop
 1381 0080 00BF     		nop
 1382 0082 1037     		adds	r7, r7, #16
 1383              		.cfi_def_cfa_offset 8
 1384 0084 BD46     		mov	sp, r7
 1385              		.cfi_def_cfa_register 13
 1386              		@ sp needed
 1387 0086 80BD     		pop	{r7, pc}
 1388              		.cfi_endproc
 1389              	.LFE138:
 1391              		.section	.text.OLED_ShowBinNum,"ax",%progbits
 1392              		.align	1
 1393              		.global	OLED_ShowBinNum
 1394              		.syntax unified
 1395              		.thumb
 1396              		.thumb_func
 1398              	OLED_ShowBinNum:
 1399              	.LFB139:
 313:./Hardware/Src/OLED.c **** 
 314:./Hardware/Src/OLED.c **** /**
 315:./Hardware/Src/OLED.c ****   * @brief  OLED显示数字（二进制，正数）
 316:./Hardware/Src/OLED.c ****   * @param  Line 起始行位置，范围：1~4
 317:./Hardware/Src/OLED.c ****   * @param  Column 起始列位置，范围：1~16
 318:./Hardware/Src/OLED.c ****   * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 319:./Hardware/Src/OLED.c ****   * @param  Length 要显示数字的长度，范围：1~16
 320:./Hardware/Src/OLED.c ****   * @retval 无
 321:./Hardware/Src/OLED.c ****   */
ARM GAS  /tmp/ccR9eYAD.s 			page 36


 322:./Hardware/Src/OLED.c **** void OLED_ShowBinNum(uint8_t Line, uint8_t Column, uint32_t Number, uint8_t Length)
 323:./Hardware/Src/OLED.c **** {
 1400              		.loc 1 323 1
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 16
 1403              		@ frame_needed = 1, uses_anonymous_args = 0
 1404 0000 90B5     		push	{r4, r7, lr}
 1405              		.cfi_def_cfa_offset 12
 1406              		.cfi_offset 4, -12
 1407              		.cfi_offset 7, -8
 1408              		.cfi_offset 14, -4
 1409 0002 85B0     		sub	sp, sp, #20
 1410              		.cfi_def_cfa_offset 32
 1411 0004 00AF     		add	r7, sp, #0
 1412              		.cfi_def_cfa_register 7
 1413 0006 3A60     		str	r2, [r7]
 1414 0008 1A46     		mov	r2, r3
 1415 000a 0346     		mov	r3, r0
 1416 000c FB71     		strb	r3, [r7, #7]
 1417 000e 0B46     		mov	r3, r1
 1418 0010 BB71     		strb	r3, [r7, #6]
 1419 0012 1346     		mov	r3, r2
 1420 0014 7B71     		strb	r3, [r7, #5]
 324:./Hardware/Src/OLED.c **** 	uint8_t i;
 325:./Hardware/Src/OLED.c **** 	for (i = 0; i < Length; i++)							
 1421              		.loc 1 325 9
 1422 0016 0023     		movs	r3, #0
 1423 0018 FB73     		strb	r3, [r7, #15]
 1424              		.loc 1 325 2
 1425 001a 1DE0     		b	.L67
 1426              	.L68:
 326:./Hardware/Src/OLED.c **** 	{
 327:./Hardware/Src/OLED.c **** 		OLED_ShowChar(Line, Column + i, Number / OLED_Pow(2, Length - i - 1) % 2 + '0');
 1427              		.loc 1 327 3 discriminator 3
 1428 001c BA79     		ldrb	r2, [r7, #6]
 1429 001e FB7B     		ldrb	r3, [r7, #15]
 1430 0020 1344     		add	r3, r3, r2
 1431 0022 DCB2     		uxtb	r4, r3
 1432              		.loc 1 327 63 discriminator 3
 1433 0024 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1434 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1435 0028 D31A     		subs	r3, r2, r3
 1436              		.loc 1 327 67 discriminator 3
 1437 002a 013B     		subs	r3, r3, #1
 1438              		.loc 1 327 44 discriminator 3
 1439 002c 1946     		mov	r1, r3
 1440 002e 0220     		movs	r0, #2
 1441 0030 FFF7FEFF 		bl	OLED_Pow
 1442 0034 0246     		mov	r2, r0
 1443              		.loc 1 327 42 discriminator 3
 1444 0036 3B68     		ldr	r3, [r7]
 1445 0038 B3FBF2F3 		udiv	r3, r3, r2
 1446              		.loc 1 327 72 discriminator 3
 1447 003c DBB2     		uxtb	r3, r3
 1448 003e 03F00103 		and	r3, r3, #1
 1449 0042 DBB2     		uxtb	r3, r3
 1450              		.loc 1 327 3 discriminator 3
ARM GAS  /tmp/ccR9eYAD.s 			page 37


 1451 0044 3033     		adds	r3, r3, #48
 1452 0046 DAB2     		uxtb	r2, r3
 1453 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1454 004a 2146     		mov	r1, r4
 1455 004c 1846     		mov	r0, r3
 1456 004e FFF7FEFF 		bl	OLED_ShowChar
 325:./Hardware/Src/OLED.c **** 	{
 1457              		.loc 1 325 27 discriminator 3
 1458 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1459 0054 0133     		adds	r3, r3, #1
 1460 0056 FB73     		strb	r3, [r7, #15]
 1461              	.L67:
 325:./Hardware/Src/OLED.c **** 	{
 1462              		.loc 1 325 16 discriminator 1
 1463 0058 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1464 005a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1465 005c 9A42     		cmp	r2, r3
 1466 005e DDD3     		bcc	.L68
 328:./Hardware/Src/OLED.c **** 	}
 329:./Hardware/Src/OLED.c **** }
 1467              		.loc 1 329 1
 1468 0060 00BF     		nop
 1469 0062 00BF     		nop
 1470 0064 1437     		adds	r7, r7, #20
 1471              		.cfi_def_cfa_offset 12
 1472 0066 BD46     		mov	sp, r7
 1473              		.cfi_def_cfa_register 13
 1474              		@ sp needed
 1475 0068 90BD     		pop	{r4, r7, pc}
 1476              		.cfi_endproc
 1477              	.LFE139:
 1479              		.section	.text.OLED_Init,"ax",%progbits
 1480              		.align	1
 1481              		.global	OLED_Init
 1482              		.syntax unified
 1483              		.thumb
 1484              		.thumb_func
 1486              	OLED_Init:
 1487              	.LFB140:
 330:./Hardware/Src/OLED.c **** 
 331:./Hardware/Src/OLED.c **** /**
 332:./Hardware/Src/OLED.c ****   * @brief  OLED初始化
 333:./Hardware/Src/OLED.c ****   * @param  无
 334:./Hardware/Src/OLED.c ****   * @retval 无
 335:./Hardware/Src/OLED.c ****   */
 336:./Hardware/Src/OLED.c **** void OLED_Init(void)
 337:./Hardware/Src/OLED.c **** {
 1488              		.loc 1 337 1
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 8
 1491              		@ frame_needed = 1, uses_anonymous_args = 0
 1492 0000 80B5     		push	{r7, lr}
 1493              		.cfi_def_cfa_offset 8
 1494              		.cfi_offset 7, -8
 1495              		.cfi_offset 14, -4
 1496 0002 82B0     		sub	sp, sp, #8
 1497              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccR9eYAD.s 			page 38


 1498 0004 00AF     		add	r7, sp, #0
 1499              		.cfi_def_cfa_register 7
 338:./Hardware/Src/OLED.c **** 	uint32_t i, j;
 339:./Hardware/Src/OLED.c **** 	
 340:./Hardware/Src/OLED.c **** 	for (i = 0; i < 1000; i++)			//上电延时
 1500              		.loc 1 340 9
 1501 0006 0023     		movs	r3, #0
 1502 0008 7B60     		str	r3, [r7, #4]
 1503              		.loc 1 340 2
 1504 000a 0CE0     		b	.L70
 1505              	.L73:
 341:./Hardware/Src/OLED.c **** 	{
 342:./Hardware/Src/OLED.c **** 		for (j = 0; j < 1000; j++);
 1506              		.loc 1 342 10
 1507 000c 0023     		movs	r3, #0
 1508 000e 3B60     		str	r3, [r7]
 1509              		.loc 1 342 3
 1510 0010 02E0     		b	.L71
 1511              	.L72:
 1512              		.loc 1 342 26 discriminator 3
 1513 0012 3B68     		ldr	r3, [r7]
 1514 0014 0133     		adds	r3, r3, #1
 1515 0016 3B60     		str	r3, [r7]
 1516              	.L71:
 1517              		.loc 1 342 17 discriminator 1
 1518 0018 3B68     		ldr	r3, [r7]
 1519 001a B3F57A7F 		cmp	r3, #1000
 1520 001e F8D3     		bcc	.L72
 340:./Hardware/Src/OLED.c **** 	{
 1521              		.loc 1 340 25 discriminator 2
 1522 0020 7B68     		ldr	r3, [r7, #4]
 1523 0022 0133     		adds	r3, r3, #1
 1524 0024 7B60     		str	r3, [r7, #4]
 1525              	.L70:
 340:./Hardware/Src/OLED.c **** 	{
 1526              		.loc 1 340 16 discriminator 1
 1527 0026 7B68     		ldr	r3, [r7, #4]
 1528 0028 B3F57A7F 		cmp	r3, #1000
 1529 002c EED3     		bcc	.L73
 343:./Hardware/Src/OLED.c **** 	}
 344:./Hardware/Src/OLED.c **** 	
 345:./Hardware/Src/OLED.c **** 	OLED_I2C_Init();			//端口初始化
 1530              		.loc 1 345 2
 1531 002e FFF7FEFF 		bl	OLED_I2C_Init
 346:./Hardware/Src/OLED.c **** 	
 347:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xAE);	//关闭显示
 1532              		.loc 1 347 2
 1533 0032 AE20     		movs	r0, #174
 1534 0034 FFF7FEFF 		bl	OLED_WriteCommand
 348:./Hardware/Src/OLED.c **** 	
 349:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xD5);	//设置显示时钟分频比/振荡器频率
 1535              		.loc 1 349 2
 1536 0038 D520     		movs	r0, #213
 1537 003a FFF7FEFF 		bl	OLED_WriteCommand
 350:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0x80);
 1538              		.loc 1 350 2
 1539 003e 8020     		movs	r0, #128
ARM GAS  /tmp/ccR9eYAD.s 			page 39


 1540 0040 FFF7FEFF 		bl	OLED_WriteCommand
 351:./Hardware/Src/OLED.c **** 	
 352:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xA8);	//设置多路复用率
 1541              		.loc 1 352 2
 1542 0044 A820     		movs	r0, #168
 1543 0046 FFF7FEFF 		bl	OLED_WriteCommand
 353:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0x3F);
 1544              		.loc 1 353 2
 1545 004a 3F20     		movs	r0, #63
 1546 004c FFF7FEFF 		bl	OLED_WriteCommand
 354:./Hardware/Src/OLED.c **** 	
 355:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xD3);	//设置显示偏移
 1547              		.loc 1 355 2
 1548 0050 D320     		movs	r0, #211
 1549 0052 FFF7FEFF 		bl	OLED_WriteCommand
 356:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0x00);
 1550              		.loc 1 356 2
 1551 0056 0020     		movs	r0, #0
 1552 0058 FFF7FEFF 		bl	OLED_WriteCommand
 357:./Hardware/Src/OLED.c **** 	
 358:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0x40);	//设置显示开始行
 1553              		.loc 1 358 2
 1554 005c 4020     		movs	r0, #64
 1555 005e FFF7FEFF 		bl	OLED_WriteCommand
 359:./Hardware/Src/OLED.c **** 	
 360:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xA1);	//设置左右方向，0xA1正常 0xA0左右反置
 1556              		.loc 1 360 2
 1557 0062 A120     		movs	r0, #161
 1558 0064 FFF7FEFF 		bl	OLED_WriteCommand
 361:./Hardware/Src/OLED.c **** 	
 362:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xC8);	//设置上下方向，0xC8正常 0xC0上下反置
 1559              		.loc 1 362 2
 1560 0068 C820     		movs	r0, #200
 1561 006a FFF7FEFF 		bl	OLED_WriteCommand
 363:./Hardware/Src/OLED.c **** 
 364:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xDA);	//设置COM引脚硬件配置
 1562              		.loc 1 364 2
 1563 006e DA20     		movs	r0, #218
 1564 0070 FFF7FEFF 		bl	OLED_WriteCommand
 365:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0x12);
 1565              		.loc 1 365 2
 1566 0074 1220     		movs	r0, #18
 1567 0076 FFF7FEFF 		bl	OLED_WriteCommand
 366:./Hardware/Src/OLED.c **** 	
 367:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0x81);	//设置对比度控制
 1568              		.loc 1 367 2
 1569 007a 8120     		movs	r0, #129
 1570 007c FFF7FEFF 		bl	OLED_WriteCommand
 368:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xCF);
 1571              		.loc 1 368 2
 1572 0080 CF20     		movs	r0, #207
 1573 0082 FFF7FEFF 		bl	OLED_WriteCommand
 369:./Hardware/Src/OLED.c **** 
 370:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xD9);	//设置预充电周期
 1574              		.loc 1 370 2
 1575 0086 D920     		movs	r0, #217
 1576 0088 FFF7FEFF 		bl	OLED_WriteCommand
ARM GAS  /tmp/ccR9eYAD.s 			page 40


 371:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xF1);
 1577              		.loc 1 371 2
 1578 008c F120     		movs	r0, #241
 1579 008e FFF7FEFF 		bl	OLED_WriteCommand
 372:./Hardware/Src/OLED.c **** 
 373:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xDB);	//设置VCOMH取消选择级别
 1580              		.loc 1 373 2
 1581 0092 DB20     		movs	r0, #219
 1582 0094 FFF7FEFF 		bl	OLED_WriteCommand
 374:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0x30);
 1583              		.loc 1 374 2
 1584 0098 3020     		movs	r0, #48
 1585 009a FFF7FEFF 		bl	OLED_WriteCommand
 375:./Hardware/Src/OLED.c **** 
 376:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xA4);	//设置整个显示打开/关闭
 1586              		.loc 1 376 2
 1587 009e A420     		movs	r0, #164
 1588 00a0 FFF7FEFF 		bl	OLED_WriteCommand
 377:./Hardware/Src/OLED.c **** 
 378:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xA6);	//设置正常/倒转显示
 1589              		.loc 1 378 2
 1590 00a4 A620     		movs	r0, #166
 1591 00a6 FFF7FEFF 		bl	OLED_WriteCommand
 379:./Hardware/Src/OLED.c **** 
 380:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0x8D);	//设置充电泵
 1592              		.loc 1 380 2
 1593 00aa 8D20     		movs	r0, #141
 1594 00ac FFF7FEFF 		bl	OLED_WriteCommand
 381:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0x14);
 1595              		.loc 1 381 2
 1596 00b0 1420     		movs	r0, #20
 1597 00b2 FFF7FEFF 		bl	OLED_WriteCommand
 382:./Hardware/Src/OLED.c **** 
 383:./Hardware/Src/OLED.c **** 	OLED_WriteCommand(0xAF);	//开启显示
 1598              		.loc 1 383 2
 1599 00b6 AF20     		movs	r0, #175
 1600 00b8 FFF7FEFF 		bl	OLED_WriteCommand
 384:./Hardware/Src/OLED.c **** 		
 385:./Hardware/Src/OLED.c **** 	OLED_Clear();				//OLED清屏
 1601              		.loc 1 385 2
 1602 00bc FFF7FEFF 		bl	OLED_Clear
 386:./Hardware/Src/OLED.c **** }
 1603              		.loc 1 386 1
 1604 00c0 00BF     		nop
 1605 00c2 0837     		adds	r7, r7, #8
 1606              		.cfi_def_cfa_offset 8
 1607 00c4 BD46     		mov	sp, r7
 1608              		.cfi_def_cfa_register 13
 1609              		@ sp needed
 1610 00c6 80BD     		pop	{r7, pc}
 1611              		.cfi_endproc
 1612              	.LFE140:
 1614              		.text
 1615              	.Letext0:
 1616              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 1617              		.file 3 "./Start/stm32f4xx.h"
 1618              		.file 4 "./Lib/inc/stm32f4xx_gpio.h"
ARM GAS  /tmp/ccR9eYAD.s 			page 41


 1619              		.file 5 "./Hardware/Inc/OLED_Font.h"
ARM GAS  /tmp/ccR9eYAD.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 OLED.c
     /tmp/ccR9eYAD.s:25     .rodata.OLED_F8x16:0000000000000000 OLED_F8x16
     /tmp/ccR9eYAD.s:22     .rodata.OLED_F8x16:0000000000000000 $d
     /tmp/ccR9eYAD.s:171    .text.My_Write_SDA:0000000000000000 $t
     /tmp/ccR9eYAD.s:177    .text.My_Write_SDA:0000000000000000 My_Write_SDA
     /tmp/ccR9eYAD.s:225    .text.My_Write_SDA:000000000000002c $d
     /tmp/ccR9eYAD.s:230    .text.My_Write_SCL:0000000000000000 $t
     /tmp/ccR9eYAD.s:236    .text.My_Write_SCL:0000000000000000 My_Write_SCL
     /tmp/ccR9eYAD.s:284    .text.My_Write_SCL:0000000000000030 $d
     /tmp/ccR9eYAD.s:289    .text.OLED_I2C_Init:0000000000000000 $t
     /tmp/ccR9eYAD.s:295    .text.OLED_I2C_Init:0000000000000000 OLED_I2C_Init
     /tmp/ccR9eYAD.s:390    .text.OLED_I2C_Init:0000000000000084 $d
     /tmp/ccR9eYAD.s:396    .text.OLED_I2C_Start:0000000000000000 $t
     /tmp/ccR9eYAD.s:402    .text.OLED_I2C_Start:0000000000000000 OLED_I2C_Start
     /tmp/ccR9eYAD.s:440    .text.OLED_I2C_Start:0000000000000034 $d
     /tmp/ccR9eYAD.s:445    .text.OLED_I2C_Stop:0000000000000000 $t
     /tmp/ccR9eYAD.s:451    .text.OLED_I2C_Stop:0000000000000000 OLED_I2C_Stop
     /tmp/ccR9eYAD.s:484    .text.OLED_I2C_Stop:0000000000000028 $d
     /tmp/ccR9eYAD.s:489    .text.OLED_I2C_SendByte:0000000000000000 $t
     /tmp/ccR9eYAD.s:495    .text.OLED_I2C_SendByte:0000000000000000 OLED_I2C_SendByte
     /tmp/ccR9eYAD.s:570    .text.OLED_I2C_SendByte:0000000000000074 $d
     /tmp/ccR9eYAD.s:575    .text.OLED_WriteCommand:0000000000000000 $t
     /tmp/ccR9eYAD.s:581    .text.OLED_WriteCommand:0000000000000000 OLED_WriteCommand
     /tmp/ccR9eYAD.s:623    .text.OLED_WriteData:0000000000000000 $t
     /tmp/ccR9eYAD.s:629    .text.OLED_WriteData:0000000000000000 OLED_WriteData
     /tmp/ccR9eYAD.s:671    .text.OLED_SetCursor:0000000000000000 $t
     /tmp/ccR9eYAD.s:677    .text.OLED_SetCursor:0000000000000000 OLED_SetCursor
     /tmp/ccR9eYAD.s:729    .text.OLED_Clear:0000000000000000 $t
     /tmp/ccR9eYAD.s:735    .text.OLED_Clear:0000000000000000 OLED_Clear
     /tmp/ccR9eYAD.s:800    .text.OLED_ShowChar:0000000000000000 $t
     /tmp/ccR9eYAD.s:806    .text.OLED_ShowChar:0000000000000000 OLED_ShowChar
     /tmp/ccR9eYAD.s:927    .text.OLED_ShowChar:00000000000000b0 $d
     /tmp/ccR9eYAD.s:932    .text.OLED_ShowString:0000000000000000 $t
     /tmp/ccR9eYAD.s:938    .text.OLED_ShowString:0000000000000000 OLED_ShowString
     /tmp/ccR9eYAD.s:1003   .text.OLED_Pow:0000000000000000 $t
     /tmp/ccR9eYAD.s:1009   .text.OLED_Pow:0000000000000000 OLED_Pow
     /tmp/ccR9eYAD.s:1061   .text.OLED_ShowNum:0000000000000000 $t
     /tmp/ccR9eYAD.s:1067   .text.OLED_ShowNum:0000000000000000 OLED_ShowNum
     /tmp/ccR9eYAD.s:1154   .text.OLED_ShowNum:0000000000000078 $d
     /tmp/ccR9eYAD.s:1159   .text.OLED_ShowSignedNum:0000000000000000 $t
     /tmp/ccR9eYAD.s:1165   .text.OLED_ShowSignedNum:0000000000000000 OLED_ShowSignedNum
     /tmp/ccR9eYAD.s:1282   .text.OLED_ShowSignedNum:00000000000000a4 $d
     /tmp/ccR9eYAD.s:1287   .text.OLED_ShowHexNum:0000000000000000 $t
     /tmp/ccR9eYAD.s:1293   .text.OLED_ShowHexNum:0000000000000000 OLED_ShowHexNum
     /tmp/ccR9eYAD.s:1392   .text.OLED_ShowBinNum:0000000000000000 $t
     /tmp/ccR9eYAD.s:1398   .text.OLED_ShowBinNum:0000000000000000 OLED_ShowBinNum
     /tmp/ccR9eYAD.s:1480   .text.OLED_Init:0000000000000000 $t
     /tmp/ccR9eYAD.s:1486   .text.OLED_Init:0000000000000000 OLED_Init

UNDEFINED SYMBOLS
GPIO_WriteBit
