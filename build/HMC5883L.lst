ARM GAS  /tmp/ccEdbMJQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"HMC5883L.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Hardware/Src/HMC5883L.c"
  20              		.global	HMC5883L_data
  21              		.section	.bss.HMC5883L_data,"aw",%nobits
  22              		.align	2
  25              	HMC5883L_data:
  26 0000 00000000 		.space	6
  26      0000
  27              		.section	.text.HMC5883L_Init,"ax",%progbits
  28              		.align	1
  29              		.global	HMC5883L_Init
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  34              	HMC5883L_Init:
  35              	.LFB123:
   1:./Hardware/Src/HMC5883L.c **** #include "MPU6050.h"
   2:./Hardware/Src/HMC5883L.c **** #include "i2c_soft.h"
   3:./Hardware/Src/HMC5883L.c **** #include "stm32f4xx.h"                  // Device header
   4:./Hardware/Src/HMC5883L.c **** #include "HMC5883L.h"
   5:./Hardware/Src/HMC5883L.c **** #include "i2c.h"
   6:./Hardware/Src/HMC5883L.c **** #include "OLED.h"
   7:./Hardware/Src/HMC5883L.c **** #include "Matrix.h"
   8:./Hardware/Src/HMC5883L.c **** #include <math.h>
   9:./Hardware/Src/HMC5883L.c **** #include <stdint.h>
  10:./Hardware/Src/HMC5883L.c **** #include <reent.h>
  11:./Hardware/Src/HMC5883L.c **** int16_t HMC5883L_data[3] = {0};
  12:./Hardware/Src/HMC5883L.c **** void HMC5883L_SendData(u8 writeAddr,u8 pBuffer);
  13:./Hardware/Src/HMC5883L.c **** u8 HMC5883L_Status(void);
  14:./Hardware/Src/HMC5883L.c **** void HMC5883L_Init(void)
  15:./Hardware/Src/HMC5883L.c **** {
  36              		.loc 1 15 1
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccEdbMJQ.s 			page 2


  45              		.cfi_def_cfa_register 7
  16:./Hardware/Src/HMC5883L.c **** /*
  17:./Hardware/Src/HMC5883L.c **** 
  18:./Hardware/Src/HMC5883L.c **** 	I2C_SEND_BYTE(0xD0,0x6A,0x00);
  19:./Hardware/Src/HMC5883L.c **** 	I2C_SEND_BYTE(0xD0,0x37,0x02);
  20:./Hardware/Src/HMC5883L.c **** 	I2C_SEND_BYTE(0x3C,0x00,0x30);
  21:./Hardware/Src/HMC5883L.c **** 	I2C_SEND_BYTE(0x3C,0x01,0x00);
  22:./Hardware/Src/HMC5883L.c **** 	I2C_SEND_BYTE(0x3C,0x02,0x00);
  23:./Hardware/Src/HMC5883L.c **** */
  24:./Hardware/Src/HMC5883L.c ****    MPU6050_SendByte(0x6A, 0x00);
  46              		.loc 1 24 4
  47 0004 0021     		movs	r1, #0
  48 0006 6A20     		movs	r0, #106
  49 0008 FFF7FEFF 		bl	MPU6050_SendByte
  25:./Hardware/Src/HMC5883L.c ****    MPU6050_SendByte(0x37,0x02);
  50              		.loc 1 25 4
  51 000c 0221     		movs	r1, #2
  52 000e 3720     		movs	r0, #55
  53 0010 FFF7FEFF 		bl	MPU6050_SendByte
  26:./Hardware/Src/HMC5883L.c **** //    HMC5883L_SendData(0x00, 0x30);
  27:./Hardware/Src/HMC5883L.c **** //    HMC5883L_SendData(0x01, 0x00);
  28:./Hardware/Src/HMC5883L.c **** //    HMC5883L_SendData(0x02, 0x00);
  29:./Hardware/Src/HMC5883L.c ****    HMC5883L_SendData(0x00, 0x3c);
  54              		.loc 1 29 4
  55 0014 3C21     		movs	r1, #60
  56 0016 0020     		movs	r0, #0
  57 0018 FFF7FEFF 		bl	HMC5883L_SendData
  30:./Hardware/Src/HMC5883L.c ****    HMC5883L_SendData(0x01, 0x02);
  58              		.loc 1 30 4
  59 001c 0221     		movs	r1, #2
  60 001e 0120     		movs	r0, #1
  61 0020 FFF7FEFF 		bl	HMC5883L_SendData
  31:./Hardware/Src/HMC5883L.c ****    HMC5883L_SendData(0x02, 0x00);
  62              		.loc 1 31 4
  63 0024 0021     		movs	r1, #0
  64 0026 0220     		movs	r0, #2
  65 0028 FFF7FEFF 		bl	HMC5883L_SendData
  32:./Hardware/Src/HMC5883L.c **** }
  66              		.loc 1 32 1
  67 002c 00BF     		nop
  68 002e 80BD     		pop	{r7, pc}
  69              		.cfi_endproc
  70              	.LFE123:
  72              		.section	.text.HMC5883L_Read,"ax",%progbits
  73              		.align	1
  74              		.global	HMC5883L_Read
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  79              	HMC5883L_Read:
  80              	.LFB124:
  33:./Hardware/Src/HMC5883L.c **** 
  34:./Hardware/Src/HMC5883L.c **** 
  35:./Hardware/Src/HMC5883L.c **** void HMC5883L_Read(uint16_t *data)
  36:./Hardware/Src/HMC5883L.c **** {
  81              		.loc 1 36 1
  82              		.cfi_startproc
ARM GAS  /tmp/ccEdbMJQ.s 			page 3


  83              		@ args = 0, pretend = 0, frame = 16
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85 0000 90B5     		push	{r4, r7, lr}
  86              		.cfi_def_cfa_offset 12
  87              		.cfi_offset 4, -12
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 0002 85B0     		sub	sp, sp, #20
  91              		.cfi_def_cfa_offset 32
  92 0004 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
  94 0006 7860     		str	r0, [r7, #4]
  37:./Hardware/Src/HMC5883L.c **** 	uint8_t i;
  38:./Hardware/Src/HMC5883L.c ****     uint8_t t[6]; 
  39:./Hardware/Src/HMC5883L.c **** 	uint8_t addr=0x03;
  95              		.loc 1 39 10
  96 0008 0323     		movs	r3, #3
  97 000a BB73     		strb	r3, [r7, #14]
  40:./Hardware/Src/HMC5883L.c **** //	I2C_READ_BUFFER(0x3C,0x03,t,6); 
  41:./Hardware/Src/HMC5883L.c **** //		for(i=0; i<3; i++) 	
  42:./Hardware/Src/HMC5883L.c **** //		data[i]=((t[2*i] << 8)+t[2*i+1]);
  43:./Hardware/Src/HMC5883L.c **** 	
  44:./Hardware/Src/HMC5883L.c **** //	t[0]=I2C_READ_BYTE(0x3C,0x03);
  45:./Hardware/Src/HMC5883L.c **** //	t[1]=I2C_READ_BYTE(0x3C,0x04);
  46:./Hardware/Src/HMC5883L.c **** //	data[0]=(t[0]<<8)+t[1];
  47:./Hardware/Src/HMC5883L.c **** //	t[2]=I2C_READ_BYTE(0x3C,0x05);
  48:./Hardware/Src/HMC5883L.c **** //	t[3]=I2C_READ_BYTE(0x3C,0x06);
  49:./Hardware/Src/HMC5883L.c **** //	data[1]=(t[2]<<8)+t[3];
  50:./Hardware/Src/HMC5883L.c **** //	t[4]=I2C_READ_BYTE(0x3C,0x07);
  51:./Hardware/Src/HMC5883L.c **** //	t[5]=I2C_READ_BYTE(0x3C,0x08);
  52:./Hardware/Src/HMC5883L.c **** //	data[2]=(t[4]<<8)+t[5];
  53:./Hardware/Src/HMC5883L.c **** 	
  54:./Hardware/Src/HMC5883L.c **** 	while(!(I2C_READ_BYTE(0x3C,0x09)&0x01));
  98              		.loc 1 54 7
  99 000c 00BF     		nop
 100              	.L3:
 101              		.loc 1 54 10 discriminator 1
 102 000e 0921     		movs	r1, #9
 103 0010 3C20     		movs	r0, #60
 104 0012 FFF7FEFF 		bl	I2C_READ_BYTE
 105 0016 0346     		mov	r3, r0
 106              		.loc 1 54 34 discriminator 1
 107 0018 03F00103 		and	r3, r3, #1
 108              		.loc 1 54 8 discriminator 1
 109 001c 002B     		cmp	r3, #0
 110 001e F6D0     		beq	.L3
  55:./Hardware/Src/HMC5883L.c **** 	for(i=0; i<3; i++) 	
 111              		.loc 1 55 7
 112 0020 0023     		movs	r3, #0
 113 0022 FB73     		strb	r3, [r7, #15]
 114              		.loc 1 55 2
 115 0024 3BE0     		b	.L4
 116              	.L5:
  56:./Hardware/Src/HMC5883L.c **** 	{
  57:./Hardware/Src/HMC5883L.c **** 		t[2*i]=I2C_READ_BYTE(0x3C,addr);
 117              		.loc 1 57 6 discriminator 3
 118 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  /tmp/ccEdbMJQ.s 			page 4


 119 0028 5C00     		lsls	r4, r3, #1
 120              		.loc 1 57 10 discriminator 3
 121 002a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 122 002c 1946     		mov	r1, r3
 123 002e 3C20     		movs	r0, #60
 124 0030 FFF7FEFF 		bl	I2C_READ_BYTE
 125 0034 0346     		mov	r3, r0
 126 0036 1A46     		mov	r2, r3
 127              		.loc 1 57 9 discriminator 3
 128 0038 04F11003 		add	r3, r4, #16
 129 003c 3B44     		add	r3, r3, r7
 130 003e 03F8082C 		strb	r2, [r3, #-8]
  58:./Hardware/Src/HMC5883L.c **** 		t[2*i+1]=I2C_READ_BYTE(0x3C,addr+1);
 131              		.loc 1 58 12 discriminator 3
 132 0042 BB7B     		ldrb	r3, [r7, #14]
 133 0044 0133     		adds	r3, r3, #1
 134 0046 DAB2     		uxtb	r2, r3
 135              		.loc 1 58 6 discriminator 3
 136 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 137 004a 5B00     		lsls	r3, r3, #1
 138              		.loc 1 58 8 discriminator 3
 139 004c 5C1C     		adds	r4, r3, #1
 140              		.loc 1 58 12 discriminator 3
 141 004e 1146     		mov	r1, r2
 142 0050 3C20     		movs	r0, #60
 143 0052 FFF7FEFF 		bl	I2C_READ_BYTE
 144 0056 0346     		mov	r3, r0
 145 0058 1A46     		mov	r2, r3
 146              		.loc 1 58 11 discriminator 3
 147 005a 04F11003 		add	r3, r4, #16
 148 005e 3B44     		add	r3, r3, r7
 149 0060 03F8082C 		strb	r2, [r3, #-8]
  59:./Hardware/Src/HMC5883L.c **** 		data[i]=((t[2*i] << 8)+t[2*i+1]);
 150              		.loc 1 59 16 discriminator 3
 151 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 152 0066 5B00     		lsls	r3, r3, #1
 153              		.loc 1 59 14 discriminator 3
 154 0068 1033     		adds	r3, r3, #16
 155 006a 3B44     		add	r3, r3, r7
 156 006c 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 157              		.loc 1 59 20 discriminator 3
 158 0070 1B02     		lsls	r3, r3, #8
 159 0072 9AB2     		uxth	r2, r3
 160              		.loc 1 59 29 discriminator 3
 161 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 162 0076 5B00     		lsls	r3, r3, #1
 163              		.loc 1 59 31 discriminator 3
 164 0078 0133     		adds	r3, r3, #1
 165              		.loc 1 59 27 discriminator 3
 166 007a 1033     		adds	r3, r3, #16
 167 007c 3B44     		add	r3, r3, r7
 168 007e 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 169 0082 1846     		mov	r0, r3
 170              		.loc 1 59 7 discriminator 3
 171 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 172 0086 5B00     		lsls	r3, r3, #1
 173 0088 7968     		ldr	r1, [r7, #4]
ARM GAS  /tmp/ccEdbMJQ.s 			page 5


 174 008a 0B44     		add	r3, r3, r1
 175              		.loc 1 59 25 discriminator 3
 176 008c 0244     		add	r2, r2, r0
 177 008e 92B2     		uxth	r2, r2
 178              		.loc 1 59 10 discriminator 3
 179 0090 1A80     		strh	r2, [r3]	@ movhi
  60:./Hardware/Src/HMC5883L.c **** 		addr+=2;
 180              		.loc 1 60 7 discriminator 3
 181 0092 BB7B     		ldrb	r3, [r7, #14]
 182 0094 0233     		adds	r3, r3, #2
 183 0096 BB73     		strb	r3, [r7, #14]
  55:./Hardware/Src/HMC5883L.c **** 	{
 184              		.loc 1 55 17 discriminator 3
 185 0098 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 186 009a 0133     		adds	r3, r3, #1
 187 009c FB73     		strb	r3, [r7, #15]
 188              	.L4:
  55:./Hardware/Src/HMC5883L.c **** 	{
 189              		.loc 1 55 12 discriminator 1
 190 009e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 191 00a0 022B     		cmp	r3, #2
 192 00a2 C0D9     		bls	.L5
  61:./Hardware/Src/HMC5883L.c **** 	}	
  62:./Hardware/Src/HMC5883L.c **** }
 193              		.loc 1 62 1
 194 00a4 00BF     		nop
 195 00a6 00BF     		nop
 196 00a8 1437     		adds	r7, r7, #20
 197              		.cfi_def_cfa_offset 12
 198 00aa BD46     		mov	sp, r7
 199              		.cfi_def_cfa_register 13
 200              		@ sp needed
 201 00ac 90BD     		pop	{r4, r7, pc}
 202              		.cfi_endproc
 203              	.LFE124:
 205              		.section	.text.HMC5883L_SendData,"ax",%progbits
 206              		.align	1
 207              		.global	HMC5883L_SendData
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	HMC5883L_SendData:
 213              	.LFB125:
  63:./Hardware/Src/HMC5883L.c **** 
  64:./Hardware/Src/HMC5883L.c **** void HMC5883L_SendData(u8 writeAddr,u8 pBuffer){
 214              		.loc 1 64 48
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 8
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218 0000 80B5     		push	{r7, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 82B0     		sub	sp, sp, #8
 223              		.cfi_def_cfa_offset 16
 224 0004 00AF     		add	r7, sp, #0
 225              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccEdbMJQ.s 			page 6


 226 0006 0346     		mov	r3, r0
 227 0008 0A46     		mov	r2, r1
 228 000a FB71     		strb	r3, [r7, #7]
 229 000c 1346     		mov	r3, r2
 230 000e BB71     		strb	r3, [r7, #6]
  65:./Hardware/Src/HMC5883L.c **** 	I2CStart();
 231              		.loc 1 65 2
 232 0010 FFF7FEFF 		bl	I2CStart
  66:./Hardware/Src/HMC5883L.c **** 	I2CSendByte(HMC5883L_ADD);
 233              		.loc 1 66 2
 234 0014 3C20     		movs	r0, #60
 235 0016 FFF7FEFF 		bl	I2CSendByte
  67:./Hardware/Src/HMC5883L.c **** 	while(!I2CWaitAck());
 236              		.loc 1 67 7
 237 001a 00BF     		nop
 238              	.L7:
 239              		.loc 1 67 9 discriminator 1
 240 001c FFF7FEFF 		bl	I2CWaitAck
 241 0020 0346     		mov	r3, r0
 242              		.loc 1 67 8 discriminator 1
 243 0022 002B     		cmp	r3, #0
 244 0024 FAD0     		beq	.L7
  68:./Hardware/Src/HMC5883L.c **** 	I2CSendByte(writeAddr);
 245              		.loc 1 68 2
 246 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 247 0028 1846     		mov	r0, r3
 248 002a FFF7FEFF 		bl	I2CSendByte
  69:./Hardware/Src/HMC5883L.c **** 	while(!I2CWaitAck());
 249              		.loc 1 69 7
 250 002e 00BF     		nop
 251              	.L8:
 252              		.loc 1 69 9 discriminator 1
 253 0030 FFF7FEFF 		bl	I2CWaitAck
 254 0034 0346     		mov	r3, r0
 255              		.loc 1 69 8 discriminator 1
 256 0036 002B     		cmp	r3, #0
 257 0038 FAD0     		beq	.L8
  70:./Hardware/Src/HMC5883L.c **** 	I2CSendByte(pBuffer);
 258              		.loc 1 70 2
 259 003a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 260 003c 1846     		mov	r0, r3
 261 003e FFF7FEFF 		bl	I2CSendByte
  71:./Hardware/Src/HMC5883L.c **** 	while(!I2CWaitAck());
 262              		.loc 1 71 7
 263 0042 00BF     		nop
 264              	.L9:
 265              		.loc 1 71 9 discriminator 1
 266 0044 FFF7FEFF 		bl	I2CWaitAck
 267 0048 0346     		mov	r3, r0
 268              		.loc 1 71 8 discriminator 1
 269 004a 002B     		cmp	r3, #0
 270 004c FAD0     		beq	.L9
  72:./Hardware/Src/HMC5883L.c **** 	I2CStop();	
 271              		.loc 1 72 2
 272 004e FFF7FEFF 		bl	I2CStop
  73:./Hardware/Src/HMC5883L.c **** }
 273              		.loc 1 73 1
ARM GAS  /tmp/ccEdbMJQ.s 			page 7


 274 0052 00BF     		nop
 275 0054 0837     		adds	r7, r7, #8
 276              		.cfi_def_cfa_offset 8
 277 0056 BD46     		mov	sp, r7
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 0058 80BD     		pop	{r7, pc}
 281              		.cfi_endproc
 282              	.LFE125:
 284              		.section	.text.HMC588CL_ReadData,"ax",%progbits
 285              		.align	1
 286              		.global	HMC588CL_ReadData
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 291              	HMC588CL_ReadData:
 292              	.LFB126:
  74:./Hardware/Src/HMC5883L.c **** void HMC588CL_ReadData(int16_t *data){
 293              		.loc 1 74 38
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 32
 296              		@ frame_needed = 1, uses_anonymous_args = 0
 297 0000 80B5     		push	{r7, lr}
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 7, -8
 300              		.cfi_offset 14, -4
 301 0002 88B0     		sub	sp, sp, #32
 302              		.cfi_def_cfa_offset 40
 303 0004 00AF     		add	r7, sp, #0
 304              		.cfi_def_cfa_register 7
 305 0006 7860     		str	r0, [r7, #4]
  75:./Hardware/Src/HMC5883L.c **** 	int i =6;
 306              		.loc 1 75 6
 307 0008 0623     		movs	r3, #6
 308 000a FB61     		str	r3, [r7, #28]
  76:./Hardware/Src/HMC5883L.c ****     u8 t[6]; 	
  77:./Hardware/Src/HMC5883L.c **** 	u8* pBuffer = t;
 309              		.loc 1 77 6
 310 000c 07F10C03 		add	r3, r7, #12
 311 0010 BB61     		str	r3, [r7, #24]
  78:./Hardware/Src/HMC5883L.c **** 	while(!(HMC5883L_Status()&0x01));
 312              		.loc 1 78 7
 313 0012 00BF     		nop
 314              	.L11:
 315              		.loc 1 78 10 discriminator 1
 316 0014 FFF7FEFF 		bl	HMC5883L_Status
 317 0018 0346     		mov	r3, r0
 318              		.loc 1 78 27 discriminator 1
 319 001a 03F00103 		and	r3, r3, #1
 320              		.loc 1 78 8 discriminator 1
 321 001e 002B     		cmp	r3, #0
 322 0020 F8D0     		beq	.L11
  79:./Hardware/Src/HMC5883L.c **** 	I2CStart();
 323              		.loc 1 79 2
 324 0022 FFF7FEFF 		bl	I2CStart
  80:./Hardware/Src/HMC5883L.c **** 	I2CSendByte(HMC5883L_ADD);	
 325              		.loc 1 80 2
ARM GAS  /tmp/ccEdbMJQ.s 			page 8


 326 0026 3C20     		movs	r0, #60
 327 0028 FFF7FEFF 		bl	I2CSendByte
  81:./Hardware/Src/HMC5883L.c **** 	 while(!I2CWaitAck());
 328              		.loc 1 81 8
 329 002c 00BF     		nop
 330              	.L12:
 331              		.loc 1 81 10 discriminator 1
 332 002e FFF7FEFF 		bl	I2CWaitAck
 333 0032 0346     		mov	r3, r0
 334              		.loc 1 81 9 discriminator 1
 335 0034 002B     		cmp	r3, #0
 336 0036 FAD0     		beq	.L12
  82:./Hardware/Src/HMC5883L.c **** 	I2CSendByte(0x03);
 337              		.loc 1 82 2
 338 0038 0320     		movs	r0, #3
 339 003a FFF7FEFF 		bl	I2CSendByte
  83:./Hardware/Src/HMC5883L.c **** 	 while(!I2CWaitAck());
 340              		.loc 1 83 8
 341 003e 00BF     		nop
 342              	.L13:
 343              		.loc 1 83 10 discriminator 1
 344 0040 FFF7FEFF 		bl	I2CWaitAck
 345 0044 0346     		mov	r3, r0
 346              		.loc 1 83 9 discriminator 1
 347 0046 002B     		cmp	r3, #0
 348 0048 FAD0     		beq	.L13
  84:./Hardware/Src/HMC5883L.c **** 	I2CStart();
 349              		.loc 1 84 2
 350 004a FFF7FEFF 		bl	I2CStart
  85:./Hardware/Src/HMC5883L.c **** 	I2CSendByte(HMC5883L_ADD|0x01);
 351              		.loc 1 85 2
 352 004e 3D20     		movs	r0, #61
 353 0050 FFF7FEFF 		bl	I2CSendByte
  86:./Hardware/Src/HMC5883L.c **** 	 while(!I2CWaitAck());
 354              		.loc 1 86 8
 355 0054 00BF     		nop
 356              	.L14:
 357              		.loc 1 86 10 discriminator 1
 358 0056 FFF7FEFF 		bl	I2CWaitAck
 359 005a 0346     		mov	r3, r0
 360              		.loc 1 86 9 discriminator 1
 361 005c 002B     		cmp	r3, #0
 362 005e FAD0     		beq	.L14
  87:./Hardware/Src/HMC5883L.c **** 	 while(i--){
 363              		.loc 1 87 8
 364 0060 18E0     		b	.L15
 365              	.L18:
  88:./Hardware/Src/HMC5883L.c **** 		if(i==1){
 366              		.loc 1 88 5
 367 0062 FB69     		ldr	r3, [r7, #28]
 368 0064 012B     		cmp	r3, #1
 369 0066 0AD1     		bne	.L16
  89:./Hardware/Src/HMC5883L.c **** 			*pBuffer = I2CReceiveByte();
 370              		.loc 1 89 15
 371 0068 FFF7FEFF 		bl	I2CReceiveByte
 372 006c 0346     		mov	r3, r0
 373 006e 1A46     		mov	r2, r3
ARM GAS  /tmp/ccEdbMJQ.s 			page 9


 374              		.loc 1 89 13
 375 0070 BB69     		ldr	r3, [r7, #24]
 376 0072 1A70     		strb	r2, [r3]
  90:./Hardware/Src/HMC5883L.c **** 			I2CSendNotAck();
 377              		.loc 1 90 4
 378 0074 FFF7FEFF 		bl	I2CSendNotAck
  91:./Hardware/Src/HMC5883L.c **** 			I2CStop();
 379              		.loc 1 91 4
 380 0078 FFF7FEFF 		bl	I2CStop
  92:./Hardware/Src/HMC5883L.c **** 			break;
 381              		.loc 1 92 4
 382 007c 0FE0     		b	.L17
 383              	.L16:
  93:./Hardware/Src/HMC5883L.c **** 		}else{
  94:./Hardware/Src/HMC5883L.c **** 		*pBuffer = I2CReceiveByte();
 384              		.loc 1 94 14
 385 007e FFF7FEFF 		bl	I2CReceiveByte
 386 0082 0346     		mov	r3, r0
 387 0084 1A46     		mov	r2, r3
 388              		.loc 1 94 12
 389 0086 BB69     		ldr	r3, [r7, #24]
 390 0088 1A70     		strb	r2, [r3]
  95:./Hardware/Src/HMC5883L.c **** 		I2CSendAck();
 391              		.loc 1 95 3
 392 008a FFF7FEFF 		bl	I2CSendAck
  96:./Hardware/Src/HMC5883L.c **** 		pBuffer++;
 393              		.loc 1 96 10
 394 008e BB69     		ldr	r3, [r7, #24]
 395 0090 0133     		adds	r3, r3, #1
 396 0092 BB61     		str	r3, [r7, #24]
 397              	.L15:
  87:./Hardware/Src/HMC5883L.c **** 		if(i==1){
 398              		.loc 1 87 10
 399 0094 FB69     		ldr	r3, [r7, #28]
 400 0096 5A1E     		subs	r2, r3, #1
 401 0098 FA61     		str	r2, [r7, #28]
  87:./Hardware/Src/HMC5883L.c **** 		if(i==1){
 402              		.loc 1 87 9
 403 009a 002B     		cmp	r3, #0
 404 009c E1D1     		bne	.L18
 405              	.L17:
 406              	.LBB2:
  97:./Hardware/Src/HMC5883L.c **** 		// i--;
  98:./Hardware/Src/HMC5883L.c **** 		}		
  99:./Hardware/Src/HMC5883L.c **** 	 }	
 100:./Hardware/Src/HMC5883L.c **** 	 for(int j=0;j<3;j++){
 407              		.loc 1 100 11
 408 009e 0023     		movs	r3, #0
 409 00a0 7B61     		str	r3, [r7, #20]
 410              		.loc 1 100 3
 411 00a2 19E0     		b	.L19
 412              	.L20:
 101:./Hardware/Src/HMC5883L.c **** 		data[j] = (t[2*j]<<8) + t[2*j+1];
 413              		.loc 1 101 17 discriminator 3
 414 00a4 7B69     		ldr	r3, [r7, #20]
 415 00a6 5B00     		lsls	r3, r3, #1
 416              		.loc 1 101 15 discriminator 3
ARM GAS  /tmp/ccEdbMJQ.s 			page 10


 417 00a8 2033     		adds	r3, r3, #32
 418 00aa 3B44     		add	r3, r3, r7
 419 00ac 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 420              		.loc 1 101 20 discriminator 3
 421 00b0 1B02     		lsls	r3, r3, #8
 422 00b2 9BB2     		uxth	r3, r3
 423              		.loc 1 101 30 discriminator 3
 424 00b4 7A69     		ldr	r2, [r7, #20]
 425 00b6 5200     		lsls	r2, r2, #1
 426              		.loc 1 101 32 discriminator 3
 427 00b8 0132     		adds	r2, r2, #1
 428              		.loc 1 101 28 discriminator 3
 429 00ba 2032     		adds	r2, r2, #32
 430 00bc 3A44     		add	r2, r2, r7
 431 00be 12F8142C 		ldrb	r2, [r2, #-20]	@ zero_extendqisi2
 432              		.loc 1 101 25 discriminator 3
 433 00c2 1344     		add	r3, r3, r2
 434 00c4 99B2     		uxth	r1, r3
 435              		.loc 1 101 7 discriminator 3
 436 00c6 7B69     		ldr	r3, [r7, #20]
 437 00c8 5B00     		lsls	r3, r3, #1
 438 00ca 7A68     		ldr	r2, [r7, #4]
 439 00cc 1344     		add	r3, r3, r2
 440              		.loc 1 101 25 discriminator 3
 441 00ce 0AB2     		sxth	r2, r1
 442              		.loc 1 101 11 discriminator 3
 443 00d0 1A80     		strh	r2, [r3]	@ movhi
 100:./Hardware/Src/HMC5883L.c **** 		data[j] = (t[2*j]<<8) + t[2*j+1];
 444              		.loc 1 100 20 discriminator 3
 445 00d2 7B69     		ldr	r3, [r7, #20]
 446 00d4 0133     		adds	r3, r3, #1
 447 00d6 7B61     		str	r3, [r7, #20]
 448              	.L19:
 100:./Hardware/Src/HMC5883L.c **** 		data[j] = (t[2*j]<<8) + t[2*j+1];
 449              		.loc 1 100 16 discriminator 1
 450 00d8 7B69     		ldr	r3, [r7, #20]
 451 00da 022B     		cmp	r3, #2
 452 00dc E2DD     		ble	.L20
 453              	.LBE2:
 102:./Hardware/Src/HMC5883L.c **** 	 }
 103:./Hardware/Src/HMC5883L.c **** }
 454              		.loc 1 103 1
 455 00de 00BF     		nop
 456 00e0 00BF     		nop
 457 00e2 2037     		adds	r7, r7, #32
 458              		.cfi_def_cfa_offset 8
 459 00e4 BD46     		mov	sp, r7
 460              		.cfi_def_cfa_register 13
 461              		@ sp needed
 462 00e6 80BD     		pop	{r7, pc}
 463              		.cfi_endproc
 464              	.LFE126:
 466              		.section	.text.HMC5883L_Status,"ax",%progbits
 467              		.align	1
 468              		.global	HMC5883L_Status
 469              		.syntax unified
 470              		.thumb
ARM GAS  /tmp/ccEdbMJQ.s 			page 11


 471              		.thumb_func
 473              	HMC5883L_Status:
 474              	.LFB127:
 104:./Hardware/Src/HMC5883L.c **** u8 HMC5883L_Status(void){
 475              		.loc 1 104 25
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 8
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479 0000 80B5     		push	{r7, lr}
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 7, -8
 482              		.cfi_offset 14, -4
 483 0002 82B0     		sub	sp, sp, #8
 484              		.cfi_def_cfa_offset 16
 485 0004 00AF     		add	r7, sp, #0
 486              		.cfi_def_cfa_register 7
 105:./Hardware/Src/HMC5883L.c **** 	I2CStart();
 487              		.loc 1 105 2
 488 0006 FFF7FEFF 		bl	I2CStart
 106:./Hardware/Src/HMC5883L.c **** 	I2CSendByte(HMC5883L_ADD);
 489              		.loc 1 106 2
 490 000a 3C20     		movs	r0, #60
 491 000c FFF7FEFF 		bl	I2CSendByte
 107:./Hardware/Src/HMC5883L.c **** 	while(!I2CWaitAck());
 492              		.loc 1 107 7
 493 0010 00BF     		nop
 494              	.L22:
 495              		.loc 1 107 9 discriminator 1
 496 0012 FFF7FEFF 		bl	I2CWaitAck
 497 0016 0346     		mov	r3, r0
 498              		.loc 1 107 8 discriminator 1
 499 0018 002B     		cmp	r3, #0
 500 001a FAD0     		beq	.L22
 108:./Hardware/Src/HMC5883L.c **** 	I2CSendByte(0x09);  
 501              		.loc 1 108 2
 502 001c 0920     		movs	r0, #9
 503 001e FFF7FEFF 		bl	I2CSendByte
 109:./Hardware/Src/HMC5883L.c **** 	 while(!I2CWaitAck());
 504              		.loc 1 109 8
 505 0022 00BF     		nop
 506              	.L23:
 507              		.loc 1 109 10 discriminator 1
 508 0024 FFF7FEFF 		bl	I2CWaitAck
 509 0028 0346     		mov	r3, r0
 510              		.loc 1 109 9 discriminator 1
 511 002a 002B     		cmp	r3, #0
 512 002c FAD0     		beq	.L23
 110:./Hardware/Src/HMC5883L.c **** 	I2CStart();
 513              		.loc 1 110 2
 514 002e FFF7FEFF 		bl	I2CStart
 111:./Hardware/Src/HMC5883L.c **** 	I2CSendByte(HMC5883L_ADD|0x01);
 515              		.loc 1 111 2
 516 0032 3D20     		movs	r0, #61
 517 0034 FFF7FEFF 		bl	I2CSendByte
 112:./Hardware/Src/HMC5883L.c **** 	 while(!I2CWaitAck());
 518              		.loc 1 112 8
 519 0038 00BF     		nop
ARM GAS  /tmp/ccEdbMJQ.s 			page 12


 520              	.L24:
 521              		.loc 1 112 10 discriminator 1
 522 003a FFF7FEFF 		bl	I2CWaitAck
 523 003e 0346     		mov	r3, r0
 524              		.loc 1 112 9 discriminator 1
 525 0040 002B     		cmp	r3, #0
 526 0042 FAD0     		beq	.L24
 113:./Hardware/Src/HMC5883L.c **** 	 u8 buffer = I2CReceiveByte();
 527              		.loc 1 113 15
 528 0044 FFF7FEFF 		bl	I2CReceiveByte
 529 0048 0346     		mov	r3, r0
 530 004a FB71     		strb	r3, [r7, #7]
 114:./Hardware/Src/HMC5883L.c **** 	 I2CSendNotAck();
 531              		.loc 1 114 3
 532 004c FFF7FEFF 		bl	I2CSendNotAck
 115:./Hardware/Src/HMC5883L.c **** 	 I2CStop();	 
 533              		.loc 1 115 3
 534 0050 FFF7FEFF 		bl	I2CStop
 116:./Hardware/Src/HMC5883L.c **** 	 return buffer;	
 535              		.loc 1 116 10
 536 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 117:./Hardware/Src/HMC5883L.c **** }
 537              		.loc 1 117 1
 538 0056 1846     		mov	r0, r3
 539 0058 0837     		adds	r7, r7, #8
 540              		.cfi_def_cfa_offset 8
 541 005a BD46     		mov	sp, r7
 542              		.cfi_def_cfa_register 13
 543              		@ sp needed
 544 005c 80BD     		pop	{r7, pc}
 545              		.cfi_endproc
 546              	.LFE127:
 548              		.global	Rx
 549              		.section	.bss.Rx,"aw",%nobits
 550              		.align	2
 553              	Rx:
 554 0000 00000000 		.space	4
 555              		.global	Ry
 556              		.section	.bss.Ry,"aw",%nobits
 557              		.align	2
 560              	Ry:
 561 0000 00000000 		.space	4
 562              		.global	Rz
 563              		.section	.bss.Rz,"aw",%nobits
 564              		.align	2
 567              	Rz:
 568 0000 00000000 		.space	4
 569              		.global	Ox
 570              		.section	.bss.Ox,"aw",%nobits
 571              		.align	2
 574              	Ox:
 575 0000 00000000 		.space	4
 576              		.global	Oy
 577              		.section	.bss.Oy,"aw",%nobits
 578              		.align	2
 581              	Oy:
 582 0000 00000000 		.space	4
ARM GAS  /tmp/ccEdbMJQ.s 			page 13


 583              		.global	Oz
 584              		.section	.bss.Oz,"aw",%nobits
 585              		.align	2
 588              	Oz:
 589 0000 00000000 		.space	4
 590              		.global	__aeabi_f2d
 591              		.global	__aeabi_dadd
 592              		.global	__aeabi_d2f
 593              		.section	.text.Ellipsoid_Cal,"ax",%progbits
 594              		.align	1
 595              		.global	Ellipsoid_Cal
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 600              	Ellipsoid_Cal:
 601              	.LFB128:
 118:./Hardware/Src/HMC5883L.c **** float Rx=0,Ry=0,Rz=0,Ox=0,Oy=0,Oz=0;
 119:./Hardware/Src/HMC5883L.c **** void Ellipsoid_Cal(void){
 602              		.loc 1 119 25
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 248
 605              		@ frame_needed = 1, uses_anonymous_args = 0
 606 0000 B0B5     		push	{r4, r5, r7, lr}
 607              		.cfi_def_cfa_offset 16
 608              		.cfi_offset 4, -16
 609              		.cfi_offset 5, -12
 610              		.cfi_offset 7, -8
 611              		.cfi_offset 14, -4
 612 0002 BEB0     		sub	sp, sp, #248
 613              		.cfi_def_cfa_offset 264
 614 0004 00AF     		add	r7, sp, #0
 615              		.cfi_def_cfa_register 7
 120:./Hardware/Src/HMC5883L.c **** 	HMC588CL_ReadData(HMC5883L_data);
 616              		.loc 1 120 2
 617 0006 A648     		ldr	r0, .L31
 618 0008 FFF7FEFF 		bl	HMC588CL_ReadData
 121:./Hardware/Src/HMC5883L.c **** 	float mx = HMC5883L_data[0]/1090.0f;
 619              		.loc 1 121 26
 620 000c A44B     		ldr	r3, .L31
 621 000e B3F90030 		ldrsh	r3, [r3]
 622              		.loc 1 121 29
 623 0012 07EE903A 		vmov	s15, r3	@ int
 624 0016 B8EEE77A 		vcvt.f32.s32	s14, s15
 625              		.loc 1 121 8
 626 001a DFEDA26A 		vldr.32	s13, .L31+4
 627 001e C7EE267A 		vdiv.f32	s15, s14, s13
 628 0022 C7ED3B7A 		vstr.32	s15, [r7, #236]
 122:./Hardware/Src/HMC5883L.c **** 	float my = HMC5883L_data[1]/1090.0f;
 629              		.loc 1 122 26
 630 0026 9E4B     		ldr	r3, .L31
 631 0028 B3F90230 		ldrsh	r3, [r3, #2]
 632              		.loc 1 122 29
 633 002c 07EE903A 		vmov	s15, r3	@ int
 634 0030 B8EEE77A 		vcvt.f32.s32	s14, s15
 635              		.loc 1 122 8
 636 0034 DFED9B6A 		vldr.32	s13, .L31+4
 637 0038 C7EE267A 		vdiv.f32	s15, s14, s13
ARM GAS  /tmp/ccEdbMJQ.s 			page 14


 638 003c C7ED3A7A 		vstr.32	s15, [r7, #232]
 123:./Hardware/Src/HMC5883L.c **** 	float mz = HMC5883L_data[2]/1090.0f;
 639              		.loc 1 123 26
 640 0040 974B     		ldr	r3, .L31
 641 0042 B3F90430 		ldrsh	r3, [r3, #4]
 642              		.loc 1 123 29
 643 0046 07EE903A 		vmov	s15, r3	@ int
 644 004a B8EEE77A 		vcvt.f32.s32	s14, s15
 645              		.loc 1 123 8
 646 004e DFED956A 		vldr.32	s13, .L31+4
 647 0052 C7EE267A 		vdiv.f32	s15, s14, s13
 648 0056 C7ED397A 		vstr.32	s15, [r7, #228]
 124:./Hardware/Src/HMC5883L.c **** 	float _x_2 = -mx *mx;
 649              		.loc 1 124 15
 650 005a D7ED3B7A 		vldr.32	s15, [r7, #236]
 651 005e F1EE677A 		vneg.f32	s15, s15
 652              		.loc 1 124 8
 653 0062 97ED3B7A 		vldr.32	s14, [r7, #236]
 654 0066 67EE277A 		vmul.f32	s15, s14, s15
 655 006a C7ED387A 		vstr.32	s15, [r7, #224]
 125:./Hardware/Src/HMC5883L.c **** 	float y_2 = my * my;
 656              		.loc 1 125 8
 657 006e D7ED3A7A 		vldr.32	s15, [r7, #232]
 658 0072 67EEA77A 		vmul.f32	s15, s15, s15
 659 0076 C7ED377A 		vstr.32	s15, [r7, #220]
 126:./Hardware/Src/HMC5883L.c **** 	float z_2 = mz * mz;
 660              		.loc 1 126 8
 661 007a D7ED397A 		vldr.32	s15, [r7, #228]
 662 007e 67EEA77A 		vmul.f32	s15, s15, s15
 663 0082 C7ED367A 		vstr.32	s15, [r7, #216]
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 128:./Hardware/Src/HMC5883L.c **** 		{y_2*y_2 , y_2*z_2 , y_2*mx , y_2*my , y_2*mz , y_2},
 664              		.loc 1 128 7
 665 0086 D7ED377A 		vldr.32	s15, [r7, #220]
 666 008a 67EEA77A 		vmul.f32	s15, s15, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 667              		.loc 1 127 8
 668 008e C7ED0C7A 		vstr.32	s15, [r7, #48]
 669              		.loc 1 128 17
 670 0092 97ED377A 		vldr.32	s14, [r7, #220]
 671 0096 D7ED367A 		vldr.32	s15, [r7, #216]
 672 009a 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 673              		.loc 1 127 8
 674 009e C7ED0D7A 		vstr.32	s15, [r7, #52]
 675              		.loc 1 128 27
 676 00a2 97ED377A 		vldr.32	s14, [r7, #220]
 677 00a6 D7ED3B7A 		vldr.32	s15, [r7, #236]
 678 00aa 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 679              		.loc 1 127 8
 680 00ae C7ED0E7A 		vstr.32	s15, [r7, #56]
 681              		.loc 1 128 36
 682 00b2 97ED377A 		vldr.32	s14, [r7, #220]
 683 00b6 D7ED3A7A 		vldr.32	s15, [r7, #232]
 684 00ba 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
ARM GAS  /tmp/ccEdbMJQ.s 			page 15


 685              		.loc 1 127 8
 686 00be C7ED0F7A 		vstr.32	s15, [r7, #60]
 687              		.loc 1 128 45
 688 00c2 97ED377A 		vldr.32	s14, [r7, #220]
 689 00c6 D7ED397A 		vldr.32	s15, [r7, #228]
 690 00ca 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 691              		.loc 1 127 8
 692 00ce C7ED107A 		vstr.32	s15, [r7, #64]
 693 00d2 D7F8DC30 		ldr	r3, [r7, #220]	@ float
 694 00d6 7B64     		str	r3, [r7, #68]	@ float
 129:./Hardware/Src/HMC5883L.c **** 		{z_2*y_2 , z_2*z_2 , z_2*mx , z_2*my , z_2*mz , z_2},
 695              		.loc 1 129 7
 696 00d8 97ED367A 		vldr.32	s14, [r7, #216]
 697 00dc D7ED377A 		vldr.32	s15, [r7, #220]
 698 00e0 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 699              		.loc 1 127 8
 700 00e4 C7ED127A 		vstr.32	s15, [r7, #72]
 701              		.loc 1 129 17
 702 00e8 D7ED367A 		vldr.32	s15, [r7, #216]
 703 00ec 67EEA77A 		vmul.f32	s15, s15, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 704              		.loc 1 127 8
 705 00f0 C7ED137A 		vstr.32	s15, [r7, #76]
 706              		.loc 1 129 27
 707 00f4 97ED367A 		vldr.32	s14, [r7, #216]
 708 00f8 D7ED3B7A 		vldr.32	s15, [r7, #236]
 709 00fc 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 710              		.loc 1 127 8
 711 0100 C7ED147A 		vstr.32	s15, [r7, #80]
 712              		.loc 1 129 36
 713 0104 97ED367A 		vldr.32	s14, [r7, #216]
 714 0108 D7ED3A7A 		vldr.32	s15, [r7, #232]
 715 010c 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 716              		.loc 1 127 8
 717 0110 C7ED157A 		vstr.32	s15, [r7, #84]
 718              		.loc 1 129 45
 719 0114 97ED367A 		vldr.32	s14, [r7, #216]
 720 0118 D7ED397A 		vldr.32	s15, [r7, #228]
 721 011c 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 722              		.loc 1 127 8
 723 0120 C7ED167A 		vstr.32	s15, [r7, #88]
 724 0124 D7F8D830 		ldr	r3, [r7, #216]	@ float
 725 0128 FB65     		str	r3, [r7, #92]	@ float
 130:./Hardware/Src/HMC5883L.c **** 		{mx*y_2 , mx*z_2 , mx*mx , mx*my , mx*mz , mx},
 726              		.loc 1 130 6
 727 012a 97ED3B7A 		vldr.32	s14, [r7, #236]
 728 012e D7ED377A 		vldr.32	s15, [r7, #220]
 729 0132 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 730              		.loc 1 127 8
 731 0136 C7ED187A 		vstr.32	s15, [r7, #96]
 732              		.loc 1 130 15
ARM GAS  /tmp/ccEdbMJQ.s 			page 16


 733 013a 97ED3B7A 		vldr.32	s14, [r7, #236]
 734 013e D7ED367A 		vldr.32	s15, [r7, #216]
 735 0142 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 736              		.loc 1 127 8
 737 0146 C7ED197A 		vstr.32	s15, [r7, #100]
 738              		.loc 1 130 24
 739 014a D7ED3B7A 		vldr.32	s15, [r7, #236]
 740 014e 67EEA77A 		vmul.f32	s15, s15, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 741              		.loc 1 127 8
 742 0152 C7ED1A7A 		vstr.32	s15, [r7, #104]
 743              		.loc 1 130 32
 744 0156 97ED3B7A 		vldr.32	s14, [r7, #236]
 745 015a D7ED3A7A 		vldr.32	s15, [r7, #232]
 746 015e 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 747              		.loc 1 127 8
 748 0162 C7ED1B7A 		vstr.32	s15, [r7, #108]
 749              		.loc 1 130 40
 750 0166 97ED3B7A 		vldr.32	s14, [r7, #236]
 751 016a D7ED397A 		vldr.32	s15, [r7, #228]
 752 016e 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 	float array[6][6] = {
 753              		.loc 1 127 8
 754 0172 C7ED1C7A 		vstr.32	s15, [r7, #112]
 755 0176 D7F8EC30 		ldr	r3, [r7, #236]	@ float
 756 017a 7B67     		str	r3, [r7, #116]	@ float
 131:./Hardware/Src/HMC5883L.c **** 		{y_2*my , my*z_2 , my*mx , my*my , my*mz , my},
 757              		.loc 1 131 7
 758 017c 97ED377A 		vldr.32	s14, [r7, #220]
 759 0180 D7ED3A7A 		vldr.32	s15, [r7, #232]
 760 0184 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 		{y_2*y_2 , y_2*z_2 , y_2*mx , y_2*my , y_2*mz , y_2},
 761              		.loc 1 127 8
 762 0188 C7ED1E7A 		vstr.32	s15, [r7, #120]
 763              		.loc 1 131 15
 764 018c 97ED3A7A 		vldr.32	s14, [r7, #232]
 765 0190 D7ED367A 		vldr.32	s15, [r7, #216]
 766 0194 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 		{y_2*y_2 , y_2*z_2 , y_2*mx , y_2*my , y_2*mz , y_2},
 767              		.loc 1 127 8
 768 0198 C7ED1F7A 		vstr.32	s15, [r7, #124]
 769              		.loc 1 131 24
 770 019c 97ED3A7A 		vldr.32	s14, [r7, #232]
 771 01a0 D7ED3B7A 		vldr.32	s15, [r7, #236]
 772 01a4 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 		{y_2*y_2 , y_2*z_2 , y_2*mx , y_2*my , y_2*mz , y_2},
 773              		.loc 1 127 8
 774 01a8 C7ED207A 		vstr.32	s15, [r7, #128]
 775              		.loc 1 131 32
 776 01ac D7ED3A7A 		vldr.32	s15, [r7, #232]
 777 01b0 67EEA77A 		vmul.f32	s15, s15, s15
 127:./Hardware/Src/HMC5883L.c **** 		{y_2*y_2 , y_2*z_2 , y_2*mx , y_2*my , y_2*mz , y_2},
 778              		.loc 1 127 8
 779 01b4 C7ED217A 		vstr.32	s15, [r7, #132]
 780              		.loc 1 131 40
ARM GAS  /tmp/ccEdbMJQ.s 			page 17


 781 01b8 97ED3A7A 		vldr.32	s14, [r7, #232]
 782 01bc D7ED397A 		vldr.32	s15, [r7, #228]
 783 01c0 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 		{y_2*y_2 , y_2*z_2 , y_2*mx , y_2*my , y_2*mz , y_2},
 784              		.loc 1 127 8
 785 01c4 C7ED227A 		vstr.32	s15, [r7, #136]
 786 01c8 D7F8E830 		ldr	r3, [r7, #232]	@ float
 787 01cc C7F88C30 		str	r3, [r7, #140]	@ float
 132:./Hardware/Src/HMC5883L.c **** 		{mz*y_2 , mz*z_2 , mz*mx , mz*my , z_2 , mz},
 788              		.loc 1 132 6
 789 01d0 97ED397A 		vldr.32	s14, [r7, #228]
 790 01d4 D7ED377A 		vldr.32	s15, [r7, #220]
 791 01d8 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 		{y_2*y_2 , y_2*z_2 , y_2*mx , y_2*my , y_2*mz , y_2},
 792              		.loc 1 127 8
 793 01dc C7ED247A 		vstr.32	s15, [r7, #144]
 794              		.loc 1 132 15
 795 01e0 97ED397A 		vldr.32	s14, [r7, #228]
 796 01e4 D7ED367A 		vldr.32	s15, [r7, #216]
 797 01e8 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 		{y_2*y_2 , y_2*z_2 , y_2*mx , y_2*my , y_2*mz , y_2},
 798              		.loc 1 127 8
 799 01ec C7ED257A 		vstr.32	s15, [r7, #148]
 800              		.loc 1 132 24
 801 01f0 97ED397A 		vldr.32	s14, [r7, #228]
 802 01f4 D7ED3B7A 		vldr.32	s15, [r7, #236]
 803 01f8 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 		{y_2*y_2 , y_2*z_2 , y_2*mx , y_2*my , y_2*mz , y_2},
 804              		.loc 1 127 8
 805 01fc C7ED267A 		vstr.32	s15, [r7, #152]
 806              		.loc 1 132 32
 807 0200 97ED397A 		vldr.32	s14, [r7, #228]
 808 0204 D7ED3A7A 		vldr.32	s15, [r7, #232]
 809 0208 67EE277A 		vmul.f32	s15, s14, s15
 127:./Hardware/Src/HMC5883L.c **** 		{y_2*y_2 , y_2*z_2 , y_2*mx , y_2*my , y_2*mz , y_2},
 810              		.loc 1 127 8
 811 020c C7ED277A 		vstr.32	s15, [r7, #156]
 812 0210 D7F8D830 		ldr	r3, [r7, #216]	@ float
 813 0214 C7F8A030 		str	r3, [r7, #160]	@ float
 814 0218 D7F8E430 		ldr	r3, [r7, #228]	@ float
 815 021c C7F8A430 		str	r3, [r7, #164]	@ float
 816 0220 D7F8DC30 		ldr	r3, [r7, #220]	@ float
 817 0224 C7F8A830 		str	r3, [r7, #168]	@ float
 818 0228 D7F8D830 		ldr	r3, [r7, #216]	@ float
 819 022c C7F8AC30 		str	r3, [r7, #172]	@ float
 820 0230 D7F8EC30 		ldr	r3, [r7, #236]	@ float
 821 0234 C7F8B030 		str	r3, [r7, #176]	@ float
 822 0238 D7F8E830 		ldr	r3, [r7, #232]	@ float
 823 023c C7F8B430 		str	r3, [r7, #180]	@ float
 824 0240 D7F8E430 		ldr	r3, [r7, #228]	@ float
 825 0244 C7F8B830 		str	r3, [r7, #184]	@ float
 826 0248 4FF07E53 		mov	r3, #1065353216
 827 024c C7F8BC30 		str	r3, [r7, #188]	@ float
 133:./Hardware/Src/HMC5883L.c **** 		{y_2 , z_2 , mx , my , mz , 1}
 134:./Hardware/Src/HMC5883L.c **** 	};
 135:./Hardware/Src/HMC5883L.c **** 	matrix_inver(array);
 828              		.loc 1 135 2
ARM GAS  /tmp/ccEdbMJQ.s 			page 18


 829 0250 07F13003 		add	r3, r7, #48
 830 0254 1846     		mov	r0, r3
 831 0256 FFF7FEFF 		bl	matrix_inver
 136:./Hardware/Src/HMC5883L.c **** 	// 	float array[36]= {
 137:./Hardware/Src/HMC5883L.c **** 	// 	y_2*y_2 , y_2*z_2 , y_2*mx , y_2*my , y_2*mz , y_2,
 138:./Hardware/Src/HMC5883L.c **** 	// 	z_2*y_2 , z_2*z_2 , z_2*mx , z_2*my , z_2*mz , z_2,
 139:./Hardware/Src/HMC5883L.c **** 	// 	mx*y_2 , mx*z_2 , mx*mx , mx*my , mx*mz , mx,
 140:./Hardware/Src/HMC5883L.c **** 	// 	y_2*my , my*z_2 , my*mx , y_2 , my*mz , my,
 141:./Hardware/Src/HMC5883L.c **** 	// 	mz*y_2 , mz*z_2 , mz*mx , mz*my , z_2 , mz,
 142:./Hardware/Src/HMC5883L.c **** 	// 	y_2 , z_2 , mx , my , mz , 1
 143:./Hardware/Src/HMC5883L.c **** 	// };
 144:./Hardware/Src/HMC5883L.c **** 	// inv(array,6);
 145:./Hardware/Src/HMC5883L.c **** 
 146:./Hardware/Src/HMC5883L.c **** 	float tmp[6] = {0};
 832              		.loc 1 146 8
 833 025a 07F11803 		add	r3, r7, #24
 834 025e 0022     		movs	r2, #0
 835 0260 1A60     		str	r2, [r3]
 836 0262 5A60     		str	r2, [r3, #4]
 837 0264 9A60     		str	r2, [r3, #8]
 838 0266 DA60     		str	r2, [r3, #12]
 839 0268 1A61     		str	r2, [r3, #16]
 840 026a 5A61     		str	r2, [r3, #20]
 147:./Hardware/Src/HMC5883L.c **** 	float K_T[6] = {y_2,z_2,mx,my,mz,1};
 841              		.loc 1 147 8
 842 026c D7F8DC30 		ldr	r3, [r7, #220]	@ float
 843 0270 3B60     		str	r3, [r7]	@ float
 844 0272 D7F8D830 		ldr	r3, [r7, #216]	@ float
 845 0276 7B60     		str	r3, [r7, #4]	@ float
 846 0278 D7F8EC30 		ldr	r3, [r7, #236]	@ float
 847 027c BB60     		str	r3, [r7, #8]	@ float
 848 027e D7F8E830 		ldr	r3, [r7, #232]	@ float
 849 0282 FB60     		str	r3, [r7, #12]	@ float
 850 0284 D7F8E430 		ldr	r3, [r7, #228]	@ float
 851 0288 3B61     		str	r3, [r7, #16]	@ float
 852 028a 4FF07E53 		mov	r3, #1065353216
 853 028e 7B61     		str	r3, [r7, #20]	@ float
 148:./Hardware/Src/HMC5883L.c **** 	int row=0;
 854              		.loc 1 148 6
 855 0290 0023     		movs	r3, #0
 856 0292 C7F8F430 		str	r3, [r7, #244]
 149:./Hardware/Src/HMC5883L.c **** 	while(row<6){
 857              		.loc 1 149 7
 858 0296 40E0     		b	.L27
 859              	.L30:
 860              	.LBB3:
 150:./Hardware/Src/HMC5883L.c **** 		for(int j=0;j<6;j++){
 861              		.loc 1 150 11
 862 0298 0023     		movs	r3, #0
 863 029a C7F8F030 		str	r3, [r7, #240]
 864              		.loc 1 150 3
 865 029e 33E0     		b	.L28
 866              	.L32:
 867              		.align	2
 868              	.L31:
 869 02a0 00000000 		.word	HMC5883L_data
 870 02a4 00408844 		.word	1149779968
ARM GAS  /tmp/ccEdbMJQ.s 			page 19


 871              	.L29:
 151:./Hardware/Src/HMC5883L.c **** 			tmp[row] += array[row][j] * K_T[j];
 872              		.loc 1 151 7 discriminator 3
 873 02a8 D7F8F430 		ldr	r3, [r7, #244]
 874 02ac 9B00     		lsls	r3, r3, #2
 875 02ae F833     		adds	r3, r3, #248
 876 02b0 3B44     		add	r3, r3, r7
 877 02b2 E03B     		subs	r3, r3, #224
 878 02b4 93ED007A 		vldr.32	s14, [r3]
 879              		.loc 1 151 26 discriminator 3
 880 02b8 D7F8F420 		ldr	r2, [r7, #244]
 881 02bc 1346     		mov	r3, r2
 882 02be 5B00     		lsls	r3, r3, #1
 883 02c0 1344     		add	r3, r3, r2
 884 02c2 5B00     		lsls	r3, r3, #1
 885 02c4 D7F8F020 		ldr	r2, [r7, #240]
 886 02c8 1344     		add	r3, r3, r2
 887 02ca 9B00     		lsls	r3, r3, #2
 888 02cc F833     		adds	r3, r3, #248
 889 02ce 3B44     		add	r3, r3, r7
 890 02d0 C83B     		subs	r3, r3, #200
 891 02d2 D3ED006A 		vldr.32	s13, [r3]
 892              		.loc 1 151 35 discriminator 3
 893 02d6 D7F8F030 		ldr	r3, [r7, #240]
 894 02da 9B00     		lsls	r3, r3, #2
 895 02dc F833     		adds	r3, r3, #248
 896 02de 3B44     		add	r3, r3, r7
 897 02e0 F83B     		subs	r3, r3, #248
 898 02e2 D3ED007A 		vldr.32	s15, [r3]
 899              		.loc 1 151 30 discriminator 3
 900 02e6 66EEA77A 		vmul.f32	s15, s13, s15
 901              		.loc 1 151 13 discriminator 3
 902 02ea 77EE277A 		vadd.f32	s15, s14, s15
 903 02ee D7F8F430 		ldr	r3, [r7, #244]
 904 02f2 9B00     		lsls	r3, r3, #2
 905 02f4 F833     		adds	r3, r3, #248
 906 02f6 3B44     		add	r3, r3, r7
 907 02f8 E03B     		subs	r3, r3, #224
 908 02fa C3ED007A 		vstr.32	s15, [r3]
 150:./Hardware/Src/HMC5883L.c **** 		for(int j=0;j<6;j++){
 909              		.loc 1 150 20 discriminator 3
 910 02fe D7F8F030 		ldr	r3, [r7, #240]
 911 0302 0133     		adds	r3, r3, #1
 912 0304 C7F8F030 		str	r3, [r7, #240]
 913              	.L28:
 150:./Hardware/Src/HMC5883L.c **** 		for(int j=0;j<6;j++){
 914              		.loc 1 150 16 discriminator 1
 915 0308 D7F8F030 		ldr	r3, [r7, #240]
 916 030c 052B     		cmp	r3, #5
 917 030e CBDD     		ble	.L29
 918              	.LBE3:
 152:./Hardware/Src/HMC5883L.c **** 		}
 153:./Hardware/Src/HMC5883L.c **** 		row++;
 919              		.loc 1 153 6
 920 0310 D7F8F430 		ldr	r3, [r7, #244]
 921 0314 0133     		adds	r3, r3, #1
 922 0316 C7F8F430 		str	r3, [r7, #244]
ARM GAS  /tmp/ccEdbMJQ.s 			page 20


 923              	.L27:
 149:./Hardware/Src/HMC5883L.c **** 		for(int j=0;j<6;j++){
 924              		.loc 1 149 11
 925 031a D7F8F430 		ldr	r3, [r7, #244]
 926 031e 052B     		cmp	r3, #5
 927 0320 BADD     		ble	.L30
 154:./Hardware/Src/HMC5883L.c **** 	}
 155:./Hardware/Src/HMC5883L.c **** 	float A = tmp[0] * _x_2;
 928              		.loc 1 155 15
 929 0322 D7ED067A 		vldr.32	s15, [r7, #24]
 930              		.loc 1 155 8
 931 0326 97ED387A 		vldr.32	s14, [r7, #224]
 932 032a 67EE277A 		vmul.f32	s15, s14, s15
 933 032e C7ED357A 		vstr.32	s15, [r7, #212]
 156:./Hardware/Src/HMC5883L.c **** 	float B = tmp[1] * _x_2;
 934              		.loc 1 156 15
 935 0332 D7ED077A 		vldr.32	s15, [r7, #28]
 936              		.loc 1 156 8
 937 0336 97ED387A 		vldr.32	s14, [r7, #224]
 938 033a 67EE277A 		vmul.f32	s15, s14, s15
 939 033e C7ED347A 		vstr.32	s15, [r7, #208]
 157:./Hardware/Src/HMC5883L.c **** 	float C = tmp[2] * _x_2;
 940              		.loc 1 157 15
 941 0342 D7ED087A 		vldr.32	s15, [r7, #32]
 942              		.loc 1 157 8
 943 0346 97ED387A 		vldr.32	s14, [r7, #224]
 944 034a 67EE277A 		vmul.f32	s15, s14, s15
 945 034e C7ED337A 		vstr.32	s15, [r7, #204]
 158:./Hardware/Src/HMC5883L.c **** 	float D = tmp[3] * _x_2;
 946              		.loc 1 158 15
 947 0352 D7ED097A 		vldr.32	s15, [r7, #36]
 948              		.loc 1 158 8
 949 0356 97ED387A 		vldr.32	s14, [r7, #224]
 950 035a 67EE277A 		vmul.f32	s15, s14, s15
 951 035e C7ED327A 		vstr.32	s15, [r7, #200]
 159:./Hardware/Src/HMC5883L.c **** 	float E = tmp[4] * _x_2;
 952              		.loc 1 159 15
 953 0362 D7ED0A7A 		vldr.32	s15, [r7, #40]
 954              		.loc 1 159 8
 955 0366 97ED387A 		vldr.32	s14, [r7, #224]
 956 036a 67EE277A 		vmul.f32	s15, s14, s15
 957 036e C7ED317A 		vstr.32	s15, [r7, #196]
 160:./Hardware/Src/HMC5883L.c **** 	float F = tmp[5] * _x_2;
 958              		.loc 1 160 15
 959 0372 D7ED0B7A 		vldr.32	s15, [r7, #44]
 960              		.loc 1 160 8
 961 0376 97ED387A 		vldr.32	s14, [r7, #224]
 962 037a 67EE277A 		vmul.f32	s15, s14, s15
 963 037e C7ED307A 		vstr.32	s15, [r7, #192]
 161:./Hardware/Src/HMC5883L.c **** 	Ox += -C/2;
 964              		.loc 1 161 8
 965 0382 D7ED337A 		vldr.32	s15, [r7, #204]
 966 0386 F1EE677A 		vneg.f32	s15, s15
 967              		.loc 1 161 10
 968 038a F0EE006A 		vmov.f32	s13, #2.0e+0
 969 038e 87EEA67A 		vdiv.f32	s14, s15, s13
 970              		.loc 1 161 5
ARM GAS  /tmp/ccEdbMJQ.s 			page 21


 971 0392 684B     		ldr	r3, .L33
 972 0394 D3ED007A 		vldr.32	s15, [r3]
 973 0398 77EE277A 		vadd.f32	s15, s14, s15
 974 039c 654B     		ldr	r3, .L33
 975 039e C3ED007A 		vstr.32	s15, [r3]
 162:./Hardware/Src/HMC5883L.c **** 	Oy += -D/(2*A);
 976              		.loc 1 162 8
 977 03a2 D7ED327A 		vldr.32	s15, [r7, #200]
 978 03a6 F1EE676A 		vneg.f32	s13, s15
 979              		.loc 1 162 13
 980 03aa D7ED357A 		vldr.32	s15, [r7, #212]
 981 03ae 77EEA77A 		vadd.f32	s15, s15, s15
 982              		.loc 1 162 10
 983 03b2 86EEA77A 		vdiv.f32	s14, s13, s15
 984              		.loc 1 162 5
 985 03b6 604B     		ldr	r3, .L33+4
 986 03b8 D3ED007A 		vldr.32	s15, [r3]
 987 03bc 77EE277A 		vadd.f32	s15, s14, s15
 988 03c0 5D4B     		ldr	r3, .L33+4
 989 03c2 C3ED007A 		vstr.32	s15, [r3]
 163:./Hardware/Src/HMC5883L.c **** 	Oz += -E/(2*B);
 990              		.loc 1 163 8
 991 03c6 D7ED317A 		vldr.32	s15, [r7, #196]
 992 03ca F1EE676A 		vneg.f32	s13, s15
 993              		.loc 1 163 13
 994 03ce D7ED347A 		vldr.32	s15, [r7, #208]
 995 03d2 77EEA77A 		vadd.f32	s15, s15, s15
 996              		.loc 1 163 10
 997 03d6 86EEA77A 		vdiv.f32	s14, s13, s15
 998              		.loc 1 163 5
 999 03da 584B     		ldr	r3, .L33+8
 1000 03dc D3ED007A 		vldr.32	s15, [r3]
 1001 03e0 77EE277A 		vadd.f32	s15, s14, s15
 1002 03e4 554B     		ldr	r3, .L33+8
 1003 03e6 C3ED007A 		vstr.32	s15, [r3]
 164:./Hardware/Src/HMC5883L.c **** 	Rx += sqrt(Ox*Ox + A*Oy*Oy + B*Oz*Oz - F);
 1004              		.loc 1 164 15
 1005 03ea 524B     		ldr	r3, .L33
 1006 03ec 93ED007A 		vldr.32	s14, [r3]
 1007 03f0 504B     		ldr	r3, .L33
 1008 03f2 D3ED007A 		vldr.32	s15, [r3]
 1009 03f6 27EE277A 		vmul.f32	s14, s14, s15
 1010              		.loc 1 164 22
 1011 03fa 4F4B     		ldr	r3, .L33+4
 1012 03fc D3ED006A 		vldr.32	s13, [r3]
 1013 0400 D7ED357A 		vldr.32	s15, [r7, #212]
 1014 0404 66EEA76A 		vmul.f32	s13, s13, s15
 1015              		.loc 1 164 25
 1016 0408 4B4B     		ldr	r3, .L33+4
 1017 040a D3ED007A 		vldr.32	s15, [r3]
 1018 040e 66EEA77A 		vmul.f32	s15, s13, s15
 1019              		.loc 1 164 19
 1020 0412 37EE277A 		vadd.f32	s14, s14, s15
 1021              		.loc 1 164 32
 1022 0416 494B     		ldr	r3, .L33+8
 1023 0418 D3ED006A 		vldr.32	s13, [r3]
 1024 041c D7ED347A 		vldr.32	s15, [r7, #208]
ARM GAS  /tmp/ccEdbMJQ.s 			page 22


 1025 0420 66EEA76A 		vmul.f32	s13, s13, s15
 1026              		.loc 1 164 35
 1027 0424 454B     		ldr	r3, .L33+8
 1028 0426 D3ED007A 		vldr.32	s15, [r3]
 1029 042a 66EEA77A 		vmul.f32	s15, s13, s15
 1030              		.loc 1 164 29
 1031 042e 37EE277A 		vadd.f32	s14, s14, s15
 1032              		.loc 1 164 39
 1033 0432 D7ED307A 		vldr.32	s15, [r7, #192]
 1034 0436 77EE677A 		vsub.f32	s15, s14, s15
 1035              		.loc 1 164 8
 1036 043a 17EE900A 		vmov	r0, s15
 1037 043e FFF7FEFF 		bl	__aeabi_f2d
 1038 0442 0246     		mov	r2, r0
 1039 0444 0B46     		mov	r3, r1
 1040 0446 43EC102B 		vmov	d0, r2, r3
 1041 044a FFF7FEFF 		bl	sqrt
 1042 044e 55EC104B 		vmov	r4, r5, d0
 1043              		.loc 1 164 5
 1044 0452 3B4B     		ldr	r3, .L33+12
 1045 0454 1B68     		ldr	r3, [r3]	@ float
 1046 0456 1846     		mov	r0, r3	@ float
 1047 0458 FFF7FEFF 		bl	__aeabi_f2d
 1048 045c 0246     		mov	r2, r0
 1049 045e 0B46     		mov	r3, r1
 1050 0460 2046     		mov	r0, r4
 1051 0462 2946     		mov	r1, r5
 1052 0464 FFF7FEFF 		bl	__aeabi_dadd
 1053 0468 0246     		mov	r2, r0
 1054 046a 0B46     		mov	r3, r1
 1055 046c 1046     		mov	r0, r2
 1056 046e 1946     		mov	r1, r3
 1057 0470 FFF7FEFF 		bl	__aeabi_d2f
 1058 0474 0346     		mov	r3, r0	@ float
 1059 0476 324A     		ldr	r2, .L33+12
 1060 0478 1360     		str	r3, [r2]	@ float
 165:./Hardware/Src/HMC5883L.c **** 	Ry += sqrt(Rx*Rx/A);
 1061              		.loc 1 165 15
 1062 047a 314B     		ldr	r3, .L33+12
 1063 047c 93ED007A 		vldr.32	s14, [r3]
 1064 0480 2F4B     		ldr	r3, .L33+12
 1065 0482 D3ED007A 		vldr.32	s15, [r3]
 1066 0486 27EE277A 		vmul.f32	s14, s14, s15
 1067              		.loc 1 165 18
 1068 048a D7ED357A 		vldr.32	s15, [r7, #212]
 1069 048e C7EE276A 		vdiv.f32	s13, s14, s15
 1070              		.loc 1 165 8
 1071 0492 16EE900A 		vmov	r0, s13
 1072 0496 FFF7FEFF 		bl	__aeabi_f2d
 1073 049a 0246     		mov	r2, r0
 1074 049c 0B46     		mov	r3, r1
 1075 049e 43EC102B 		vmov	d0, r2, r3
 1076 04a2 FFF7FEFF 		bl	sqrt
 1077 04a6 55EC104B 		vmov	r4, r5, d0
 1078              		.loc 1 165 5
 1079 04aa 264B     		ldr	r3, .L33+16
 1080 04ac 1B68     		ldr	r3, [r3]	@ float
ARM GAS  /tmp/ccEdbMJQ.s 			page 23


 1081 04ae 1846     		mov	r0, r3	@ float
 1082 04b0 FFF7FEFF 		bl	__aeabi_f2d
 1083 04b4 0246     		mov	r2, r0
 1084 04b6 0B46     		mov	r3, r1
 1085 04b8 2046     		mov	r0, r4
 1086 04ba 2946     		mov	r1, r5
 1087 04bc FFF7FEFF 		bl	__aeabi_dadd
 1088 04c0 0246     		mov	r2, r0
 1089 04c2 0B46     		mov	r3, r1
 1090 04c4 1046     		mov	r0, r2
 1091 04c6 1946     		mov	r1, r3
 1092 04c8 FFF7FEFF 		bl	__aeabi_d2f
 1093 04cc 0346     		mov	r3, r0	@ float
 1094 04ce 1D4A     		ldr	r2, .L33+16
 1095 04d0 1360     		str	r3, [r2]	@ float
 166:./Hardware/Src/HMC5883L.c **** 	Rz += sqrt(Rx*Rx/B);
 1096              		.loc 1 166 15
 1097 04d2 1B4B     		ldr	r3, .L33+12
 1098 04d4 93ED007A 		vldr.32	s14, [r3]
 1099 04d8 194B     		ldr	r3, .L33+12
 1100 04da D3ED007A 		vldr.32	s15, [r3]
 1101 04de 27EE277A 		vmul.f32	s14, s14, s15
 1102              		.loc 1 166 18
 1103 04e2 D7ED347A 		vldr.32	s15, [r7, #208]
 1104 04e6 C7EE276A 		vdiv.f32	s13, s14, s15
 1105              		.loc 1 166 8
 1106 04ea 16EE900A 		vmov	r0, s13
 1107 04ee FFF7FEFF 		bl	__aeabi_f2d
 1108 04f2 0246     		mov	r2, r0
 1109 04f4 0B46     		mov	r3, r1
 1110 04f6 43EC102B 		vmov	d0, r2, r3
 1111 04fa FFF7FEFF 		bl	sqrt
 1112 04fe 55EC104B 		vmov	r4, r5, d0
 1113              		.loc 1 166 5
 1114 0502 114B     		ldr	r3, .L33+20
 1115 0504 1B68     		ldr	r3, [r3]	@ float
 1116 0506 1846     		mov	r0, r3	@ float
 1117 0508 FFF7FEFF 		bl	__aeabi_f2d
 1118 050c 0246     		mov	r2, r0
 1119 050e 0B46     		mov	r3, r1
 1120 0510 2046     		mov	r0, r4
 1121 0512 2946     		mov	r1, r5
 1122 0514 FFF7FEFF 		bl	__aeabi_dadd
 1123 0518 0246     		mov	r2, r0
 1124 051a 0B46     		mov	r3, r1
 1125 051c 1046     		mov	r0, r2
 1126 051e 1946     		mov	r1, r3
 1127 0520 FFF7FEFF 		bl	__aeabi_d2f
 1128 0524 0346     		mov	r3, r0	@ float
 1129 0526 084A     		ldr	r2, .L33+20
 1130 0528 1360     		str	r3, [r2]	@ float
 167:./Hardware/Src/HMC5883L.c **** 
 168:./Hardware/Src/HMC5883L.c **** }
 1131              		.loc 1 168 1
 1132 052a 00BF     		nop
 1133 052c F837     		adds	r7, r7, #248
 1134              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccEdbMJQ.s 			page 24


 1135 052e BD46     		mov	sp, r7
 1136              		.cfi_def_cfa_register 13
 1137              		@ sp needed
 1138 0530 B0BD     		pop	{r4, r5, r7, pc}
 1139              	.L34:
 1140 0532 00BF     		.align	2
 1141              	.L33:
 1142 0534 00000000 		.word	Ox
 1143 0538 00000000 		.word	Oy
 1144 053c 00000000 		.word	Oz
 1145 0540 00000000 		.word	Rx
 1146 0544 00000000 		.word	Ry
 1147 0548 00000000 		.word	Rz
 1148              		.cfi_endproc
 1149              	.LFE128:
 1151              		.section	.text.Ellipsoid_Fitting,"ax",%progbits
 1152              		.align	1
 1153              		.global	Ellipsoid_Fitting
 1154              		.syntax unified
 1155              		.thumb
 1156              		.thumb_func
 1158              	Ellipsoid_Fitting:
 1159              	.LFB129:
 169:./Hardware/Src/HMC5883L.c **** void Ellipsoid_Fitting(void){
 1160              		.loc 1 169 29
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 8
 1163              		@ frame_needed = 1, uses_anonymous_args = 0
 1164 0000 80B5     		push	{r7, lr}
 1165              		.cfi_def_cfa_offset 8
 1166              		.cfi_offset 7, -8
 1167              		.cfi_offset 14, -4
 1168 0002 82B0     		sub	sp, sp, #8
 1169              		.cfi_def_cfa_offset 16
 1170 0004 00AF     		add	r7, sp, #0
 1171              		.cfi_def_cfa_register 7
 1172              	.LBB4:
 170:./Hardware/Src/HMC5883L.c **** 	for(int i=0;i<200;i++) {Ellipsoid_Cal();}
 1173              		.loc 1 170 10
 1174 0006 0023     		movs	r3, #0
 1175 0008 7B60     		str	r3, [r7, #4]
 1176              		.loc 1 170 2
 1177 000a 04E0     		b	.L36
 1178              	.L37:
 1179              		.loc 1 170 26 discriminator 3
 1180 000c FFF7FEFF 		bl	Ellipsoid_Cal
 1181              		.loc 1 170 21 discriminator 3
 1182 0010 7B68     		ldr	r3, [r7, #4]
 1183 0012 0133     		adds	r3, r3, #1
 1184 0014 7B60     		str	r3, [r7, #4]
 1185              	.L36:
 1186              		.loc 1 170 15 discriminator 1
 1187 0016 7B68     		ldr	r3, [r7, #4]
 1188 0018 C72B     		cmp	r3, #199
 1189 001a F7DD     		ble	.L37
 1190              	.LBE4:
 171:./Hardware/Src/HMC5883L.c **** 	Ox = Ox/200;
ARM GAS  /tmp/ccEdbMJQ.s 			page 25


 1191              		.loc 1 171 9
 1192 001c 1F4B     		ldr	r3, .L38
 1193 001e 93ED007A 		vldr.32	s14, [r3]
 1194 0022 DFED1F6A 		vldr.32	s13, .L38+4
 1195 0026 C7EE267A 		vdiv.f32	s15, s14, s13
 1196              		.loc 1 171 5
 1197 002a 1C4B     		ldr	r3, .L38
 1198 002c C3ED007A 		vstr.32	s15, [r3]
 172:./Hardware/Src/HMC5883L.c **** 	Oy = Oy/200;
 1199              		.loc 1 172 9
 1200 0030 1C4B     		ldr	r3, .L38+8
 1201 0032 93ED007A 		vldr.32	s14, [r3]
 1202 0036 DFED1A6A 		vldr.32	s13, .L38+4
 1203 003a C7EE267A 		vdiv.f32	s15, s14, s13
 1204              		.loc 1 172 5
 1205 003e 194B     		ldr	r3, .L38+8
 1206 0040 C3ED007A 		vstr.32	s15, [r3]
 173:./Hardware/Src/HMC5883L.c **** 	Oz = Oz/200;
 1207              		.loc 1 173 9
 1208 0044 184B     		ldr	r3, .L38+12
 1209 0046 93ED007A 		vldr.32	s14, [r3]
 1210 004a DFED156A 		vldr.32	s13, .L38+4
 1211 004e C7EE267A 		vdiv.f32	s15, s14, s13
 1212              		.loc 1 173 5
 1213 0052 154B     		ldr	r3, .L38+12
 1214 0054 C3ED007A 		vstr.32	s15, [r3]
 174:./Hardware/Src/HMC5883L.c **** 	Rx = Rx/200;
 1215              		.loc 1 174 9
 1216 0058 144B     		ldr	r3, .L38+16
 1217 005a 93ED007A 		vldr.32	s14, [r3]
 1218 005e DFED106A 		vldr.32	s13, .L38+4
 1219 0062 C7EE267A 		vdiv.f32	s15, s14, s13
 1220              		.loc 1 174 5
 1221 0066 114B     		ldr	r3, .L38+16
 1222 0068 C3ED007A 		vstr.32	s15, [r3]
 175:./Hardware/Src/HMC5883L.c **** 	Ry = Ry/200;
 1223              		.loc 1 175 9
 1224 006c 104B     		ldr	r3, .L38+20
 1225 006e 93ED007A 		vldr.32	s14, [r3]
 1226 0072 DFED0B6A 		vldr.32	s13, .L38+4
 1227 0076 C7EE267A 		vdiv.f32	s15, s14, s13
 1228              		.loc 1 175 5
 1229 007a 0D4B     		ldr	r3, .L38+20
 1230 007c C3ED007A 		vstr.32	s15, [r3]
 176:./Hardware/Src/HMC5883L.c **** 	Rz = Rz/200;
 1231              		.loc 1 176 9
 1232 0080 0C4B     		ldr	r3, .L38+24
 1233 0082 93ED007A 		vldr.32	s14, [r3]
 1234 0086 DFED066A 		vldr.32	s13, .L38+4
 1235 008a C7EE267A 		vdiv.f32	s15, s14, s13
 1236              		.loc 1 176 5
 1237 008e 094B     		ldr	r3, .L38+24
 1238 0090 C3ED007A 		vstr.32	s15, [r3]
 177:./Hardware/Src/HMC5883L.c **** }
 1239              		.loc 1 177 1
 1240 0094 00BF     		nop
 1241 0096 0837     		adds	r7, r7, #8
ARM GAS  /tmp/ccEdbMJQ.s 			page 26


 1242              		.cfi_def_cfa_offset 8
 1243 0098 BD46     		mov	sp, r7
 1244              		.cfi_def_cfa_register 13
 1245              		@ sp needed
 1246 009a 80BD     		pop	{r7, pc}
 1247              	.L39:
 1248              		.align	2
 1249              	.L38:
 1250 009c 00000000 		.word	Ox
 1251 00a0 00004843 		.word	1128792064
 1252 00a4 00000000 		.word	Oy
 1253 00a8 00000000 		.word	Oz
 1254 00ac 00000000 		.word	Rx
 1255 00b0 00000000 		.word	Ry
 1256 00b4 00000000 		.word	Rz
 1257              		.cfi_endproc
 1258              	.LFE129:
 1260              		.text
 1261              	.Letext0:
 1262              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 1263              		.file 3 "./Hardware/Inc/HMC5883L.h"
 1264              		.file 4 "./Tools/Inc/i2c_soft.h"
 1265              		.file 5 "./Tools/Inc/Matrix.h"
 1266              		.file 6 "/usr/include/newlib/math.h"
 1267              		.file 7 "./Tools/Inc/i2c.h"
 1268              		.file 8 "./Hardware/Inc/MPU6050.h"
 1269              		.file 9 "./Start/stm32f4xx.h"
ARM GAS  /tmp/ccEdbMJQ.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 HMC5883L.c
     /tmp/ccEdbMJQ.s:25     .bss.HMC5883L_data:0000000000000000 HMC5883L_data
     /tmp/ccEdbMJQ.s:22     .bss.HMC5883L_data:0000000000000000 $d
     /tmp/ccEdbMJQ.s:28     .text.HMC5883L_Init:0000000000000000 $t
     /tmp/ccEdbMJQ.s:34     .text.HMC5883L_Init:0000000000000000 HMC5883L_Init
     /tmp/ccEdbMJQ.s:212    .text.HMC5883L_SendData:0000000000000000 HMC5883L_SendData
     /tmp/ccEdbMJQ.s:73     .text.HMC5883L_Read:0000000000000000 $t
     /tmp/ccEdbMJQ.s:79     .text.HMC5883L_Read:0000000000000000 HMC5883L_Read
     /tmp/ccEdbMJQ.s:206    .text.HMC5883L_SendData:0000000000000000 $t
     /tmp/ccEdbMJQ.s:285    .text.HMC588CL_ReadData:0000000000000000 $t
     /tmp/ccEdbMJQ.s:291    .text.HMC588CL_ReadData:0000000000000000 HMC588CL_ReadData
     /tmp/ccEdbMJQ.s:473    .text.HMC5883L_Status:0000000000000000 HMC5883L_Status
     /tmp/ccEdbMJQ.s:467    .text.HMC5883L_Status:0000000000000000 $t
     /tmp/ccEdbMJQ.s:553    .bss.Rx:0000000000000000 Rx
     /tmp/ccEdbMJQ.s:550    .bss.Rx:0000000000000000 $d
     /tmp/ccEdbMJQ.s:560    .bss.Ry:0000000000000000 Ry
     /tmp/ccEdbMJQ.s:557    .bss.Ry:0000000000000000 $d
     /tmp/ccEdbMJQ.s:567    .bss.Rz:0000000000000000 Rz
     /tmp/ccEdbMJQ.s:564    .bss.Rz:0000000000000000 $d
     /tmp/ccEdbMJQ.s:574    .bss.Ox:0000000000000000 Ox
     /tmp/ccEdbMJQ.s:571    .bss.Ox:0000000000000000 $d
     /tmp/ccEdbMJQ.s:581    .bss.Oy:0000000000000000 Oy
     /tmp/ccEdbMJQ.s:578    .bss.Oy:0000000000000000 $d
     /tmp/ccEdbMJQ.s:588    .bss.Oz:0000000000000000 Oz
     /tmp/ccEdbMJQ.s:585    .bss.Oz:0000000000000000 $d
     /tmp/ccEdbMJQ.s:594    .text.Ellipsoid_Cal:0000000000000000 $t
     /tmp/ccEdbMJQ.s:600    .text.Ellipsoid_Cal:0000000000000000 Ellipsoid_Cal
     /tmp/ccEdbMJQ.s:869    .text.Ellipsoid_Cal:00000000000002a0 $d
     /tmp/ccEdbMJQ.s:873    .text.Ellipsoid_Cal:00000000000002a8 $t
     /tmp/ccEdbMJQ.s:1142   .text.Ellipsoid_Cal:0000000000000534 $d
     /tmp/ccEdbMJQ.s:1152   .text.Ellipsoid_Fitting:0000000000000000 $t
     /tmp/ccEdbMJQ.s:1158   .text.Ellipsoid_Fitting:0000000000000000 Ellipsoid_Fitting
     /tmp/ccEdbMJQ.s:1250   .text.Ellipsoid_Fitting:000000000000009c $d

UNDEFINED SYMBOLS
MPU6050_SendByte
I2C_READ_BYTE
I2CStart
I2CSendByte
I2CWaitAck
I2CStop
I2CReceiveByte
I2CSendNotAck
I2CSendAck
__aeabi_f2d
__aeabi_dadd
__aeabi_d2f
matrix_inver
sqrt
