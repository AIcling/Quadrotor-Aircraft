ARM GAS  /tmp/cc2lf3as.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_cryp_aes.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Lib/Src/stm32f4xx_cryp_aes.c"
  20              		.section	.text.CRYP_AES_ECB,"ax",%progbits
  21              		.align	1
  22              		.global	CRYP_AES_ECB
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	CRYP_AES_ECB:
  28              	.LFB123:
   1:./Lib/Src/stm32f4xx_cryp_aes.c **** /**
   2:./Lib/Src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
   3:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @file    stm32f4xx_cryp_aes.c
   4:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @author  MCD Application Team
   5:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @version V1.8.1
   6:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @date    27-January-2022
   7:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @brief   This file provides high level functions to encrypt and decrypt an 
   8:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          input message using AES in ECB/CBC/CTR/GCM/CCM modes.
   9:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          It uses the stm32f4xx_cryp.c/.h drivers to access the STM32F4xx CRYP
  10:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          peripheral.
  11:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          AES-ECB/CBC/CTR/GCM/CCM modes are available on STM32F437x Devices.
  12:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          For STM32F41xx Devices, only AES-ECB/CBC/CTR modes are available.
  13:./Lib/Src/stm32f4xx_cryp_aes.c ****   *
  14:./Lib/Src/stm32f4xx_cryp_aes.c **** @verbatim
  15:./Lib/Src/stm32f4xx_cryp_aes.c ****  ===================================================================
  16:./Lib/Src/stm32f4xx_cryp_aes.c ****                   ##### How to use this driver #####
  17:./Lib/Src/stm32f4xx_cryp_aes.c ****  ===================================================================
  18:./Lib/Src/stm32f4xx_cryp_aes.c ****  [..]
  19:./Lib/Src/stm32f4xx_cryp_aes.c ****    (#) Enable The CRYP controller clock using 
  20:./Lib/Src/stm32f4xx_cryp_aes.c ****       RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  21:./Lib/Src/stm32f4xx_cryp_aes.c ****   
  22:./Lib/Src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in ECB Mode using CRYP_AES_ECB() function.
  23:./Lib/Src/stm32f4xx_cryp_aes.c ****   
  24:./Lib/Src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in CBC Mode using CRYP_AES_CBC() function.
  25:./Lib/Src/stm32f4xx_cryp_aes.c ****   
  26:./Lib/Src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in CTR Mode using CRYP_AES_CTR() function.
  27:./Lib/Src/stm32f4xx_cryp_aes.c **** 
  28:./Lib/Src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in GCM Mode using CRYP_AES_GCM() function.
  29:./Lib/Src/stm32f4xx_cryp_aes.c ****    
  30:./Lib/Src/stm32f4xx_cryp_aes.c ****    (#) Encrypt and decrypt using AES in CCM Mode using CRYP_AES_CCM() function.
ARM GAS  /tmp/cc2lf3as.s 			page 2


  31:./Lib/Src/stm32f4xx_cryp_aes.c ****      
  32:./Lib/Src/stm32f4xx_cryp_aes.c **** @endverbatim
  33:./Lib/Src/stm32f4xx_cryp_aes.c ****   *
  34:./Lib/Src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
  35:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @attention
  36:./Lib/Src/stm32f4xx_cryp_aes.c ****   *
  37:./Lib/Src/stm32f4xx_cryp_aes.c ****   * Copyright (c) 2016 STMicroelectronics.
  38:./Lib/Src/stm32f4xx_cryp_aes.c ****   * All rights reserved.
  39:./Lib/Src/stm32f4xx_cryp_aes.c ****   *
  40:./Lib/Src/stm32f4xx_cryp_aes.c ****   * This software is licensed under terms that can be found in the LICENSE file
  41:./Lib/Src/stm32f4xx_cryp_aes.c ****   * in the root directory of this software component.
  42:./Lib/Src/stm32f4xx_cryp_aes.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  43:./Lib/Src/stm32f4xx_cryp_aes.c ****   *
  44:./Lib/Src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
  45:./Lib/Src/stm32f4xx_cryp_aes.c ****   */
  46:./Lib/Src/stm32f4xx_cryp_aes.c **** 
  47:./Lib/Src/stm32f4xx_cryp_aes.c **** /* Includes ------------------------------------------------------------------*/
  48:./Lib/Src/stm32f4xx_cryp_aes.c **** #include "stm32f4xx_cryp.h"
  49:./Lib/Src/stm32f4xx_cryp_aes.c **** 
  50:./Lib/Src/stm32f4xx_cryp_aes.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  51:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @{
  52:./Lib/Src/stm32f4xx_cryp_aes.c ****   */
  53:./Lib/Src/stm32f4xx_cryp_aes.c **** 
  54:./Lib/Src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP 
  55:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @brief CRYP driver modules
  56:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @{
  57:./Lib/Src/stm32f4xx_cryp_aes.c ****   */
  58:./Lib/Src/stm32f4xx_cryp_aes.c **** 
  59:./Lib/Src/stm32f4xx_cryp_aes.c **** /* Private typedef -----------------------------------------------------------*/
  60:./Lib/Src/stm32f4xx_cryp_aes.c **** /* Private define ------------------------------------------------------------*/
  61:./Lib/Src/stm32f4xx_cryp_aes.c **** #define AESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
  62:./Lib/Src/stm32f4xx_cryp_aes.c **** 
  63:./Lib/Src/stm32f4xx_cryp_aes.c **** /* Private macro -------------------------------------------------------------*/
  64:./Lib/Src/stm32f4xx_cryp_aes.c **** /* Private variables ---------------------------------------------------------*/
  65:./Lib/Src/stm32f4xx_cryp_aes.c **** /* Private function prototypes -----------------------------------------------*/
  66:./Lib/Src/stm32f4xx_cryp_aes.c **** /* Private functions ---------------------------------------------------------*/
  67:./Lib/Src/stm32f4xx_cryp_aes.c **** 
  68:./Lib/Src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP_Private_Functions
  69:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @{
  70:./Lib/Src/stm32f4xx_cryp_aes.c ****   */ 
  71:./Lib/Src/stm32f4xx_cryp_aes.c **** 
  72:./Lib/Src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP_Group6 High Level AES functions
  73:./Lib/Src/stm32f4xx_cryp_aes.c ****  *  @brief   High Level AES functions 
  74:./Lib/Src/stm32f4xx_cryp_aes.c ****  *
  75:./Lib/Src/stm32f4xx_cryp_aes.c **** @verbatim   
  76:./Lib/Src/stm32f4xx_cryp_aes.c ****  ===============================================================================
  77:./Lib/Src/stm32f4xx_cryp_aes.c ****                        ##### High Level AES functions #####
  78:./Lib/Src/stm32f4xx_cryp_aes.c ****  ===============================================================================
  79:./Lib/Src/stm32f4xx_cryp_aes.c **** 
  80:./Lib/Src/stm32f4xx_cryp_aes.c **** @endverbatim
  81:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @{
  82:./Lib/Src/stm32f4xx_cryp_aes.c ****   */
  83:./Lib/Src/stm32f4xx_cryp_aes.c **** 
  84:./Lib/Src/stm32f4xx_cryp_aes.c **** /**
  85:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in ECB Mode
  86:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
  87:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/cc2lf3as.s 			page 3


  88:./Lib/Src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
  89:./Lib/Src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
  90:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
  91:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
  92:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
  93:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
  94:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
  95:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
  96:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
  97:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
  98:./Lib/Src/stm32f4xx_cryp_aes.c ****   */
  99:./Lib/Src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_ECB(uint8_t Mode, uint8_t* Key, uint16_t Keysize,
 100:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t* Input, uint32_t Ilength, uint8_t* Output)
 101:./Lib/Src/stm32f4xx_cryp_aes.c **** {
  29              		.loc 1 101 1
  30              		.cfi_startproc
  31              		@ args = 8, pretend = 0, frame = 168
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 90B5     		push	{r4, r7, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 ABB0     		sub	sp, sp, #172
  39              		.cfi_def_cfa_offset 184
  40 0004 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  42 0006 B960     		str	r1, [r7, #8]
  43 0008 7B60     		str	r3, [r7, #4]
  44 000a 0346     		mov	r3, r0
  45 000c FB73     		strb	r3, [r7, #15]
  46 000e 1346     		mov	r3, r2	@ movhi
  47 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 102:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 103:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 104:./Lib/Src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
  48              		.loc 1 104 17
  49 0012 0023     		movs	r3, #0
  50 0014 7B61     		str	r3, [r7, #20]
 105:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
  51              		.loc 1 105 12
  52 0016 0023     		movs	r3, #0
  53 0018 C7F89430 		str	r3, [r7, #148]
 106:./Lib/Src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
  54              		.loc 1 106 15
  55 001c 0123     		movs	r3, #1
  56 001e 87F8A730 		strb	r3, [r7, #167]
 107:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
  57              		.loc 1 107 12
  58 0022 BB68     		ldr	r3, [r7, #8]
  59 0024 C7F89030 		str	r3, [r7, #144]
 108:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
  60              		.loc 1 108 12
  61 0028 7B68     		ldr	r3, [r7, #4]
  62 002a C7F8A030 		str	r3, [r7, #160]
 109:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
  63              		.loc 1 109 12
ARM GAS  /tmp/cc2lf3as.s 			page 4


  64 002e D7F8BC30 		ldr	r3, [r7, #188]
  65 0032 C7F89C30 		str	r3, [r7, #156]
 110:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
  66              		.loc 1 110 12
  67 0036 0023     		movs	r3, #0
  68 0038 C7F89830 		str	r3, [r7, #152]
 111:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 112:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 113:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
  69              		.loc 1 113 3
  70 003c 07F11803 		add	r3, r7, #24
  71 0040 1846     		mov	r0, r3
  72 0042 FFF7FEFF 		bl	CRYP_KeyStructInit
 114:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 115:./Lib/Src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
  73              		.loc 1 115 3
  74 0046 BB89     		ldrh	r3, [r7, #12]
  75 0048 B3F5807F 		cmp	r3, #256
  76 004c 00F08680 		beq	.L2
  77 0050 B3F5807F 		cmp	r3, #256
  78 0054 00F3E180 		bgt	.L40
  79 0058 802B     		cmp	r3, #128
  80 005a 02D0     		beq	.L4
  81 005c C02B     		cmp	r3, #192
  82 005e 36D0     		beq	.L5
 116:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 117:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 128:
 118:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 119:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 120:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 121:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 122:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 123:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 124:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 125:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 126:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 127:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 192:
 128:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 129:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 130:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 131:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 132:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 133:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 134:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 135:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 136:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 137:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 138:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 139:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 140:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 141:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 256:
 142:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 143:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 144:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 145:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 146:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 147:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
ARM GAS  /tmp/cc2lf3as.s 			page 5


 148:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 149:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 150:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 151:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 152:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 153:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 154:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 155:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 156:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 157:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 158:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 159:./Lib/Src/stm32f4xx_cryp_aes.c ****     default:
 160:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
  83              		.loc 1 160 5
  84 0060 DBE0     		b	.L40
  85              	.L4:
 118:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
  86              		.loc 1 118 41
  87 0062 0023     		movs	r3, #0
  88 0064 7B64     		str	r3, [r7, #68]
 119:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
  89              		.loc 1 119 54
  90 0066 D7F89030 		ldr	r3, [r7, #144]
 119:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
  91              		.loc 1 119 47
  92 006a 1B68     		ldr	r3, [r3]
  93 006c C7F88030 		str	r3, [r7, #128]
  94              	.LBB230:
  95              	.LBB231:
  96              		.file 2 "./Start/core_cmInstr.h"
   1:./Start/core_cmInstr.h **** /**************************************************************************//**
   2:./Start/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:./Start/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:./Start/core_cmInstr.h ****  * @version  V4.10
   5:./Start/core_cmInstr.h ****  * @date     18. March 2015
   6:./Start/core_cmInstr.h ****  *
   7:./Start/core_cmInstr.h ****  * @note
   8:./Start/core_cmInstr.h ****  *
   9:./Start/core_cmInstr.h ****  ******************************************************************************/
  10:./Start/core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:./Start/core_cmInstr.h **** 
  12:./Start/core_cmInstr.h ****    All rights reserved.
  13:./Start/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:./Start/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:./Start/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:./Start/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:./Start/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:./Start/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:./Start/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:./Start/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:./Start/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:./Start/core_cmInstr.h ****      specific prior written permission.
  23:./Start/core_cmInstr.h ****    *
  24:./Start/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:./Start/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:./Start/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:./Start/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
ARM GAS  /tmp/cc2lf3as.s 			page 6


  28:./Start/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:./Start/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:./Start/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:./Start/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:./Start/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:./Start/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:./Start/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:./Start/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:./Start/core_cmInstr.h **** 
  37:./Start/core_cmInstr.h **** 
  38:./Start/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:./Start/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:./Start/core_cmInstr.h **** 
  41:./Start/core_cmInstr.h **** 
  42:./Start/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:./Start/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:./Start/core_cmInstr.h ****   Access to dedicated instructions
  45:./Start/core_cmInstr.h ****   @{
  46:./Start/core_cmInstr.h **** */
  47:./Start/core_cmInstr.h **** 
  48:./Start/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:./Start/core_cmInstr.h **** /* ARM armcc specific functions */
  50:./Start/core_cmInstr.h **** 
  51:./Start/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:./Start/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:./Start/core_cmInstr.h **** #endif
  54:./Start/core_cmInstr.h **** 
  55:./Start/core_cmInstr.h **** 
  56:./Start/core_cmInstr.h **** /** \brief  No Operation
  57:./Start/core_cmInstr.h **** 
  58:./Start/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:./Start/core_cmInstr.h ****  */
  60:./Start/core_cmInstr.h **** #define __NOP                             __nop
  61:./Start/core_cmInstr.h **** 
  62:./Start/core_cmInstr.h **** 
  63:./Start/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:./Start/core_cmInstr.h **** 
  65:./Start/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:./Start/core_cmInstr.h ****     until one of a number of events occurs.
  67:./Start/core_cmInstr.h ****  */
  68:./Start/core_cmInstr.h **** #define __WFI                             __wfi
  69:./Start/core_cmInstr.h **** 
  70:./Start/core_cmInstr.h **** 
  71:./Start/core_cmInstr.h **** /** \brief  Wait For Event
  72:./Start/core_cmInstr.h **** 
  73:./Start/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:./Start/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:./Start/core_cmInstr.h ****  */
  76:./Start/core_cmInstr.h **** #define __WFE                             __wfe
  77:./Start/core_cmInstr.h **** 
  78:./Start/core_cmInstr.h **** 
  79:./Start/core_cmInstr.h **** /** \brief  Send Event
  80:./Start/core_cmInstr.h **** 
  81:./Start/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:./Start/core_cmInstr.h ****  */
  83:./Start/core_cmInstr.h **** #define __SEV                             __sev
  84:./Start/core_cmInstr.h **** 
ARM GAS  /tmp/cc2lf3as.s 			page 7


  85:./Start/core_cmInstr.h **** 
  86:./Start/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:./Start/core_cmInstr.h **** 
  88:./Start/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:./Start/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:./Start/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:./Start/core_cmInstr.h ****  */
  92:./Start/core_cmInstr.h **** #define __ISB() do {\
  93:./Start/core_cmInstr.h ****                    __schedule_barrier();\
  94:./Start/core_cmInstr.h ****                    __isb(0xF);\
  95:./Start/core_cmInstr.h ****                    __schedule_barrier();\
  96:./Start/core_cmInstr.h ****                 } while (0)
  97:./Start/core_cmInstr.h **** 
  98:./Start/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  99:./Start/core_cmInstr.h **** 
 100:./Start/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 101:./Start/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 102:./Start/core_cmInstr.h ****  */
 103:./Start/core_cmInstr.h **** #define __DSB() do {\
 104:./Start/core_cmInstr.h ****                    __schedule_barrier();\
 105:./Start/core_cmInstr.h ****                    __dsb(0xF);\
 106:./Start/core_cmInstr.h ****                    __schedule_barrier();\
 107:./Start/core_cmInstr.h ****                 } while (0)
 108:./Start/core_cmInstr.h **** 
 109:./Start/core_cmInstr.h **** /** \brief  Data Memory Barrier
 110:./Start/core_cmInstr.h **** 
 111:./Start/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 112:./Start/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 113:./Start/core_cmInstr.h ****  */
 114:./Start/core_cmInstr.h **** #define __DMB() do {\
 115:./Start/core_cmInstr.h ****                    __schedule_barrier();\
 116:./Start/core_cmInstr.h ****                    __dmb(0xF);\
 117:./Start/core_cmInstr.h ****                    __schedule_barrier();\
 118:./Start/core_cmInstr.h ****                 } while (0)
 119:./Start/core_cmInstr.h **** 
 120:./Start/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 121:./Start/core_cmInstr.h **** 
 122:./Start/core_cmInstr.h ****     This function reverses the byte order in integer value.
 123:./Start/core_cmInstr.h **** 
 124:./Start/core_cmInstr.h ****     \param [in]    value  Value to reverse
 125:./Start/core_cmInstr.h ****     \return               Reversed value
 126:./Start/core_cmInstr.h ****  */
 127:./Start/core_cmInstr.h **** #define __REV                             __rev
 128:./Start/core_cmInstr.h **** 
 129:./Start/core_cmInstr.h **** 
 130:./Start/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 131:./Start/core_cmInstr.h **** 
 132:./Start/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 133:./Start/core_cmInstr.h **** 
 134:./Start/core_cmInstr.h ****     \param [in]    value  Value to reverse
 135:./Start/core_cmInstr.h ****     \return               Reversed value
 136:./Start/core_cmInstr.h ****  */
 137:./Start/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 138:./Start/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 139:./Start/core_cmInstr.h **** {
 140:./Start/core_cmInstr.h ****   rev16 r0, r0
 141:./Start/core_cmInstr.h ****   bx lr
ARM GAS  /tmp/cc2lf3as.s 			page 8


 142:./Start/core_cmInstr.h **** }
 143:./Start/core_cmInstr.h **** #endif
 144:./Start/core_cmInstr.h **** 
 145:./Start/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 146:./Start/core_cmInstr.h **** 
 147:./Start/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 148:./Start/core_cmInstr.h **** 
 149:./Start/core_cmInstr.h ****     \param [in]    value  Value to reverse
 150:./Start/core_cmInstr.h ****     \return               Reversed value
 151:./Start/core_cmInstr.h ****  */
 152:./Start/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 153:./Start/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 154:./Start/core_cmInstr.h **** {
 155:./Start/core_cmInstr.h ****   revsh r0, r0
 156:./Start/core_cmInstr.h ****   bx lr
 157:./Start/core_cmInstr.h **** }
 158:./Start/core_cmInstr.h **** #endif
 159:./Start/core_cmInstr.h **** 
 160:./Start/core_cmInstr.h **** 
 161:./Start/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 162:./Start/core_cmInstr.h **** 
 163:./Start/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 164:./Start/core_cmInstr.h **** 
 165:./Start/core_cmInstr.h ****     \param [in]    value  Value to rotate
 166:./Start/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 167:./Start/core_cmInstr.h ****     \return               Rotated value
 168:./Start/core_cmInstr.h ****  */
 169:./Start/core_cmInstr.h **** #define __ROR                             __ror
 170:./Start/core_cmInstr.h **** 
 171:./Start/core_cmInstr.h **** 
 172:./Start/core_cmInstr.h **** /** \brief  Breakpoint
 173:./Start/core_cmInstr.h **** 
 174:./Start/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 175:./Start/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 176:./Start/core_cmInstr.h **** 
 177:./Start/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 178:./Start/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 179:./Start/core_cmInstr.h ****  */
 180:./Start/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 181:./Start/core_cmInstr.h **** 
 182:./Start/core_cmInstr.h **** 
 183:./Start/core_cmInstr.h **** /** \brief  Reverse bit order of value
 184:./Start/core_cmInstr.h **** 
 185:./Start/core_cmInstr.h ****     This function reverses the bit order of the given value.
 186:./Start/core_cmInstr.h **** 
 187:./Start/core_cmInstr.h ****     \param [in]    value  Value to reverse
 188:./Start/core_cmInstr.h ****     \return               Reversed value
 189:./Start/core_cmInstr.h ****  */
 190:./Start/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 191:./Start/core_cmInstr.h ****   #define __RBIT                          __rbit
 192:./Start/core_cmInstr.h **** #else
 193:./Start/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 194:./Start/core_cmInstr.h **** {
 195:./Start/core_cmInstr.h ****   uint32_t result;
 196:./Start/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 197:./Start/core_cmInstr.h **** 
 198:./Start/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
ARM GAS  /tmp/cc2lf3as.s 			page 9


 199:./Start/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 200:./Start/core_cmInstr.h ****   {
 201:./Start/core_cmInstr.h ****     result <<= 1;
 202:./Start/core_cmInstr.h ****     result |= value & 1;
 203:./Start/core_cmInstr.h ****     s--;
 204:./Start/core_cmInstr.h ****   }
 205:./Start/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 206:./Start/core_cmInstr.h ****   return(result);
 207:./Start/core_cmInstr.h **** }
 208:./Start/core_cmInstr.h **** #endif
 209:./Start/core_cmInstr.h **** 
 210:./Start/core_cmInstr.h **** 
 211:./Start/core_cmInstr.h **** /** \brief  Count leading zeros
 212:./Start/core_cmInstr.h **** 
 213:./Start/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 214:./Start/core_cmInstr.h **** 
 215:./Start/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 216:./Start/core_cmInstr.h ****     \return             number of leading zeros in value
 217:./Start/core_cmInstr.h ****  */
 218:./Start/core_cmInstr.h **** #define __CLZ                             __clz
 219:./Start/core_cmInstr.h **** 
 220:./Start/core_cmInstr.h **** 
 221:./Start/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 222:./Start/core_cmInstr.h **** 
 223:./Start/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 224:./Start/core_cmInstr.h **** 
 225:./Start/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
 226:./Start/core_cmInstr.h **** 
 227:./Start/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 228:./Start/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 229:./Start/core_cmInstr.h ****  */
 230:./Start/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 231:./Start/core_cmInstr.h **** 
 232:./Start/core_cmInstr.h **** 
 233:./Start/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 234:./Start/core_cmInstr.h **** 
 235:./Start/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 236:./Start/core_cmInstr.h **** 
 237:./Start/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 238:./Start/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 239:./Start/core_cmInstr.h ****  */
 240:./Start/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 241:./Start/core_cmInstr.h **** 
 242:./Start/core_cmInstr.h **** 
 243:./Start/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 244:./Start/core_cmInstr.h **** 
 245:./Start/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 246:./Start/core_cmInstr.h **** 
 247:./Start/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 248:./Start/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 249:./Start/core_cmInstr.h ****  */
 250:./Start/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 251:./Start/core_cmInstr.h **** 
 252:./Start/core_cmInstr.h **** 
 253:./Start/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 254:./Start/core_cmInstr.h **** 
 255:./Start/core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
ARM GAS  /tmp/cc2lf3as.s 			page 10


 256:./Start/core_cmInstr.h **** 
 257:./Start/core_cmInstr.h ****     \param [in]  value  Value to store
 258:./Start/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 259:./Start/core_cmInstr.h ****     \return          0  Function succeeded
 260:./Start/core_cmInstr.h ****     \return          1  Function failed
 261:./Start/core_cmInstr.h ****  */
 262:./Start/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 263:./Start/core_cmInstr.h **** 
 264:./Start/core_cmInstr.h **** 
 265:./Start/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 266:./Start/core_cmInstr.h **** 
 267:./Start/core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 268:./Start/core_cmInstr.h **** 
 269:./Start/core_cmInstr.h ****     \param [in]  value  Value to store
 270:./Start/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 271:./Start/core_cmInstr.h ****     \return          0  Function succeeded
 272:./Start/core_cmInstr.h ****     \return          1  Function failed
 273:./Start/core_cmInstr.h ****  */
 274:./Start/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 275:./Start/core_cmInstr.h **** 
 276:./Start/core_cmInstr.h **** 
 277:./Start/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 278:./Start/core_cmInstr.h **** 
 279:./Start/core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 280:./Start/core_cmInstr.h **** 
 281:./Start/core_cmInstr.h ****     \param [in]  value  Value to store
 282:./Start/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 283:./Start/core_cmInstr.h ****     \return          0  Function succeeded
 284:./Start/core_cmInstr.h ****     \return          1  Function failed
 285:./Start/core_cmInstr.h ****  */
 286:./Start/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 287:./Start/core_cmInstr.h **** 
 288:./Start/core_cmInstr.h **** 
 289:./Start/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 290:./Start/core_cmInstr.h **** 
 291:./Start/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 292:./Start/core_cmInstr.h **** 
 293:./Start/core_cmInstr.h ****  */
 294:./Start/core_cmInstr.h **** #define __CLREX                           __clrex
 295:./Start/core_cmInstr.h **** 
 296:./Start/core_cmInstr.h **** 
 297:./Start/core_cmInstr.h **** /** \brief  Signed Saturate
 298:./Start/core_cmInstr.h **** 
 299:./Start/core_cmInstr.h ****     This function saturates a signed value.
 300:./Start/core_cmInstr.h **** 
 301:./Start/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 302:./Start/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 303:./Start/core_cmInstr.h ****     \return             Saturated value
 304:./Start/core_cmInstr.h ****  */
 305:./Start/core_cmInstr.h **** #define __SSAT                            __ssat
 306:./Start/core_cmInstr.h **** 
 307:./Start/core_cmInstr.h **** 
 308:./Start/core_cmInstr.h **** /** \brief  Unsigned Saturate
 309:./Start/core_cmInstr.h **** 
 310:./Start/core_cmInstr.h ****     This function saturates an unsigned value.
 311:./Start/core_cmInstr.h **** 
 312:./Start/core_cmInstr.h ****     \param [in]  value  Value to be saturated
ARM GAS  /tmp/cc2lf3as.s 			page 11


 313:./Start/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 314:./Start/core_cmInstr.h ****     \return             Saturated value
 315:./Start/core_cmInstr.h ****  */
 316:./Start/core_cmInstr.h **** #define __USAT                            __usat
 317:./Start/core_cmInstr.h **** 
 318:./Start/core_cmInstr.h **** 
 319:./Start/core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 320:./Start/core_cmInstr.h **** 
 321:./Start/core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit.
 322:./Start/core_cmInstr.h ****     The carry input is shifted in at the left end of the bitstring.
 323:./Start/core_cmInstr.h **** 
 324:./Start/core_cmInstr.h ****     \param [in]    value  Value to rotate
 325:./Start/core_cmInstr.h ****     \return               Rotated value
 326:./Start/core_cmInstr.h ****  */
 327:./Start/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 328:./Start/core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 329:./Start/core_cmInstr.h **** {
 330:./Start/core_cmInstr.h ****   rrx r0, r0
 331:./Start/core_cmInstr.h ****   bx lr
 332:./Start/core_cmInstr.h **** }
 333:./Start/core_cmInstr.h **** #endif
 334:./Start/core_cmInstr.h **** 
 335:./Start/core_cmInstr.h **** 
 336:./Start/core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 337:./Start/core_cmInstr.h **** 
 338:./Start/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 339:./Start/core_cmInstr.h **** 
 340:./Start/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 341:./Start/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 342:./Start/core_cmInstr.h ****  */
 343:./Start/core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
 344:./Start/core_cmInstr.h **** 
 345:./Start/core_cmInstr.h **** 
 346:./Start/core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 347:./Start/core_cmInstr.h **** 
 348:./Start/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 349:./Start/core_cmInstr.h **** 
 350:./Start/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 351:./Start/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 352:./Start/core_cmInstr.h ****  */
 353:./Start/core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 354:./Start/core_cmInstr.h **** 
 355:./Start/core_cmInstr.h **** 
 356:./Start/core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
 357:./Start/core_cmInstr.h **** 
 358:./Start/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 359:./Start/core_cmInstr.h **** 
 360:./Start/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 361:./Start/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 362:./Start/core_cmInstr.h ****  */
 363:./Start/core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 364:./Start/core_cmInstr.h **** 
 365:./Start/core_cmInstr.h **** 
 366:./Start/core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 367:./Start/core_cmInstr.h **** 
 368:./Start/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 369:./Start/core_cmInstr.h **** 
ARM GAS  /tmp/cc2lf3as.s 			page 12


 370:./Start/core_cmInstr.h ****     \param [in]  value  Value to store
 371:./Start/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 372:./Start/core_cmInstr.h ****  */
 373:./Start/core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 374:./Start/core_cmInstr.h **** 
 375:./Start/core_cmInstr.h **** 
 376:./Start/core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 377:./Start/core_cmInstr.h **** 
 378:./Start/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 379:./Start/core_cmInstr.h **** 
 380:./Start/core_cmInstr.h ****     \param [in]  value  Value to store
 381:./Start/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 382:./Start/core_cmInstr.h ****  */
 383:./Start/core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
 384:./Start/core_cmInstr.h **** 
 385:./Start/core_cmInstr.h **** 
 386:./Start/core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 387:./Start/core_cmInstr.h **** 
 388:./Start/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 389:./Start/core_cmInstr.h **** 
 390:./Start/core_cmInstr.h ****     \param [in]  value  Value to store
 391:./Start/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 392:./Start/core_cmInstr.h ****  */
 393:./Start/core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 394:./Start/core_cmInstr.h **** 
 395:./Start/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 396:./Start/core_cmInstr.h **** 
 397:./Start/core_cmInstr.h **** 
 398:./Start/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 399:./Start/core_cmInstr.h **** /* GNU gcc specific functions */
 400:./Start/core_cmInstr.h **** 
 401:./Start/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 402:./Start/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 403:./Start/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 404:./Start/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 405:./Start/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 406:./Start/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 407:./Start/core_cmInstr.h **** #else
 408:./Start/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 409:./Start/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 410:./Start/core_cmInstr.h **** #endif
 411:./Start/core_cmInstr.h **** 
 412:./Start/core_cmInstr.h **** /** \brief  No Operation
 413:./Start/core_cmInstr.h **** 
 414:./Start/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 415:./Start/core_cmInstr.h ****  */
 416:./Start/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 417:./Start/core_cmInstr.h **** {
 418:./Start/core_cmInstr.h ****   __ASM volatile ("nop");
 419:./Start/core_cmInstr.h **** }
 420:./Start/core_cmInstr.h **** 
 421:./Start/core_cmInstr.h **** 
 422:./Start/core_cmInstr.h **** /** \brief  Wait For Interrupt
 423:./Start/core_cmInstr.h **** 
 424:./Start/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 425:./Start/core_cmInstr.h ****     until one of a number of events occurs.
 426:./Start/core_cmInstr.h ****  */
ARM GAS  /tmp/cc2lf3as.s 			page 13


 427:./Start/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 428:./Start/core_cmInstr.h **** {
 429:./Start/core_cmInstr.h ****   __ASM volatile ("wfi");
 430:./Start/core_cmInstr.h **** }
 431:./Start/core_cmInstr.h **** 
 432:./Start/core_cmInstr.h **** 
 433:./Start/core_cmInstr.h **** /** \brief  Wait For Event
 434:./Start/core_cmInstr.h **** 
 435:./Start/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 436:./Start/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 437:./Start/core_cmInstr.h ****  */
 438:./Start/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 439:./Start/core_cmInstr.h **** {
 440:./Start/core_cmInstr.h ****   __ASM volatile ("wfe");
 441:./Start/core_cmInstr.h **** }
 442:./Start/core_cmInstr.h **** 
 443:./Start/core_cmInstr.h **** 
 444:./Start/core_cmInstr.h **** /** \brief  Send Event
 445:./Start/core_cmInstr.h **** 
 446:./Start/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 447:./Start/core_cmInstr.h ****  */
 448:./Start/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 449:./Start/core_cmInstr.h **** {
 450:./Start/core_cmInstr.h ****   __ASM volatile ("sev");
 451:./Start/core_cmInstr.h **** }
 452:./Start/core_cmInstr.h **** 
 453:./Start/core_cmInstr.h **** 
 454:./Start/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 455:./Start/core_cmInstr.h **** 
 456:./Start/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 457:./Start/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 458:./Start/core_cmInstr.h ****     memory, after the instruction has been completed.
 459:./Start/core_cmInstr.h ****  */
 460:./Start/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 461:./Start/core_cmInstr.h **** {
 462:./Start/core_cmInstr.h ****   __ASM volatile ("isb 0xF":::"memory");
 463:./Start/core_cmInstr.h **** }
 464:./Start/core_cmInstr.h **** 
 465:./Start/core_cmInstr.h **** 
 466:./Start/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 467:./Start/core_cmInstr.h **** 
 468:./Start/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 469:./Start/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 470:./Start/core_cmInstr.h ****  */
 471:./Start/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 472:./Start/core_cmInstr.h **** {
 473:./Start/core_cmInstr.h ****   __ASM volatile ("dsb 0xF":::"memory");
 474:./Start/core_cmInstr.h **** }
 475:./Start/core_cmInstr.h **** 
 476:./Start/core_cmInstr.h **** 
 477:./Start/core_cmInstr.h **** /** \brief  Data Memory Barrier
 478:./Start/core_cmInstr.h **** 
 479:./Start/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 480:./Start/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 481:./Start/core_cmInstr.h ****  */
 482:./Start/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 483:./Start/core_cmInstr.h **** {
ARM GAS  /tmp/cc2lf3as.s 			page 14


 484:./Start/core_cmInstr.h ****   __ASM volatile ("dmb 0xF":::"memory");
 485:./Start/core_cmInstr.h **** }
 486:./Start/core_cmInstr.h **** 
 487:./Start/core_cmInstr.h **** 
 488:./Start/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 489:./Start/core_cmInstr.h **** 
 490:./Start/core_cmInstr.h ****     This function reverses the byte order in integer value.
 491:./Start/core_cmInstr.h **** 
 492:./Start/core_cmInstr.h ****     \param [in]    value  Value to reverse
 493:./Start/core_cmInstr.h ****     \return               Reversed value
 494:./Start/core_cmInstr.h ****  */
 495:./Start/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 496:./Start/core_cmInstr.h **** {
 497:./Start/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 498:./Start/core_cmInstr.h ****   return __builtin_bswap32(value);
  97              		.loc 2 498 10
  98 0070 D7F88030 		ldr	r3, [r7, #128]
  99 0074 1BBA     		rev	r3, r3
 100              	.LBE231:
 101              	.LBE230:
 119:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 102              		.loc 1 119 45
 103 0076 BB62     		str	r3, [r7, #40]
 120:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 104              		.loc 1 120 12
 105 0078 D7F89030 		ldr	r3, [r7, #144]
 106 007c 0433     		adds	r3, r3, #4
 107 007e C7F89030 		str	r3, [r7, #144]
 121:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 108              		.loc 1 121 54
 109 0082 D7F89030 		ldr	r3, [r7, #144]
 121:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 110              		.loc 1 121 47
 111 0086 1B68     		ldr	r3, [r3]
 112 0088 C7F88430 		str	r3, [r7, #132]
 113              	.LBB232:
 114              	.LBB233:
 115              		.loc 2 498 10
 116 008c D7F88430 		ldr	r3, [r7, #132]
 117 0090 1BBA     		rev	r3, r3
 118              	.LBE233:
 119              	.LBE232:
 121:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 120              		.loc 1 121 45
 121 0092 FB62     		str	r3, [r7, #44]
 122:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 122              		.loc 1 122 12
 123 0094 D7F89030 		ldr	r3, [r7, #144]
 124 0098 0433     		adds	r3, r3, #4
 125 009a C7F89030 		str	r3, [r7, #144]
 123:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 126              		.loc 1 123 54
 127 009e D7F89030 		ldr	r3, [r7, #144]
 123:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 128              		.loc 1 123 47
 129 00a2 1B68     		ldr	r3, [r3]
 130 00a4 C7F88830 		str	r3, [r7, #136]
ARM GAS  /tmp/cc2lf3as.s 			page 15


 131              	.LBB234:
 132              	.LBB235:
 133              		.loc 2 498 10
 134 00a8 D7F88830 		ldr	r3, [r7, #136]
 135 00ac 1BBA     		rev	r3, r3
 136              	.LBE235:
 137              	.LBE234:
 123:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 138              		.loc 1 123 45
 139 00ae 3B63     		str	r3, [r7, #48]
 124:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 140              		.loc 1 124 12
 141 00b0 D7F89030 		ldr	r3, [r7, #144]
 142 00b4 0433     		adds	r3, r3, #4
 143 00b6 C7F89030 		str	r3, [r7, #144]
 125:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 144              		.loc 1 125 54
 145 00ba D7F89030 		ldr	r3, [r7, #144]
 125:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 146              		.loc 1 125 47
 147 00be 1B68     		ldr	r3, [r3]
 148 00c0 C7F88C30 		str	r3, [r7, #140]
 149              	.LBB236:
 150              	.LBB237:
 151              		.loc 2 498 10
 152 00c4 D7F88C30 		ldr	r3, [r7, #140]
 153 00c8 1BBA     		rev	r3, r3
 154              	.LBE237:
 155              	.LBE236:
 125:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 156              		.loc 1 125 45
 157 00ca 7B63     		str	r3, [r7, #52]
 126:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 192:
 158              		.loc 1 126 5
 159 00cc A6E0     		b	.L10
 160              	.L5:
 128:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 161              		.loc 1 128 42
 162 00ce 4FF48073 		mov	r3, #256
 163 00d2 7B64     		str	r3, [r7, #68]
 129:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 164              		.loc 1 129 54
 165 00d4 D7F89030 		ldr	r3, [r7, #144]
 129:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 166              		.loc 1 129 47
 167 00d8 1B68     		ldr	r3, [r3]
 168 00da BB66     		str	r3, [r7, #104]
 169              	.LBB238:
 170              	.LBB239:
 171              		.loc 2 498 10
 172 00dc BB6E     		ldr	r3, [r7, #104]
 173 00de 1BBA     		rev	r3, r3
 174              	.LBE239:
 175              	.LBE238:
 129:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 176              		.loc 1 129 45
 177 00e0 3B62     		str	r3, [r7, #32]
ARM GAS  /tmp/cc2lf3as.s 			page 16


 130:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 178              		.loc 1 130 12
 179 00e2 D7F89030 		ldr	r3, [r7, #144]
 180 00e6 0433     		adds	r3, r3, #4
 181 00e8 C7F89030 		str	r3, [r7, #144]
 131:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 182              		.loc 1 131 54
 183 00ec D7F89030 		ldr	r3, [r7, #144]
 131:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 184              		.loc 1 131 47
 185 00f0 1B68     		ldr	r3, [r3]
 186 00f2 FB66     		str	r3, [r7, #108]
 187              	.LBB240:
 188              	.LBB241:
 189              		.loc 2 498 10
 190 00f4 FB6E     		ldr	r3, [r7, #108]
 191 00f6 1BBA     		rev	r3, r3
 192              	.LBE241:
 193              	.LBE240:
 131:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 194              		.loc 1 131 45
 195 00f8 7B62     		str	r3, [r7, #36]
 132:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 196              		.loc 1 132 12
 197 00fa D7F89030 		ldr	r3, [r7, #144]
 198 00fe 0433     		adds	r3, r3, #4
 199 0100 C7F89030 		str	r3, [r7, #144]
 133:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 200              		.loc 1 133 54
 201 0104 D7F89030 		ldr	r3, [r7, #144]
 133:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 202              		.loc 1 133 47
 203 0108 1B68     		ldr	r3, [r3]
 204 010a 3B67     		str	r3, [r7, #112]
 205              	.LBB242:
 206              	.LBB243:
 207              		.loc 2 498 10
 208 010c 3B6F     		ldr	r3, [r7, #112]
 209 010e 1BBA     		rev	r3, r3
 210              	.LBE243:
 211              	.LBE242:
 133:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 212              		.loc 1 133 45
 213 0110 BB62     		str	r3, [r7, #40]
 134:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 214              		.loc 1 134 12
 215 0112 D7F89030 		ldr	r3, [r7, #144]
 216 0116 0433     		adds	r3, r3, #4
 217 0118 C7F89030 		str	r3, [r7, #144]
 135:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 218              		.loc 1 135 54
 219 011c D7F89030 		ldr	r3, [r7, #144]
 135:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 220              		.loc 1 135 47
 221 0120 1B68     		ldr	r3, [r3]
 222 0122 7B67     		str	r3, [r7, #116]
 223              	.LBB244:
ARM GAS  /tmp/cc2lf3as.s 			page 17


 224              	.LBB245:
 225              		.loc 2 498 10
 226 0124 7B6F     		ldr	r3, [r7, #116]
 227 0126 1BBA     		rev	r3, r3
 228              	.LBE245:
 229              	.LBE244:
 135:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 230              		.loc 1 135 45
 231 0128 FB62     		str	r3, [r7, #44]
 136:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 232              		.loc 1 136 12
 233 012a D7F89030 		ldr	r3, [r7, #144]
 234 012e 0433     		adds	r3, r3, #4
 235 0130 C7F89030 		str	r3, [r7, #144]
 137:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 236              		.loc 1 137 54
 237 0134 D7F89030 		ldr	r3, [r7, #144]
 137:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 238              		.loc 1 137 47
 239 0138 1B68     		ldr	r3, [r3]
 240 013a BB67     		str	r3, [r7, #120]
 241              	.LBB246:
 242              	.LBB247:
 243              		.loc 2 498 10
 244 013c BB6F     		ldr	r3, [r7, #120]
 245 013e 1BBA     		rev	r3, r3
 246              	.LBE247:
 247              	.LBE246:
 137:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 248              		.loc 1 137 45
 249 0140 3B63     		str	r3, [r7, #48]
 138:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 250              		.loc 1 138 12
 251 0142 D7F89030 		ldr	r3, [r7, #144]
 252 0146 0433     		adds	r3, r3, #4
 253 0148 C7F89030 		str	r3, [r7, #144]
 139:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 254              		.loc 1 139 54
 255 014c D7F89030 		ldr	r3, [r7, #144]
 139:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 256              		.loc 1 139 47
 257 0150 1B68     		ldr	r3, [r3]
 258 0152 FB67     		str	r3, [r7, #124]
 259              	.LBB248:
 260              	.LBB249:
 261              		.loc 2 498 10
 262 0154 FB6F     		ldr	r3, [r7, #124]
 263 0156 1BBA     		rev	r3, r3
 264              	.LBE249:
 265              	.LBE248:
 139:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 266              		.loc 1 139 45
 267 0158 7B63     		str	r3, [r7, #52]
 140:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 256:
 268              		.loc 1 140 5
 269 015a 5FE0     		b	.L10
 270              	.L2:
ARM GAS  /tmp/cc2lf3as.s 			page 18


 142:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 271              		.loc 1 142 42
 272 015c 4FF40073 		mov	r3, #512
 273 0160 7B64     		str	r3, [r7, #68]
 143:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 274              		.loc 1 143 54
 275 0162 D7F89030 		ldr	r3, [r7, #144]
 143:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 276              		.loc 1 143 47
 277 0166 1B68     		ldr	r3, [r3]
 278 0168 BB64     		str	r3, [r7, #72]
 279              	.LBB250:
 280              	.LBB251:
 281              		.loc 2 498 10
 282 016a BB6C     		ldr	r3, [r7, #72]
 283 016c 1BBA     		rev	r3, r3
 284              	.LBE251:
 285              	.LBE250:
 143:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 286              		.loc 1 143 45
 287 016e BB61     		str	r3, [r7, #24]
 144:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 288              		.loc 1 144 12
 289 0170 D7F89030 		ldr	r3, [r7, #144]
 290 0174 0433     		adds	r3, r3, #4
 291 0176 C7F89030 		str	r3, [r7, #144]
 145:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 292              		.loc 1 145 54
 293 017a D7F89030 		ldr	r3, [r7, #144]
 145:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 294              		.loc 1 145 47
 295 017e 1B68     		ldr	r3, [r3]
 296 0180 FB64     		str	r3, [r7, #76]
 297              	.LBB252:
 298              	.LBB253:
 299              		.loc 2 498 10
 300 0182 FB6C     		ldr	r3, [r7, #76]
 301 0184 1BBA     		rev	r3, r3
 302              	.LBE253:
 303              	.LBE252:
 145:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 304              		.loc 1 145 45
 305 0186 FB61     		str	r3, [r7, #28]
 146:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 306              		.loc 1 146 12
 307 0188 D7F89030 		ldr	r3, [r7, #144]
 308 018c 0433     		adds	r3, r3, #4
 309 018e C7F89030 		str	r3, [r7, #144]
 147:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 310              		.loc 1 147 54
 311 0192 D7F89030 		ldr	r3, [r7, #144]
 147:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 312              		.loc 1 147 47
 313 0196 1B68     		ldr	r3, [r3]
 314 0198 3B65     		str	r3, [r7, #80]
 315              	.LBB254:
 316              	.LBB255:
ARM GAS  /tmp/cc2lf3as.s 			page 19


 317              		.loc 2 498 10
 318 019a 3B6D     		ldr	r3, [r7, #80]
 319 019c 1BBA     		rev	r3, r3
 320              	.LBE255:
 321              	.LBE254:
 147:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 322              		.loc 1 147 45
 323 019e 3B62     		str	r3, [r7, #32]
 148:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 324              		.loc 1 148 12
 325 01a0 D7F89030 		ldr	r3, [r7, #144]
 326 01a4 0433     		adds	r3, r3, #4
 327 01a6 C7F89030 		str	r3, [r7, #144]
 149:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 328              		.loc 1 149 54
 329 01aa D7F89030 		ldr	r3, [r7, #144]
 149:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 330              		.loc 1 149 47
 331 01ae 1B68     		ldr	r3, [r3]
 332 01b0 7B65     		str	r3, [r7, #84]
 333              	.LBB256:
 334              	.LBB257:
 335              		.loc 2 498 10
 336 01b2 7B6D     		ldr	r3, [r7, #84]
 337 01b4 1BBA     		rev	r3, r3
 338              	.LBE257:
 339              	.LBE256:
 149:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 340              		.loc 1 149 45
 341 01b6 7B62     		str	r3, [r7, #36]
 150:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 342              		.loc 1 150 12
 343 01b8 D7F89030 		ldr	r3, [r7, #144]
 344 01bc 0433     		adds	r3, r3, #4
 345 01be C7F89030 		str	r3, [r7, #144]
 151:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 346              		.loc 1 151 54
 347 01c2 D7F89030 		ldr	r3, [r7, #144]
 151:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 348              		.loc 1 151 47
 349 01c6 1B68     		ldr	r3, [r3]
 350 01c8 BB65     		str	r3, [r7, #88]
 351              	.LBB258:
 352              	.LBB259:
 353              		.loc 2 498 10
 354 01ca BB6D     		ldr	r3, [r7, #88]
 355 01cc 1BBA     		rev	r3, r3
 356              	.LBE259:
 357              	.LBE258:
 151:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 358              		.loc 1 151 45
 359 01ce BB62     		str	r3, [r7, #40]
 152:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 360              		.loc 1 152 12
 361 01d0 D7F89030 		ldr	r3, [r7, #144]
 362 01d4 0433     		adds	r3, r3, #4
 363 01d6 C7F89030 		str	r3, [r7, #144]
ARM GAS  /tmp/cc2lf3as.s 			page 20


 153:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 364              		.loc 1 153 54
 365 01da D7F89030 		ldr	r3, [r7, #144]
 153:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 366              		.loc 1 153 47
 367 01de 1B68     		ldr	r3, [r3]
 368 01e0 FB65     		str	r3, [r7, #92]
 369              	.LBB260:
 370              	.LBB261:
 371              		.loc 2 498 10
 372 01e2 FB6D     		ldr	r3, [r7, #92]
 373 01e4 1BBA     		rev	r3, r3
 374              	.LBE261:
 375              	.LBE260:
 153:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 376              		.loc 1 153 45
 377 01e6 FB62     		str	r3, [r7, #44]
 154:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 378              		.loc 1 154 12
 379 01e8 D7F89030 		ldr	r3, [r7, #144]
 380 01ec 0433     		adds	r3, r3, #4
 381 01ee C7F89030 		str	r3, [r7, #144]
 155:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 382              		.loc 1 155 54
 383 01f2 D7F89030 		ldr	r3, [r7, #144]
 155:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 384              		.loc 1 155 47
 385 01f6 1B68     		ldr	r3, [r3]
 386 01f8 3B66     		str	r3, [r7, #96]
 387              	.LBB262:
 388              	.LBB263:
 389              		.loc 2 498 10
 390 01fa 3B6E     		ldr	r3, [r7, #96]
 391 01fc 1BBA     		rev	r3, r3
 392              	.LBE263:
 393              	.LBE262:
 155:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 394              		.loc 1 155 45
 395 01fe 3B63     		str	r3, [r7, #48]
 156:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 396              		.loc 1 156 12
 397 0200 D7F89030 		ldr	r3, [r7, #144]
 398 0204 0433     		adds	r3, r3, #4
 399 0206 C7F89030 		str	r3, [r7, #144]
 157:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 400              		.loc 1 157 54
 401 020a D7F89030 		ldr	r3, [r7, #144]
 157:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 402              		.loc 1 157 47
 403 020e 1B68     		ldr	r3, [r3]
 404 0210 7B66     		str	r3, [r7, #100]
 405              	.LBB264:
 406              	.LBB265:
 407              		.loc 2 498 10
 408 0212 7B6E     		ldr	r3, [r7, #100]
 409 0214 1BBA     		rev	r3, r3
 410              	.LBE265:
ARM GAS  /tmp/cc2lf3as.s 			page 21


 411              	.LBE264:
 157:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 412              		.loc 1 157 45
 413 0216 7B63     		str	r3, [r7, #52]
 158:./Lib/Src/stm32f4xx_cryp_aes.c ****     default:
 414              		.loc 1 158 5
 415 0218 00E0     		b	.L10
 416              	.L40:
 417              		.loc 1 160 5
 418 021a 00BF     		nop
 419              	.L10:
 161:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 162:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 163:./Lib/Src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 164:./Lib/Src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 420              		.loc 1 164 5
 421 021c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 422 021e 002B     		cmp	r3, #0
 423 0220 30D1     		bne	.L25
 165:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 166:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 167:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 424              		.loc 1 167 5
 425 0222 FFF7FEFF 		bl	CRYP_FIFOFlush
 168:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 169:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 170:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 426              		.loc 1 170 41
 427 0226 0423     		movs	r3, #4
 428 0228 BB63     		str	r3, [r7, #56]
 171:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
 429              		.loc 1 171 42
 430 022a 3823     		movs	r3, #56
 431 022c FB63     		str	r3, [r7, #60]
 172:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
 432              		.loc 1 172 42
 433 022e 0023     		movs	r3, #0
 434 0230 3B64     		str	r3, [r7, #64]
 173:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 435              		.loc 1 173 5
 436 0232 07F13803 		add	r3, r7, #56
 437 0236 1846     		mov	r0, r3
 438 0238 FFF7FEFF 		bl	CRYP_Init
 174:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 175:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 176:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 439              		.loc 1 176 5
 440 023c 07F11803 		add	r3, r7, #24
 441 0240 1846     		mov	r0, r3
 442 0242 FFF7FEFF 		bl	CRYP_KeyInit
 177:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 178:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 179:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 443              		.loc 1 179 5
 444 0246 0120     		movs	r0, #1
 445 0248 FFF7FEFF 		bl	CRYP_Cmd
 446              	.L27:
ARM GAS  /tmp/cc2lf3as.s 			page 22


 180:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 181:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* wait until the Busy flag is RESET */
 182:./Lib/Src/stm32f4xx_cryp_aes.c ****     do
 183:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 184:./Lib/Src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 447              		.loc 1 184 20 discriminator 2
 448 024c 1020     		movs	r0, #16
 449 024e FFF7FEFF 		bl	CRYP_GetFlagStatus
 450 0252 0346     		mov	r3, r0
 451              		.loc 1 184 18 discriminator 2
 452 0254 C7F89430 		str	r3, [r7, #148]
 185:./Lib/Src/stm32f4xx_cryp_aes.c ****       counter++;
 453              		.loc 1 185 14 discriminator 2
 454 0258 7B69     		ldr	r3, [r7, #20]
 455 025a 0133     		adds	r3, r3, #1
 456 025c 7B61     		str	r3, [r7, #20]
 186:./Lib/Src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 457              		.loc 1 186 22 discriminator 2
 458 025e 7B69     		ldr	r3, [r7, #20]
 459              		.loc 1 186 42 discriminator 2
 460 0260 B3F5803F 		cmp	r3, #65536
 461 0264 03D0     		beq	.L26
 462              		.loc 1 186 42 is_stmt 0 discriminator 1
 463 0266 D7F89430 		ldr	r3, [r7, #148]
 464 026a 002B     		cmp	r3, #0
 465 026c EED1     		bne	.L27
 466              	.L26:
 187:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 188:./Lib/Src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 467              		.loc 1 188 8 is_stmt 1
 468 026e D7F89430 		ldr	r3, [r7, #148]
 469 0272 002B     		cmp	r3, #0
 470 0274 03D0     		beq	.L28
 189:./Lib/Src/stm32f4xx_cryp_aes.c ****    {
 190:./Lib/Src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 471              		.loc 1 190 15
 472 0276 0023     		movs	r3, #0
 473 0278 87F8A730 		strb	r3, [r7, #167]
 474 027c 09E0     		b	.L29
 475              	.L28:
 191:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 192:./Lib/Src/stm32f4xx_cryp_aes.c ****     else
 193:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 194:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Crypto Init for decryption process */  
 195:./Lib/Src/stm32f4xx_cryp_aes.c ****       AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 476              		.loc 1 195 43
 477 027e 0423     		movs	r3, #4
 478 0280 BB63     		str	r3, [r7, #56]
 479 0282 06E0     		b	.L29
 480              	.L25:
 196:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 197:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 198:./Lib/Src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 199:./Lib/Src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 200:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 201:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 202:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
ARM GAS  /tmp/cc2lf3as.s 			page 23


 481              		.loc 1 202 5
 482 0284 07F11803 		add	r3, r7, #24
 483 0288 1846     		mov	r0, r3
 484 028a FFF7FEFF 		bl	CRYP_KeyInit
 203:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 204:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 205:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 485              		.loc 1 205 42
 486 028e 0023     		movs	r3, #0
 487 0290 BB63     		str	r3, [r7, #56]
 488              	.L29:
 206:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 207:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 208:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_ECB;
 489              		.loc 1 208 40
 490 0292 2023     		movs	r3, #32
 491 0294 FB63     		str	r3, [r7, #60]
 209:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 492              		.loc 1 209 40
 493 0296 8023     		movs	r3, #128
 494 0298 3B64     		str	r3, [r7, #64]
 210:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 495              		.loc 1 210 3
 496 029a 07F13803 		add	r3, r7, #56
 497 029e 1846     		mov	r0, r3
 498 02a0 FFF7FEFF 		bl	CRYP_Init
 211:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 212:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 213:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 499              		.loc 1 213 3
 500 02a4 FFF7FEFF 		bl	CRYP_FIFOFlush
 214:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 215:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 216:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 501              		.loc 1 216 3
 502 02a8 0120     		movs	r0, #1
 503 02aa FFF7FEFF 		bl	CRYP_Cmd
 217:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 218:./Lib/Src/stm32f4xx_cryp_aes.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 504              		.loc 1 218 6
 505 02ae FFF7FEFF 		bl	CRYP_GetCmdStatus
 506 02b2 0346     		mov	r3, r0
 507              		.loc 1 218 5
 508 02b4 002B     		cmp	r3, #0
 509 02b6 01D1     		bne	.L30
 219:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 220:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 221:./Lib/Src/stm32f4xx_cryp_aes.c ****        the CRYP peripheral (please check the device sales type. */
 222:./Lib/Src/stm32f4xx_cryp_aes.c ****     return(ERROR);
 510              		.loc 1 222 11
 511 02b8 0023     		movs	r3, #0
 512 02ba 8BE0     		b	.L39
 513              	.L30:
 223:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 224:./Lib/Src/stm32f4xx_cryp_aes.c ****   
 225:./Lib/Src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 514              		.loc 1 225 8
ARM GAS  /tmp/cc2lf3as.s 			page 24


 515 02bc 0023     		movs	r3, #0
 516 02be C7F89830 		str	r3, [r7, #152]
 517              		.loc 1 225 3
 518 02c2 77E0     		b	.L32
 519              	.L38:
 226:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 227:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 228:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 229:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 520              		.loc 1 229 18
 521 02c4 D7F8A030 		ldr	r3, [r7, #160]
 522              		.loc 1 229 5
 523 02c8 1B68     		ldr	r3, [r3]
 524 02ca 1846     		mov	r0, r3
 525 02cc FFF7FEFF 		bl	CRYP_DataIn
 230:./Lib/Src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 526              		.loc 1 230 14
 527 02d0 D7F8A030 		ldr	r3, [r7, #160]
 528 02d4 0433     		adds	r3, r3, #4
 529 02d6 C7F8A030 		str	r3, [r7, #160]
 231:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 530              		.loc 1 231 18
 531 02da D7F8A030 		ldr	r3, [r7, #160]
 532              		.loc 1 231 5
 533 02de 1B68     		ldr	r3, [r3]
 534 02e0 1846     		mov	r0, r3
 535 02e2 FFF7FEFF 		bl	CRYP_DataIn
 232:./Lib/Src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 536              		.loc 1 232 14
 537 02e6 D7F8A030 		ldr	r3, [r7, #160]
 538 02ea 0433     		adds	r3, r3, #4
 539 02ec C7F8A030 		str	r3, [r7, #160]
 233:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 540              		.loc 1 233 18
 541 02f0 D7F8A030 		ldr	r3, [r7, #160]
 542              		.loc 1 233 5
 543 02f4 1B68     		ldr	r3, [r3]
 544 02f6 1846     		mov	r0, r3
 545 02f8 FFF7FEFF 		bl	CRYP_DataIn
 234:./Lib/Src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 546              		.loc 1 234 14
 547 02fc D7F8A030 		ldr	r3, [r7, #160]
 548 0300 0433     		adds	r3, r3, #4
 549 0302 C7F8A030 		str	r3, [r7, #160]
 235:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 550              		.loc 1 235 18
 551 0306 D7F8A030 		ldr	r3, [r7, #160]
 552              		.loc 1 235 5
 553 030a 1B68     		ldr	r3, [r3]
 554 030c 1846     		mov	r0, r3
 555 030e FFF7FEFF 		bl	CRYP_DataIn
 236:./Lib/Src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 556              		.loc 1 236 14
 557 0312 D7F8A030 		ldr	r3, [r7, #160]
 558 0316 0433     		adds	r3, r3, #4
 559 0318 C7F8A030 		str	r3, [r7, #160]
 237:./Lib/Src/stm32f4xx_cryp_aes.c **** 
ARM GAS  /tmp/cc2lf3as.s 			page 25


 238:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 239:./Lib/Src/stm32f4xx_cryp_aes.c ****     counter = 0;
 560              		.loc 1 239 13
 561 031c 0023     		movs	r3, #0
 562 031e 7B61     		str	r3, [r7, #20]
 563              	.L34:
 240:./Lib/Src/stm32f4xx_cryp_aes.c ****     do
 241:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 242:./Lib/Src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 564              		.loc 1 242 20 discriminator 2
 565 0320 1020     		movs	r0, #16
 566 0322 FFF7FEFF 		bl	CRYP_GetFlagStatus
 567 0326 0346     		mov	r3, r0
 568              		.loc 1 242 18 discriminator 2
 569 0328 C7F89430 		str	r3, [r7, #148]
 243:./Lib/Src/stm32f4xx_cryp_aes.c ****       counter++;
 570              		.loc 1 243 14 discriminator 2
 571 032c 7B69     		ldr	r3, [r7, #20]
 572 032e 0133     		adds	r3, r3, #1
 573 0330 7B61     		str	r3, [r7, #20]
 244:./Lib/Src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 574              		.loc 1 244 22 discriminator 2
 575 0332 7B69     		ldr	r3, [r7, #20]
 576              		.loc 1 244 42 discriminator 2
 577 0334 B3F5803F 		cmp	r3, #65536
 578 0338 03D0     		beq	.L33
 579              		.loc 1 244 42 is_stmt 0 discriminator 1
 580 033a D7F89430 		ldr	r3, [r7, #148]
 581 033e 002B     		cmp	r3, #0
 582 0340 EED1     		bne	.L34
 583              	.L33:
 245:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 246:./Lib/Src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 584              		.loc 1 246 8 is_stmt 1
 585 0342 D7F89430 		ldr	r3, [r7, #148]
 586 0346 002B     		cmp	r3, #0
 587 0348 03D0     		beq	.L35
 247:./Lib/Src/stm32f4xx_cryp_aes.c ****    {
 248:./Lib/Src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 588              		.loc 1 248 15
 589 034a 0023     		movs	r3, #0
 590 034c 87F8A730 		strb	r3, [r7, #167]
 591 0350 2BE0     		b	.L36
 592              	.L35:
 249:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 250:./Lib/Src/stm32f4xx_cryp_aes.c ****     else
 251:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 252:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 253:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 254:./Lib/Src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 593              		.loc 1 254 8
 594 0352 D7F89C40 		ldr	r4, [r7, #156]
 595              		.loc 1 254 34
 596 0356 FFF7FEFF 		bl	CRYP_DataOut
 597 035a 0346     		mov	r3, r0
 598              		.loc 1 254 32
 599 035c 2360     		str	r3, [r4]
ARM GAS  /tmp/cc2lf3as.s 			page 26


 255:./Lib/Src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 600              		.loc 1 255 17
 601 035e D7F89C30 		ldr	r3, [r7, #156]
 602 0362 0433     		adds	r3, r3, #4
 603 0364 C7F89C30 		str	r3, [r7, #156]
 256:./Lib/Src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 604              		.loc 1 256 8
 605 0368 D7F89C40 		ldr	r4, [r7, #156]
 606              		.loc 1 256 34
 607 036c FFF7FEFF 		bl	CRYP_DataOut
 608 0370 0346     		mov	r3, r0
 609              		.loc 1 256 32
 610 0372 2360     		str	r3, [r4]
 257:./Lib/Src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 611              		.loc 1 257 17
 612 0374 D7F89C30 		ldr	r3, [r7, #156]
 613 0378 0433     		adds	r3, r3, #4
 614 037a C7F89C30 		str	r3, [r7, #156]
 258:./Lib/Src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 615              		.loc 1 258 8
 616 037e D7F89C40 		ldr	r4, [r7, #156]
 617              		.loc 1 258 34
 618 0382 FFF7FEFF 		bl	CRYP_DataOut
 619 0386 0346     		mov	r3, r0
 620              		.loc 1 258 32
 621 0388 2360     		str	r3, [r4]
 259:./Lib/Src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 622              		.loc 1 259 17
 623 038a D7F89C30 		ldr	r3, [r7, #156]
 624 038e 0433     		adds	r3, r3, #4
 625 0390 C7F89C30 		str	r3, [r7, #156]
 260:./Lib/Src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut(); 
 626              		.loc 1 260 8
 627 0394 D7F89C40 		ldr	r4, [r7, #156]
 628              		.loc 1 260 34
 629 0398 FFF7FEFF 		bl	CRYP_DataOut
 630 039c 0346     		mov	r3, r0
 631              		.loc 1 260 32
 632 039e 2360     		str	r3, [r4]
 261:./Lib/Src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 633              		.loc 1 261 17
 634 03a0 D7F89C30 		ldr	r3, [r7, #156]
 635 03a4 0433     		adds	r3, r3, #4
 636 03a6 C7F89C30 		str	r3, [r7, #156]
 637              	.L36:
 225:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 638              		.loc 1 225 49 discriminator 2
 639 03aa D7F89830 		ldr	r3, [r7, #152]
 640 03ae 1033     		adds	r3, r3, #16
 641 03b0 C7F89830 		str	r3, [r7, #152]
 642              	.L32:
 225:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 643              		.loc 1 225 25 discriminator 1
 644 03b4 D7F89820 		ldr	r2, [r7, #152]
 645 03b8 D7F8B830 		ldr	r3, [r7, #184]
 646 03bc 9A42     		cmp	r2, r3
 647 03be 04D2     		bcs	.L37
ARM GAS  /tmp/cc2lf3as.s 			page 27


 225:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 648              		.loc 1 225 25 is_stmt 0 discriminator 3
 649 03c0 97F8A730 		ldrb	r3, [r7, #167]	@ zero_extendqisi2
 650 03c4 002B     		cmp	r3, #0
 651 03c6 7FF47DAF 		bne	.L38
 652              	.L37:
 262:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 263:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 264:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 265:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 266:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 653              		.loc 1 266 3 is_stmt 1
 654 03ca 0020     		movs	r0, #0
 655 03cc FFF7FEFF 		bl	CRYP_Cmd
 267:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 268:./Lib/Src/stm32f4xx_cryp_aes.c ****   return status; 
 656              		.loc 1 268 10
 657 03d0 97F8A730 		ldrb	r3, [r7, #167]	@ zero_extendqisi2
 658              	.L39:
 269:./Lib/Src/stm32f4xx_cryp_aes.c **** }
 659              		.loc 1 269 1 discriminator 1
 660 03d4 1846     		mov	r0, r3
 661 03d6 AC37     		adds	r7, r7, #172
 662              		.cfi_def_cfa_offset 12
 663 03d8 BD46     		mov	sp, r7
 664              		.cfi_def_cfa_register 13
 665              		@ sp needed
 666 03da 90BD     		pop	{r4, r7, pc}
 667              		.cfi_endproc
 668              	.LFE123:
 670              		.section	.text.CRYP_AES_CBC,"ax",%progbits
 671              		.align	1
 672              		.global	CRYP_AES_CBC
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 677              	CRYP_AES_CBC:
 678              	.LFB124:
 270:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 271:./Lib/Src/stm32f4xx_cryp_aes.c **** /**
 272:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CBC Mode
 273:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 274:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
 275:./Lib/Src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 276:./Lib/Src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 277:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 278:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 279:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 280:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 281:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 282:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 283:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 284:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 285:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 286:./Lib/Src/stm32f4xx_cryp_aes.c ****   */
 287:./Lib/Src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CBC(uint8_t Mode, uint8_t InitVectors[16], uint8_t *Key,
 288:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint16_t Keysize, uint8_t *Input, uint32_t Ilength,
ARM GAS  /tmp/cc2lf3as.s 			page 28


 289:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output)
 290:./Lib/Src/stm32f4xx_cryp_aes.c **** {
 679              		.loc 1 290 1
 680              		.cfi_startproc
 681              		@ args = 12, pretend = 0, frame = 200
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683 0000 90B5     		push	{r4, r7, lr}
 684              		.cfi_def_cfa_offset 12
 685              		.cfi_offset 4, -12
 686              		.cfi_offset 7, -8
 687              		.cfi_offset 14, -4
 688 0002 B3B0     		sub	sp, sp, #204
 689              		.cfi_def_cfa_offset 216
 690 0004 00AF     		add	r7, sp, #0
 691              		.cfi_def_cfa_register 7
 692 0006 B960     		str	r1, [r7, #8]
 693 0008 7A60     		str	r2, [r7, #4]
 694 000a 1A46     		mov	r2, r3
 695 000c 0346     		mov	r3, r0
 696 000e FB73     		strb	r3, [r7, #15]
 697 0010 1346     		mov	r3, r2	@ movhi
 698 0012 BB81     		strh	r3, [r7, #12]	@ movhi
 291:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 292:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 293:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 294:./Lib/Src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 699              		.loc 1 294 17
 700 0014 0023     		movs	r3, #0
 701 0016 3B61     		str	r3, [r7, #16]
 295:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 702              		.loc 1 295 12
 703 0018 0023     		movs	r3, #0
 704 001a C7F8B430 		str	r3, [r7, #180]
 296:./Lib/Src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 705              		.loc 1 296 15
 706 001e 0123     		movs	r3, #1
 707 0020 87F8C730 		strb	r3, [r7, #199]
 297:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 708              		.loc 1 297 12
 709 0024 7B68     		ldr	r3, [r7, #4]
 710 0026 C7F8B030 		str	r3, [r7, #176]
 298:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 711              		.loc 1 298 12
 712 002a D7F8D830 		ldr	r3, [r7, #216]
 713 002e C7F8C030 		str	r3, [r7, #192]
 299:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 714              		.loc 1 299 12
 715 0032 D7F8E030 		ldr	r3, [r7, #224]
 716 0036 C7F8BC30 		str	r3, [r7, #188]
 300:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr = (uint32_t)InitVectors;
 717              		.loc 1 300 12
 718 003a BB68     		ldr	r3, [r7, #8]
 719 003c C7F8AC30 		str	r3, [r7, #172]
 301:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 720              		.loc 1 301 12
 721 0040 0023     		movs	r3, #0
 722 0042 C7F8B830 		str	r3, [r7, #184]
ARM GAS  /tmp/cc2lf3as.s 			page 29


 302:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 303:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 304:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 723              		.loc 1 304 3
 724 0046 07F12403 		add	r3, r7, #36
 725 004a 1846     		mov	r0, r3
 726 004c FFF7FEFF 		bl	CRYP_KeyStructInit
 305:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 306:./Lib/Src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 727              		.loc 1 306 3
 728 0050 BB89     		ldrh	r3, [r7, #12]
 729 0052 B3F5807F 		cmp	r3, #256
 730 0056 00F09280 		beq	.L42
 731 005a B3F5807F 		cmp	r3, #256
 732 005e 00F3EF80 		bgt	.L84
 733 0062 802B     		cmp	r3, #128
 734 0064 02D0     		beq	.L44
 735 0066 C02B     		cmp	r3, #192
 736 0068 36D0     		beq	.L45
 307:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 308:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 128:
 309:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 310:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 311:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 312:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 313:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 314:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 315:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 316:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 317:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 318:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 192:
 319:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 320:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 321:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 322:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 323:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 324:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 325:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 326:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 327:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 328:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 329:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 330:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 331:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 332:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 256:
 333:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 334:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 335:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 336:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 337:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 338:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 339:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 340:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 341:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 342:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 343:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 344:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
ARM GAS  /tmp/cc2lf3as.s 			page 30


 345:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 346:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 347:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 348:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 349:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 350:./Lib/Src/stm32f4xx_cryp_aes.c ****     default:
 351:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 737              		.loc 1 351 5
 738 006a E9E0     		b	.L84
 739              	.L44:
 309:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 740              		.loc 1 309 41
 741 006c 0023     		movs	r3, #0
 742 006e 3B65     		str	r3, [r7, #80]
 310:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 743              		.loc 1 310 54
 744 0070 D7F8B030 		ldr	r3, [r7, #176]
 310:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 745              		.loc 1 310 47
 746 0074 1B68     		ldr	r3, [r3]
 747 0076 C7F89C30 		str	r3, [r7, #156]
 748              	.LBB266:
 749              	.LBB267:
 750              		.loc 2 498 10
 751 007a D7F89C30 		ldr	r3, [r7, #156]
 752 007e 1BBA     		rev	r3, r3
 753              	.LBE267:
 754              	.LBE266:
 310:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 755              		.loc 1 310 45
 756 0080 7B63     		str	r3, [r7, #52]
 311:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 757              		.loc 1 311 12
 758 0082 D7F8B030 		ldr	r3, [r7, #176]
 759 0086 0433     		adds	r3, r3, #4
 760 0088 C7F8B030 		str	r3, [r7, #176]
 312:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 761              		.loc 1 312 54
 762 008c D7F8B030 		ldr	r3, [r7, #176]
 312:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 763              		.loc 1 312 47
 764 0090 1B68     		ldr	r3, [r3]
 765 0092 C7F8A030 		str	r3, [r7, #160]
 766              	.LBB268:
 767              	.LBB269:
 768              		.loc 2 498 10
 769 0096 D7F8A030 		ldr	r3, [r7, #160]
 770 009a 1BBA     		rev	r3, r3
 771              	.LBE269:
 772              	.LBE268:
 312:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 773              		.loc 1 312 45
 774 009c BB63     		str	r3, [r7, #56]
 313:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 775              		.loc 1 313 12
 776 009e D7F8B030 		ldr	r3, [r7, #176]
 777 00a2 0433     		adds	r3, r3, #4
ARM GAS  /tmp/cc2lf3as.s 			page 31


 778 00a4 C7F8B030 		str	r3, [r7, #176]
 314:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 779              		.loc 1 314 54
 780 00a8 D7F8B030 		ldr	r3, [r7, #176]
 314:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 781              		.loc 1 314 47
 782 00ac 1B68     		ldr	r3, [r3]
 783 00ae C7F8A430 		str	r3, [r7, #164]
 784              	.LBB270:
 785              	.LBB271:
 786              		.loc 2 498 10
 787 00b2 D7F8A430 		ldr	r3, [r7, #164]
 788 00b6 1BBA     		rev	r3, r3
 789              	.LBE271:
 790              	.LBE270:
 314:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 791              		.loc 1 314 45
 792 00b8 FB63     		str	r3, [r7, #60]
 315:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 793              		.loc 1 315 12
 794 00ba D7F8B030 		ldr	r3, [r7, #176]
 795 00be 0433     		adds	r3, r3, #4
 796 00c0 C7F8B030 		str	r3, [r7, #176]
 316:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 797              		.loc 1 316 54
 798 00c4 D7F8B030 		ldr	r3, [r7, #176]
 316:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 799              		.loc 1 316 47
 800 00c8 1B68     		ldr	r3, [r3]
 801 00ca C7F8A830 		str	r3, [r7, #168]
 802              	.LBB272:
 803              	.LBB273:
 804              		.loc 2 498 10
 805 00ce D7F8A830 		ldr	r3, [r7, #168]
 806 00d2 1BBA     		rev	r3, r3
 807              	.LBE273:
 808              	.LBE272:
 316:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 809              		.loc 1 316 45
 810 00d4 3B64     		str	r3, [r7, #64]
 317:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 192:
 811              		.loc 1 317 5
 812 00d6 B4E0     		b	.L50
 813              	.L45:
 319:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 814              		.loc 1 319 42
 815 00d8 4FF48073 		mov	r3, #256
 816 00dc 3B65     		str	r3, [r7, #80]
 320:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 817              		.loc 1 320 54
 818 00de D7F8B030 		ldr	r3, [r7, #176]
 320:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 819              		.loc 1 320 47
 820 00e2 1B68     		ldr	r3, [r3]
 821 00e4 C7F88430 		str	r3, [r7, #132]
 822              	.LBB274:
 823              	.LBB275:
ARM GAS  /tmp/cc2lf3as.s 			page 32


 824              		.loc 2 498 10
 825 00e8 D7F88430 		ldr	r3, [r7, #132]
 826 00ec 1BBA     		rev	r3, r3
 827              	.LBE275:
 828              	.LBE274:
 320:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 829              		.loc 1 320 45
 830 00ee FB62     		str	r3, [r7, #44]
 321:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 831              		.loc 1 321 12
 832 00f0 D7F8B030 		ldr	r3, [r7, #176]
 833 00f4 0433     		adds	r3, r3, #4
 834 00f6 C7F8B030 		str	r3, [r7, #176]
 322:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 835              		.loc 1 322 54
 836 00fa D7F8B030 		ldr	r3, [r7, #176]
 322:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 837              		.loc 1 322 47
 838 00fe 1B68     		ldr	r3, [r3]
 839 0100 C7F88830 		str	r3, [r7, #136]
 840              	.LBB276:
 841              	.LBB277:
 842              		.loc 2 498 10
 843 0104 D7F88830 		ldr	r3, [r7, #136]
 844 0108 1BBA     		rev	r3, r3
 845              	.LBE277:
 846              	.LBE276:
 322:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 847              		.loc 1 322 45
 848 010a 3B63     		str	r3, [r7, #48]
 323:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 849              		.loc 1 323 12
 850 010c D7F8B030 		ldr	r3, [r7, #176]
 851 0110 0433     		adds	r3, r3, #4
 852 0112 C7F8B030 		str	r3, [r7, #176]
 324:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 853              		.loc 1 324 54
 854 0116 D7F8B030 		ldr	r3, [r7, #176]
 324:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 855              		.loc 1 324 47
 856 011a 1B68     		ldr	r3, [r3]
 857 011c C7F88C30 		str	r3, [r7, #140]
 858              	.LBB278:
 859              	.LBB279:
 860              		.loc 2 498 10
 861 0120 D7F88C30 		ldr	r3, [r7, #140]
 862 0124 1BBA     		rev	r3, r3
 863              	.LBE279:
 864              	.LBE278:
 324:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 865              		.loc 1 324 45
 866 0126 7B63     		str	r3, [r7, #52]
 325:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 867              		.loc 1 325 12
 868 0128 D7F8B030 		ldr	r3, [r7, #176]
 869 012c 0433     		adds	r3, r3, #4
 870 012e C7F8B030 		str	r3, [r7, #176]
ARM GAS  /tmp/cc2lf3as.s 			page 33


 326:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 871              		.loc 1 326 54
 872 0132 D7F8B030 		ldr	r3, [r7, #176]
 326:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 873              		.loc 1 326 47
 874 0136 1B68     		ldr	r3, [r3]
 875 0138 C7F89030 		str	r3, [r7, #144]
 876              	.LBB280:
 877              	.LBB281:
 878              		.loc 2 498 10
 879 013c D7F89030 		ldr	r3, [r7, #144]
 880 0140 1BBA     		rev	r3, r3
 881              	.LBE281:
 882              	.LBE280:
 326:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 883              		.loc 1 326 45
 884 0142 BB63     		str	r3, [r7, #56]
 327:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 885              		.loc 1 327 12
 886 0144 D7F8B030 		ldr	r3, [r7, #176]
 887 0148 0433     		adds	r3, r3, #4
 888 014a C7F8B030 		str	r3, [r7, #176]
 328:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 889              		.loc 1 328 54
 890 014e D7F8B030 		ldr	r3, [r7, #176]
 328:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 891              		.loc 1 328 47
 892 0152 1B68     		ldr	r3, [r3]
 893 0154 C7F89430 		str	r3, [r7, #148]
 894              	.LBB282:
 895              	.LBB283:
 896              		.loc 2 498 10
 897 0158 D7F89430 		ldr	r3, [r7, #148]
 898 015c 1BBA     		rev	r3, r3
 899              	.LBE283:
 900              	.LBE282:
 328:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 901              		.loc 1 328 45
 902 015e FB63     		str	r3, [r7, #60]
 329:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 903              		.loc 1 329 12
 904 0160 D7F8B030 		ldr	r3, [r7, #176]
 905 0164 0433     		adds	r3, r3, #4
 906 0166 C7F8B030 		str	r3, [r7, #176]
 330:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 907              		.loc 1 330 54
 908 016a D7F8B030 		ldr	r3, [r7, #176]
 330:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 909              		.loc 1 330 47
 910 016e 1B68     		ldr	r3, [r3]
 911 0170 C7F89830 		str	r3, [r7, #152]
 912              	.LBB284:
 913              	.LBB285:
 914              		.loc 2 498 10
 915 0174 D7F89830 		ldr	r3, [r7, #152]
 916 0178 1BBA     		rev	r3, r3
 917              	.LBE285:
ARM GAS  /tmp/cc2lf3as.s 			page 34


 918              	.LBE284:
 330:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 919              		.loc 1 330 45
 920 017a 3B64     		str	r3, [r7, #64]
 331:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 256:
 921              		.loc 1 331 5
 922 017c 61E0     		b	.L50
 923              	.L42:
 333:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 924              		.loc 1 333 42
 925 017e 4FF40073 		mov	r3, #512
 926 0182 3B65     		str	r3, [r7, #80]
 334:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 927              		.loc 1 334 54
 928 0184 D7F8B030 		ldr	r3, [r7, #176]
 334:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 929              		.loc 1 334 47
 930 0188 1B68     		ldr	r3, [r3]
 931 018a 7B66     		str	r3, [r7, #100]
 932              	.LBB286:
 933              	.LBB287:
 934              		.loc 2 498 10
 935 018c 7B6E     		ldr	r3, [r7, #100]
 936 018e 1BBA     		rev	r3, r3
 937              	.LBE287:
 938              	.LBE286:
 334:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 939              		.loc 1 334 45
 940 0190 7B62     		str	r3, [r7, #36]
 335:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 941              		.loc 1 335 12
 942 0192 D7F8B030 		ldr	r3, [r7, #176]
 943 0196 0433     		adds	r3, r3, #4
 944 0198 C7F8B030 		str	r3, [r7, #176]
 336:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 945              		.loc 1 336 54
 946 019c D7F8B030 		ldr	r3, [r7, #176]
 336:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 947              		.loc 1 336 47
 948 01a0 1B68     		ldr	r3, [r3]
 949 01a2 BB66     		str	r3, [r7, #104]
 950              	.LBB288:
 951              	.LBB289:
 952              		.loc 2 498 10
 953 01a4 BB6E     		ldr	r3, [r7, #104]
 954 01a6 1BBA     		rev	r3, r3
 955              	.LBE289:
 956              	.LBE288:
 336:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 957              		.loc 1 336 45
 958 01a8 BB62     		str	r3, [r7, #40]
 337:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 959              		.loc 1 337 12
 960 01aa D7F8B030 		ldr	r3, [r7, #176]
 961 01ae 0433     		adds	r3, r3, #4
 962 01b0 C7F8B030 		str	r3, [r7, #176]
 338:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc2lf3as.s 			page 35


 963              		.loc 1 338 54
 964 01b4 D7F8B030 		ldr	r3, [r7, #176]
 338:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 965              		.loc 1 338 47
 966 01b8 1B68     		ldr	r3, [r3]
 967 01ba FB66     		str	r3, [r7, #108]
 968              	.LBB290:
 969              	.LBB291:
 970              		.loc 2 498 10
 971 01bc FB6E     		ldr	r3, [r7, #108]
 972 01be 1BBA     		rev	r3, r3
 973              	.LBE291:
 974              	.LBE290:
 338:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 975              		.loc 1 338 45
 976 01c0 FB62     		str	r3, [r7, #44]
 339:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 977              		.loc 1 339 12
 978 01c2 D7F8B030 		ldr	r3, [r7, #176]
 979 01c6 0433     		adds	r3, r3, #4
 980 01c8 C7F8B030 		str	r3, [r7, #176]
 340:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 981              		.loc 1 340 54
 982 01cc D7F8B030 		ldr	r3, [r7, #176]
 340:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 983              		.loc 1 340 47
 984 01d0 1B68     		ldr	r3, [r3]
 985 01d2 3B67     		str	r3, [r7, #112]
 986              	.LBB292:
 987              	.LBB293:
 988              		.loc 2 498 10
 989 01d4 3B6F     		ldr	r3, [r7, #112]
 990 01d6 1BBA     		rev	r3, r3
 991              	.LBE293:
 992              	.LBE292:
 340:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 993              		.loc 1 340 45
 994 01d8 3B63     		str	r3, [r7, #48]
 341:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 995              		.loc 1 341 12
 996 01da D7F8B030 		ldr	r3, [r7, #176]
 997 01de 0433     		adds	r3, r3, #4
 998 01e0 C7F8B030 		str	r3, [r7, #176]
 342:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 999              		.loc 1 342 54
 1000 01e4 D7F8B030 		ldr	r3, [r7, #176]
 342:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1001              		.loc 1 342 47
 1002 01e8 1B68     		ldr	r3, [r3]
 1003 01ea 7B67     		str	r3, [r7, #116]
 1004              	.LBB294:
 1005              	.LBB295:
 1006              		.loc 2 498 10
 1007 01ec 7B6F     		ldr	r3, [r7, #116]
 1008 01ee 1BBA     		rev	r3, r3
 1009              	.LBE295:
 1010              	.LBE294:
ARM GAS  /tmp/cc2lf3as.s 			page 36


 342:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1011              		.loc 1 342 45
 1012 01f0 7B63     		str	r3, [r7, #52]
 343:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1013              		.loc 1 343 12
 1014 01f2 D7F8B030 		ldr	r3, [r7, #176]
 1015 01f6 0433     		adds	r3, r3, #4
 1016 01f8 C7F8B030 		str	r3, [r7, #176]
 344:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1017              		.loc 1 344 54
 1018 01fc D7F8B030 		ldr	r3, [r7, #176]
 344:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1019              		.loc 1 344 47
 1020 0200 1B68     		ldr	r3, [r3]
 1021 0202 BB67     		str	r3, [r7, #120]
 1022              	.LBB296:
 1023              	.LBB297:
 1024              		.loc 2 498 10
 1025 0204 BB6F     		ldr	r3, [r7, #120]
 1026 0206 1BBA     		rev	r3, r3
 1027              	.LBE297:
 1028              	.LBE296:
 344:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1029              		.loc 1 344 45
 1030 0208 BB63     		str	r3, [r7, #56]
 345:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1031              		.loc 1 345 12
 1032 020a D7F8B030 		ldr	r3, [r7, #176]
 1033 020e 0433     		adds	r3, r3, #4
 1034 0210 C7F8B030 		str	r3, [r7, #176]
 346:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1035              		.loc 1 346 54
 1036 0214 D7F8B030 		ldr	r3, [r7, #176]
 346:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1037              		.loc 1 346 47
 1038 0218 1B68     		ldr	r3, [r3]
 1039 021a FB67     		str	r3, [r7, #124]
 1040              	.LBB298:
 1041              	.LBB299:
 1042              		.loc 2 498 10
 1043 021c FB6F     		ldr	r3, [r7, #124]
 1044 021e 1BBA     		rev	r3, r3
 1045              	.LBE299:
 1046              	.LBE298:
 346:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1047              		.loc 1 346 45
 1048 0220 FB63     		str	r3, [r7, #60]
 347:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1049              		.loc 1 347 12
 1050 0222 D7F8B030 		ldr	r3, [r7, #176]
 1051 0226 0433     		adds	r3, r3, #4
 1052 0228 C7F8B030 		str	r3, [r7, #176]
 348:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1053              		.loc 1 348 54
 1054 022c D7F8B030 		ldr	r3, [r7, #176]
 348:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1055              		.loc 1 348 47
ARM GAS  /tmp/cc2lf3as.s 			page 37


 1056 0230 1B68     		ldr	r3, [r3]
 1057 0232 C7F88030 		str	r3, [r7, #128]
 1058              	.LBB300:
 1059              	.LBB301:
 1060              		.loc 2 498 10
 1061 0236 D7F88030 		ldr	r3, [r7, #128]
 1062 023a 1BBA     		rev	r3, r3
 1063              	.LBE301:
 1064              	.LBE300:
 348:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1065              		.loc 1 348 45
 1066 023c 3B64     		str	r3, [r7, #64]
 349:./Lib/Src/stm32f4xx_cryp_aes.c ****     default:
 1067              		.loc 1 349 5
 1068 023e 00E0     		b	.L50
 1069              	.L84:
 1070              		.loc 1 351 5
 1071 0240 00BF     		nop
 1072              	.L50:
 352:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 353:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 354:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 355:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 1073              		.loc 1 355 50
 1074 0242 D7F8AC30 		ldr	r3, [r7, #172]
 1075              		.loc 1 355 43
 1076 0246 1B68     		ldr	r3, [r3]
 1077 0248 7B65     		str	r3, [r7, #84]
 1078              	.LBB302:
 1079              	.LBB303:
 1080              		.loc 2 498 10
 1081 024a 7B6D     		ldr	r3, [r7, #84]
 1082 024c 1BBA     		rev	r3, r3
 1083              	.LBE303:
 1084              	.LBE302:
 1085              		.loc 1 355 41
 1086 024e 7B61     		str	r3, [r7, #20]
 356:./Lib/Src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1087              		.loc 1 356 9
 1088 0250 D7F8AC30 		ldr	r3, [r7, #172]
 1089 0254 0433     		adds	r3, r3, #4
 1090 0256 C7F8AC30 		str	r3, [r7, #172]
 357:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 1091              		.loc 1 357 50
 1092 025a D7F8AC30 		ldr	r3, [r7, #172]
 1093              		.loc 1 357 43
 1094 025e 1B68     		ldr	r3, [r3]
 1095 0260 BB65     		str	r3, [r7, #88]
 1096              	.LBB304:
 1097              	.LBB305:
 1098              		.loc 2 498 10
 1099 0262 BB6D     		ldr	r3, [r7, #88]
 1100 0264 1BBA     		rev	r3, r3
 1101              	.LBE305:
 1102              	.LBE304:
 1103              		.loc 1 357 41
 1104 0266 BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/cc2lf3as.s 			page 38


 358:./Lib/Src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1105              		.loc 1 358 9
 1106 0268 D7F8AC30 		ldr	r3, [r7, #172]
 1107 026c 0433     		adds	r3, r3, #4
 1108 026e C7F8AC30 		str	r3, [r7, #172]
 359:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 1109              		.loc 1 359 50
 1110 0272 D7F8AC30 		ldr	r3, [r7, #172]
 1111              		.loc 1 359 43
 1112 0276 1B68     		ldr	r3, [r3]
 1113 0278 FB65     		str	r3, [r7, #92]
 1114              	.LBB306:
 1115              	.LBB307:
 1116              		.loc 2 498 10
 1117 027a FB6D     		ldr	r3, [r7, #92]
 1118 027c 1BBA     		rev	r3, r3
 1119              	.LBE307:
 1120              	.LBE306:
 1121              		.loc 1 359 41
 1122 027e FB61     		str	r3, [r7, #28]
 360:./Lib/Src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1123              		.loc 1 360 9
 1124 0280 D7F8AC30 		ldr	r3, [r7, #172]
 1125 0284 0433     		adds	r3, r3, #4
 1126 0286 C7F8AC30 		str	r3, [r7, #172]
 361:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 1127              		.loc 1 361 50
 1128 028a D7F8AC30 		ldr	r3, [r7, #172]
 1129              		.loc 1 361 43
 1130 028e 1B68     		ldr	r3, [r3]
 1131 0290 3B66     		str	r3, [r7, #96]
 1132              	.LBB308:
 1133              	.LBB309:
 1134              		.loc 2 498 10
 1135 0292 3B6E     		ldr	r3, [r7, #96]
 1136 0294 1BBA     		rev	r3, r3
 1137              	.LBE309:
 1138              	.LBE308:
 1139              		.loc 1 361 41
 1140 0296 3B62     		str	r3, [r7, #32]
 362:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 363:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 364:./Lib/Src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 365:./Lib/Src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 1141              		.loc 1 365 5
 1142 0298 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1143 029a 002B     		cmp	r3, #0
 1144 029c 30D1     		bne	.L69
 366:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 367:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 368:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 1145              		.loc 1 368 5
 1146 029e FFF7FEFF 		bl	CRYP_FIFOFlush
 369:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 370:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 371:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1147              		.loc 1 371 41
ARM GAS  /tmp/cc2lf3as.s 			page 39


 1148 02a2 0423     		movs	r3, #4
 1149 02a4 7B64     		str	r3, [r7, #68]
 372:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
 1150              		.loc 1 372 42
 1151 02a6 3823     		movs	r3, #56
 1152 02a8 BB64     		str	r3, [r7, #72]
 373:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
 1153              		.loc 1 373 42
 1154 02aa 0023     		movs	r3, #0
 1155 02ac FB64     		str	r3, [r7, #76]
 374:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 375:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 1156              		.loc 1 375 5
 1157 02ae 07F14403 		add	r3, r7, #68
 1158 02b2 1846     		mov	r0, r3
 1159 02b4 FFF7FEFF 		bl	CRYP_Init
 376:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 377:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 378:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1160              		.loc 1 378 5
 1161 02b8 07F12403 		add	r3, r7, #36
 1162 02bc 1846     		mov	r0, r3
 1163 02be FFF7FEFF 		bl	CRYP_KeyInit
 379:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 380:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 381:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 1164              		.loc 1 381 5
 1165 02c2 0120     		movs	r0, #1
 1166 02c4 FFF7FEFF 		bl	CRYP_Cmd
 1167              	.L71:
 382:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 383:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* wait until the Busy flag is RESET */
 384:./Lib/Src/stm32f4xx_cryp_aes.c ****     do
 385:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 386:./Lib/Src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 1168              		.loc 1 386 20 discriminator 2
 1169 02c8 1020     		movs	r0, #16
 1170 02ca FFF7FEFF 		bl	CRYP_GetFlagStatus
 1171 02ce 0346     		mov	r3, r0
 1172              		.loc 1 386 18 discriminator 2
 1173 02d0 C7F8B430 		str	r3, [r7, #180]
 387:./Lib/Src/stm32f4xx_cryp_aes.c ****       counter++;
 1174              		.loc 1 387 14 discriminator 2
 1175 02d4 3B69     		ldr	r3, [r7, #16]
 1176 02d6 0133     		adds	r3, r3, #1
 1177 02d8 3B61     		str	r3, [r7, #16]
 388:./Lib/Src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1178              		.loc 1 388 22 discriminator 2
 1179 02da 3B69     		ldr	r3, [r7, #16]
 1180              		.loc 1 388 42 discriminator 2
 1181 02dc B3F5803F 		cmp	r3, #65536
 1182 02e0 03D0     		beq	.L70
 1183              		.loc 1 388 42 is_stmt 0 discriminator 1
 1184 02e2 D7F8B430 		ldr	r3, [r7, #180]
 1185 02e6 002B     		cmp	r3, #0
 1186 02e8 EED1     		bne	.L71
 1187              	.L70:
ARM GAS  /tmp/cc2lf3as.s 			page 40


 389:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 390:./Lib/Src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 1188              		.loc 1 390 8 is_stmt 1
 1189 02ea D7F8B430 		ldr	r3, [r7, #180]
 1190 02ee 002B     		cmp	r3, #0
 1191 02f0 03D0     		beq	.L72
 391:./Lib/Src/stm32f4xx_cryp_aes.c ****    {
 392:./Lib/Src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1192              		.loc 1 392 15
 1193 02f2 0023     		movs	r3, #0
 1194 02f4 87F8C730 		strb	r3, [r7, #199]
 1195 02f8 09E0     		b	.L73
 1196              	.L72:
 393:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 394:./Lib/Src/stm32f4xx_cryp_aes.c ****     else
 395:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 396:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Crypto Init for decryption process */  
 397:./Lib/Src/stm32f4xx_cryp_aes.c ****       AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1197              		.loc 1 397 43
 1198 02fa 0423     		movs	r3, #4
 1199 02fc 7B64     		str	r3, [r7, #68]
 1200 02fe 06E0     		b	.L73
 1201              	.L69:
 398:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 399:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 400:./Lib/Src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 401:./Lib/Src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 402:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 403:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1202              		.loc 1 403 5
 1203 0300 07F12403 		add	r3, r7, #36
 1204 0304 1846     		mov	r0, r3
 1205 0306 FFF7FEFF 		bl	CRYP_KeyInit
 404:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 405:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 406:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 1206              		.loc 1 406 42
 1207 030a 0023     		movs	r3, #0
 1208 030c 7B64     		str	r3, [r7, #68]
 1209              	.L73:
 407:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 408:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CBC;
 1210              		.loc 1 408 40
 1211 030e 2823     		movs	r3, #40
 1212 0310 BB64     		str	r3, [r7, #72]
 409:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 1213              		.loc 1 409 40
 1214 0312 8023     		movs	r3, #128
 1215 0314 FB64     		str	r3, [r7, #76]
 410:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 1216              		.loc 1 410 3
 1217 0316 07F14403 		add	r3, r7, #68
 1218 031a 1846     		mov	r0, r3
 1219 031c FFF7FEFF 		bl	CRYP_Init
 411:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 412:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 413:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_IVInit(&AES_CRYP_IVInitStructure);
ARM GAS  /tmp/cc2lf3as.s 			page 41


 1220              		.loc 1 413 3
 1221 0320 07F11403 		add	r3, r7, #20
 1222 0324 1846     		mov	r0, r3
 1223 0326 FFF7FEFF 		bl	CRYP_IVInit
 414:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 415:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 416:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 1224              		.loc 1 416 3
 1225 032a FFF7FEFF 		bl	CRYP_FIFOFlush
 417:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 418:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 419:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 1226              		.loc 1 419 3
 1227 032e 0120     		movs	r0, #1
 1228 0330 FFF7FEFF 		bl	CRYP_Cmd
 420:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 421:./Lib/Src/stm32f4xx_cryp_aes.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 1229              		.loc 1 421 6
 1230 0334 FFF7FEFF 		bl	CRYP_GetCmdStatus
 1231 0338 0346     		mov	r3, r0
 1232              		.loc 1 421 5
 1233 033a 002B     		cmp	r3, #0
 1234 033c 01D1     		bne	.L74
 422:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 423:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 424:./Lib/Src/stm32f4xx_cryp_aes.c ****        the CRYP peripheral (please check the device sales type. */
 425:./Lib/Src/stm32f4xx_cryp_aes.c ****     return(ERROR);
 1235              		.loc 1 425 11
 1236 033e 0023     		movs	r3, #0
 1237 0340 8BE0     		b	.L83
 1238              	.L74:
 426:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 427:./Lib/Src/stm32f4xx_cryp_aes.c ****   
 428:./Lib/Src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1239              		.loc 1 428 8
 1240 0342 0023     		movs	r3, #0
 1241 0344 C7F8B830 		str	r3, [r7, #184]
 1242              		.loc 1 428 3
 1243 0348 77E0     		b	.L76
 1244              	.L82:
 429:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 430:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 431:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 432:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1245              		.loc 1 432 18
 1246 034a D7F8C030 		ldr	r3, [r7, #192]
 1247              		.loc 1 432 5
 1248 034e 1B68     		ldr	r3, [r3]
 1249 0350 1846     		mov	r0, r3
 1250 0352 FFF7FEFF 		bl	CRYP_DataIn
 433:./Lib/Src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1251              		.loc 1 433 14
 1252 0356 D7F8C030 		ldr	r3, [r7, #192]
 1253 035a 0433     		adds	r3, r3, #4
 1254 035c C7F8C030 		str	r3, [r7, #192]
 434:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1255              		.loc 1 434 18
ARM GAS  /tmp/cc2lf3as.s 			page 42


 1256 0360 D7F8C030 		ldr	r3, [r7, #192]
 1257              		.loc 1 434 5
 1258 0364 1B68     		ldr	r3, [r3]
 1259 0366 1846     		mov	r0, r3
 1260 0368 FFF7FEFF 		bl	CRYP_DataIn
 435:./Lib/Src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1261              		.loc 1 435 14
 1262 036c D7F8C030 		ldr	r3, [r7, #192]
 1263 0370 0433     		adds	r3, r3, #4
 1264 0372 C7F8C030 		str	r3, [r7, #192]
 436:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1265              		.loc 1 436 18
 1266 0376 D7F8C030 		ldr	r3, [r7, #192]
 1267              		.loc 1 436 5
 1268 037a 1B68     		ldr	r3, [r3]
 1269 037c 1846     		mov	r0, r3
 1270 037e FFF7FEFF 		bl	CRYP_DataIn
 437:./Lib/Src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1271              		.loc 1 437 14
 1272 0382 D7F8C030 		ldr	r3, [r7, #192]
 1273 0386 0433     		adds	r3, r3, #4
 1274 0388 C7F8C030 		str	r3, [r7, #192]
 438:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1275              		.loc 1 438 18
 1276 038c D7F8C030 		ldr	r3, [r7, #192]
 1277              		.loc 1 438 5
 1278 0390 1B68     		ldr	r3, [r3]
 1279 0392 1846     		mov	r0, r3
 1280 0394 FFF7FEFF 		bl	CRYP_DataIn
 439:./Lib/Src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1281              		.loc 1 439 14
 1282 0398 D7F8C030 		ldr	r3, [r7, #192]
 1283 039c 0433     		adds	r3, r3, #4
 1284 039e C7F8C030 		str	r3, [r7, #192]
 440:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 441:./Lib/Src/stm32f4xx_cryp_aes.c ****     counter = 0;
 1285              		.loc 1 441 13
 1286 03a2 0023     		movs	r3, #0
 1287 03a4 3B61     		str	r3, [r7, #16]
 1288              	.L78:
 442:./Lib/Src/stm32f4xx_cryp_aes.c ****     do
 443:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 444:./Lib/Src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 1289              		.loc 1 444 20 discriminator 2
 1290 03a6 1020     		movs	r0, #16
 1291 03a8 FFF7FEFF 		bl	CRYP_GetFlagStatus
 1292 03ac 0346     		mov	r3, r0
 1293              		.loc 1 444 18 discriminator 2
 1294 03ae C7F8B430 		str	r3, [r7, #180]
 445:./Lib/Src/stm32f4xx_cryp_aes.c ****       counter++;
 1295              		.loc 1 445 14 discriminator 2
 1296 03b2 3B69     		ldr	r3, [r7, #16]
 1297 03b4 0133     		adds	r3, r3, #1
 1298 03b6 3B61     		str	r3, [r7, #16]
 446:./Lib/Src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1299              		.loc 1 446 22 discriminator 2
 1300 03b8 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/cc2lf3as.s 			page 43


 1301              		.loc 1 446 42 discriminator 2
 1302 03ba B3F5803F 		cmp	r3, #65536
 1303 03be 03D0     		beq	.L77
 1304              		.loc 1 446 42 is_stmt 0 discriminator 1
 1305 03c0 D7F8B430 		ldr	r3, [r7, #180]
 1306 03c4 002B     		cmp	r3, #0
 1307 03c6 EED1     		bne	.L78
 1308              	.L77:
 447:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 448:./Lib/Src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 1309              		.loc 1 448 8 is_stmt 1
 1310 03c8 D7F8B430 		ldr	r3, [r7, #180]
 1311 03cc 002B     		cmp	r3, #0
 1312 03ce 03D0     		beq	.L79
 449:./Lib/Src/stm32f4xx_cryp_aes.c ****    {
 450:./Lib/Src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1313              		.loc 1 450 15
 1314 03d0 0023     		movs	r3, #0
 1315 03d2 87F8C730 		strb	r3, [r7, #199]
 1316 03d6 2BE0     		b	.L80
 1317              	.L79:
 451:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 452:./Lib/Src/stm32f4xx_cryp_aes.c ****     else
 453:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 454:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 455:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 456:./Lib/Src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1318              		.loc 1 456 8
 1319 03d8 D7F8BC40 		ldr	r4, [r7, #188]
 1320              		.loc 1 456 34
 1321 03dc FFF7FEFF 		bl	CRYP_DataOut
 1322 03e0 0346     		mov	r3, r0
 1323              		.loc 1 456 32
 1324 03e2 2360     		str	r3, [r4]
 457:./Lib/Src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1325              		.loc 1 457 17
 1326 03e4 D7F8BC30 		ldr	r3, [r7, #188]
 1327 03e8 0433     		adds	r3, r3, #4
 1328 03ea C7F8BC30 		str	r3, [r7, #188]
 458:./Lib/Src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1329              		.loc 1 458 8
 1330 03ee D7F8BC40 		ldr	r4, [r7, #188]
 1331              		.loc 1 458 34
 1332 03f2 FFF7FEFF 		bl	CRYP_DataOut
 1333 03f6 0346     		mov	r3, r0
 1334              		.loc 1 458 32
 1335 03f8 2360     		str	r3, [r4]
 459:./Lib/Src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1336              		.loc 1 459 17
 1337 03fa D7F8BC30 		ldr	r3, [r7, #188]
 1338 03fe 0433     		adds	r3, r3, #4
 1339 0400 C7F8BC30 		str	r3, [r7, #188]
 460:./Lib/Src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1340              		.loc 1 460 8
 1341 0404 D7F8BC40 		ldr	r4, [r7, #188]
 1342              		.loc 1 460 34
 1343 0408 FFF7FEFF 		bl	CRYP_DataOut
ARM GAS  /tmp/cc2lf3as.s 			page 44


 1344 040c 0346     		mov	r3, r0
 1345              		.loc 1 460 32
 1346 040e 2360     		str	r3, [r4]
 461:./Lib/Src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1347              		.loc 1 461 17
 1348 0410 D7F8BC30 		ldr	r3, [r7, #188]
 1349 0414 0433     		adds	r3, r3, #4
 1350 0416 C7F8BC30 		str	r3, [r7, #188]
 462:./Lib/Src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1351              		.loc 1 462 8
 1352 041a D7F8BC40 		ldr	r4, [r7, #188]
 1353              		.loc 1 462 34
 1354 041e FFF7FEFF 		bl	CRYP_DataOut
 1355 0422 0346     		mov	r3, r0
 1356              		.loc 1 462 32
 1357 0424 2360     		str	r3, [r4]
 463:./Lib/Src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1358              		.loc 1 463 17
 1359 0426 D7F8BC30 		ldr	r3, [r7, #188]
 1360 042a 0433     		adds	r3, r3, #4
 1361 042c C7F8BC30 		str	r3, [r7, #188]
 1362              	.L80:
 428:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 1363              		.loc 1 428 49 discriminator 2
 1364 0430 D7F8B830 		ldr	r3, [r7, #184]
 1365 0434 1033     		adds	r3, r3, #16
 1366 0436 C7F8B830 		str	r3, [r7, #184]
 1367              	.L76:
 428:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 1368              		.loc 1 428 25 discriminator 1
 1369 043a D7F8B820 		ldr	r2, [r7, #184]
 1370 043e D7F8DC30 		ldr	r3, [r7, #220]
 1371 0442 9A42     		cmp	r2, r3
 1372 0444 04D2     		bcs	.L81
 428:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 1373              		.loc 1 428 25 is_stmt 0 discriminator 3
 1374 0446 97F8C730 		ldrb	r3, [r7, #199]	@ zero_extendqisi2
 1375 044a 002B     		cmp	r3, #0
 1376 044c 7FF47DAF 		bne	.L82
 1377              	.L81:
 464:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 465:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 466:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 467:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 468:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 1378              		.loc 1 468 3 is_stmt 1
 1379 0450 0020     		movs	r0, #0
 1380 0452 FFF7FEFF 		bl	CRYP_Cmd
 469:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 470:./Lib/Src/stm32f4xx_cryp_aes.c ****   return status;
 1381              		.loc 1 470 10
 1382 0456 97F8C730 		ldrb	r3, [r7, #199]	@ zero_extendqisi2
 1383              	.L83:
 471:./Lib/Src/stm32f4xx_cryp_aes.c **** }
 1384              		.loc 1 471 1 discriminator 1
 1385 045a 1846     		mov	r0, r3
 1386 045c CC37     		adds	r7, r7, #204
ARM GAS  /tmp/cc2lf3as.s 			page 45


 1387              		.cfi_def_cfa_offset 12
 1388 045e BD46     		mov	sp, r7
 1389              		.cfi_def_cfa_register 13
 1390              		@ sp needed
 1391 0460 90BD     		pop	{r4, r7, pc}
 1392              		.cfi_endproc
 1393              	.LFE124:
 1395              		.section	.text.CRYP_AES_CTR,"ax",%progbits
 1396              		.align	1
 1397              		.global	CRYP_AES_CTR
 1398              		.syntax unified
 1399              		.thumb
 1400              		.thumb_func
 1402              	CRYP_AES_CTR:
 1403              	.LFB125:
 472:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 473:./Lib/Src/stm32f4xx_cryp_aes.c **** /**
 474:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CTR Mode
 475:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 476:./Lib/Src/stm32f4xx_cryp_aes.c ****   *           This parameter can be one of the following values:
 477:./Lib/Src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 478:./Lib/Src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 479:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 480:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 481:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 482:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 483:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 484:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 485:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 486:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 487:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 488:./Lib/Src/stm32f4xx_cryp_aes.c ****   */
 489:./Lib/Src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CTR(uint8_t Mode, uint8_t InitVectors[16], uint8_t *Key, 
 490:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint16_t Keysize, uint8_t *Input, uint32_t Ilength,
 491:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output)
 492:./Lib/Src/stm32f4xx_cryp_aes.c **** {
 1404              		.loc 1 492 1
 1405              		.cfi_startproc
 1406              		@ args = 12, pretend = 0, frame = 200
 1407              		@ frame_needed = 1, uses_anonymous_args = 0
 1408 0000 90B5     		push	{r4, r7, lr}
 1409              		.cfi_def_cfa_offset 12
 1410              		.cfi_offset 4, -12
 1411              		.cfi_offset 7, -8
 1412              		.cfi_offset 14, -4
 1413 0002 B3B0     		sub	sp, sp, #204
 1414              		.cfi_def_cfa_offset 216
 1415 0004 00AF     		add	r7, sp, #0
 1416              		.cfi_def_cfa_register 7
 1417 0006 B960     		str	r1, [r7, #8]
 1418 0008 7A60     		str	r2, [r7, #4]
 1419 000a 1A46     		mov	r2, r3
 1420 000c 0346     		mov	r3, r0
 1421 000e FB73     		strb	r3, [r7, #15]
 1422 0010 1346     		mov	r3, r2	@ movhi
 1423 0012 BB81     		strh	r3, [r7, #12]	@ movhi
 493:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
ARM GAS  /tmp/cc2lf3as.s 			page 46


 494:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 495:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 496:./Lib/Src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 1424              		.loc 1 496 17
 1425 0014 0023     		movs	r3, #0
 1426 0016 3B61     		str	r3, [r7, #16]
 497:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 1427              		.loc 1 497 12
 1428 0018 0023     		movs	r3, #0
 1429 001a C7F8B430 		str	r3, [r7, #180]
 498:./Lib/Src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 1430              		.loc 1 498 15
 1431 001e 0123     		movs	r3, #1
 1432 0020 87F8C730 		strb	r3, [r7, #199]
 499:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 1433              		.loc 1 499 12
 1434 0024 7B68     		ldr	r3, [r7, #4]
 1435 0026 C7F8B030 		str	r3, [r7, #176]
 500:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 1436              		.loc 1 500 12
 1437 002a D7F8D830 		ldr	r3, [r7, #216]
 1438 002e C7F8C030 		str	r3, [r7, #192]
 501:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 1439              		.loc 1 501 12
 1440 0032 D7F8E030 		ldr	r3, [r7, #224]
 1441 0036 C7F8BC30 		str	r3, [r7, #188]
 502:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 1442              		.loc 1 502 12
 1443 003a BB68     		ldr	r3, [r7, #8]
 1444 003c C7F8AC30 		str	r3, [r7, #172]
 503:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 1445              		.loc 1 503 12
 1446 0040 0023     		movs	r3, #0
 1447 0042 C7F8B830 		str	r3, [r7, #184]
 504:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 505:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 506:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 1448              		.loc 1 506 3
 1449 0046 07F12403 		add	r3, r7, #36
 1450 004a 1846     		mov	r0, r3
 1451 004c FFF7FEFF 		bl	CRYP_KeyStructInit
 507:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 508:./Lib/Src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 1452              		.loc 1 508 3
 1453 0050 BB89     		ldrh	r3, [r7, #12]
 1454 0052 B3F5807F 		cmp	r3, #256
 1455 0056 00F09280 		beq	.L86
 1456 005a B3F5807F 		cmp	r3, #256
 1457 005e 00F3EF80 		bgt	.L125
 1458 0062 802B     		cmp	r3, #128
 1459 0064 02D0     		beq	.L88
 1460 0066 C02B     		cmp	r3, #192
 1461 0068 36D0     		beq	.L89
 509:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 510:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 128:
 511:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 512:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
ARM GAS  /tmp/cc2lf3as.s 			page 47


 513:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 514:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 515:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 516:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 517:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 518:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 519:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 520:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 192:
 521:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 522:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 523:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 524:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 525:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 526:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 527:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 528:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 529:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 530:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 531:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 532:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 533:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 534:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 256:
 535:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 536:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 537:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 538:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 539:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 540:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 541:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 542:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 543:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 544:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 545:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 546:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 547:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 548:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 549:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 550:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 551:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 552:./Lib/Src/stm32f4xx_cryp_aes.c ****     default:
 553:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1462              		.loc 1 553 5
 1463 006a E9E0     		b	.L125
 1464              	.L88:
 511:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1465              		.loc 1 511 41
 1466 006c 0023     		movs	r3, #0
 1467 006e 3B65     		str	r3, [r7, #80]
 512:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1468              		.loc 1 512 54
 1469 0070 D7F8B030 		ldr	r3, [r7, #176]
 512:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1470              		.loc 1 512 47
 1471 0074 1B68     		ldr	r3, [r3]
 1472 0076 C7F89C30 		str	r3, [r7, #156]
 1473              	.LBB310:
 1474              	.LBB311:
ARM GAS  /tmp/cc2lf3as.s 			page 48


 1475              		.loc 2 498 10
 1476 007a D7F89C30 		ldr	r3, [r7, #156]
 1477 007e 1BBA     		rev	r3, r3
 1478              	.LBE311:
 1479              	.LBE310:
 512:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1480              		.loc 1 512 45
 1481 0080 7B63     		str	r3, [r7, #52]
 513:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1482              		.loc 1 513 12
 1483 0082 D7F8B030 		ldr	r3, [r7, #176]
 1484 0086 0433     		adds	r3, r3, #4
 1485 0088 C7F8B030 		str	r3, [r7, #176]
 514:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1486              		.loc 1 514 54
 1487 008c D7F8B030 		ldr	r3, [r7, #176]
 514:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1488              		.loc 1 514 47
 1489 0090 1B68     		ldr	r3, [r3]
 1490 0092 C7F8A030 		str	r3, [r7, #160]
 1491              	.LBB312:
 1492              	.LBB313:
 1493              		.loc 2 498 10
 1494 0096 D7F8A030 		ldr	r3, [r7, #160]
 1495 009a 1BBA     		rev	r3, r3
 1496              	.LBE313:
 1497              	.LBE312:
 514:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1498              		.loc 1 514 45
 1499 009c BB63     		str	r3, [r7, #56]
 515:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1500              		.loc 1 515 12
 1501 009e D7F8B030 		ldr	r3, [r7, #176]
 1502 00a2 0433     		adds	r3, r3, #4
 1503 00a4 C7F8B030 		str	r3, [r7, #176]
 516:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1504              		.loc 1 516 54
 1505 00a8 D7F8B030 		ldr	r3, [r7, #176]
 516:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1506              		.loc 1 516 47
 1507 00ac 1B68     		ldr	r3, [r3]
 1508 00ae C7F8A430 		str	r3, [r7, #164]
 1509              	.LBB314:
 1510              	.LBB315:
 1511              		.loc 2 498 10
 1512 00b2 D7F8A430 		ldr	r3, [r7, #164]
 1513 00b6 1BBA     		rev	r3, r3
 1514              	.LBE315:
 1515              	.LBE314:
 516:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1516              		.loc 1 516 45
 1517 00b8 FB63     		str	r3, [r7, #60]
 517:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1518              		.loc 1 517 12
 1519 00ba D7F8B030 		ldr	r3, [r7, #176]
 1520 00be 0433     		adds	r3, r3, #4
 1521 00c0 C7F8B030 		str	r3, [r7, #176]
ARM GAS  /tmp/cc2lf3as.s 			page 49


 518:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1522              		.loc 1 518 54
 1523 00c4 D7F8B030 		ldr	r3, [r7, #176]
 518:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1524              		.loc 1 518 47
 1525 00c8 1B68     		ldr	r3, [r3]
 1526 00ca C7F8A830 		str	r3, [r7, #168]
 1527              	.LBB316:
 1528              	.LBB317:
 1529              		.loc 2 498 10
 1530 00ce D7F8A830 		ldr	r3, [r7, #168]
 1531 00d2 1BBA     		rev	r3, r3
 1532              	.LBE317:
 1533              	.LBE316:
 518:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1534              		.loc 1 518 45
 1535 00d4 3B64     		str	r3, [r7, #64]
 519:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 192:
 1536              		.loc 1 519 5
 1537 00d6 B4E0     		b	.L94
 1538              	.L89:
 521:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1539              		.loc 1 521 42
 1540 00d8 4FF48073 		mov	r3, #256
 1541 00dc 3B65     		str	r3, [r7, #80]
 522:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1542              		.loc 1 522 54
 1543 00de D7F8B030 		ldr	r3, [r7, #176]
 522:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1544              		.loc 1 522 47
 1545 00e2 1B68     		ldr	r3, [r3]
 1546 00e4 C7F88430 		str	r3, [r7, #132]
 1547              	.LBB318:
 1548              	.LBB319:
 1549              		.loc 2 498 10
 1550 00e8 D7F88430 		ldr	r3, [r7, #132]
 1551 00ec 1BBA     		rev	r3, r3
 1552              	.LBE319:
 1553              	.LBE318:
 522:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1554              		.loc 1 522 45
 1555 00ee FB62     		str	r3, [r7, #44]
 523:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 1556              		.loc 1 523 12
 1557 00f0 D7F8B030 		ldr	r3, [r7, #176]
 1558 00f4 0433     		adds	r3, r3, #4
 1559 00f6 C7F8B030 		str	r3, [r7, #176]
 524:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1560              		.loc 1 524 54
 1561 00fa D7F8B030 		ldr	r3, [r7, #176]
 524:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1562              		.loc 1 524 47
 1563 00fe 1B68     		ldr	r3, [r3]
 1564 0100 C7F88830 		str	r3, [r7, #136]
 1565              	.LBB320:
 1566              	.LBB321:
 1567              		.loc 2 498 10
ARM GAS  /tmp/cc2lf3as.s 			page 50


 1568 0104 D7F88830 		ldr	r3, [r7, #136]
 1569 0108 1BBA     		rev	r3, r3
 1570              	.LBE321:
 1571              	.LBE320:
 524:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1572              		.loc 1 524 45
 1573 010a 3B63     		str	r3, [r7, #48]
 525:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1574              		.loc 1 525 12
 1575 010c D7F8B030 		ldr	r3, [r7, #176]
 1576 0110 0433     		adds	r3, r3, #4
 1577 0112 C7F8B030 		str	r3, [r7, #176]
 526:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1578              		.loc 1 526 54
 1579 0116 D7F8B030 		ldr	r3, [r7, #176]
 526:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1580              		.loc 1 526 47
 1581 011a 1B68     		ldr	r3, [r3]
 1582 011c C7F88C30 		str	r3, [r7, #140]
 1583              	.LBB322:
 1584              	.LBB323:
 1585              		.loc 2 498 10
 1586 0120 D7F88C30 		ldr	r3, [r7, #140]
 1587 0124 1BBA     		rev	r3, r3
 1588              	.LBE323:
 1589              	.LBE322:
 526:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1590              		.loc 1 526 45
 1591 0126 7B63     		str	r3, [r7, #52]
 527:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1592              		.loc 1 527 12
 1593 0128 D7F8B030 		ldr	r3, [r7, #176]
 1594 012c 0433     		adds	r3, r3, #4
 1595 012e C7F8B030 		str	r3, [r7, #176]
 528:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1596              		.loc 1 528 54
 1597 0132 D7F8B030 		ldr	r3, [r7, #176]
 528:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1598              		.loc 1 528 47
 1599 0136 1B68     		ldr	r3, [r3]
 1600 0138 C7F89030 		str	r3, [r7, #144]
 1601              	.LBB324:
 1602              	.LBB325:
 1603              		.loc 2 498 10
 1604 013c D7F89030 		ldr	r3, [r7, #144]
 1605 0140 1BBA     		rev	r3, r3
 1606              	.LBE325:
 1607              	.LBE324:
 528:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1608              		.loc 1 528 45
 1609 0142 BB63     		str	r3, [r7, #56]
 529:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1610              		.loc 1 529 12
 1611 0144 D7F8B030 		ldr	r3, [r7, #176]
 1612 0148 0433     		adds	r3, r3, #4
 1613 014a C7F8B030 		str	r3, [r7, #176]
 530:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc2lf3as.s 			page 51


 1614              		.loc 1 530 54
 1615 014e D7F8B030 		ldr	r3, [r7, #176]
 530:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1616              		.loc 1 530 47
 1617 0152 1B68     		ldr	r3, [r3]
 1618 0154 C7F89430 		str	r3, [r7, #148]
 1619              	.LBB326:
 1620              	.LBB327:
 1621              		.loc 2 498 10
 1622 0158 D7F89430 		ldr	r3, [r7, #148]
 1623 015c 1BBA     		rev	r3, r3
 1624              	.LBE327:
 1625              	.LBE326:
 530:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1626              		.loc 1 530 45
 1627 015e FB63     		str	r3, [r7, #60]
 531:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1628              		.loc 1 531 12
 1629 0160 D7F8B030 		ldr	r3, [r7, #176]
 1630 0164 0433     		adds	r3, r3, #4
 1631 0166 C7F8B030 		str	r3, [r7, #176]
 532:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1632              		.loc 1 532 54
 1633 016a D7F8B030 		ldr	r3, [r7, #176]
 532:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1634              		.loc 1 532 47
 1635 016e 1B68     		ldr	r3, [r3]
 1636 0170 C7F89830 		str	r3, [r7, #152]
 1637              	.LBB328:
 1638              	.LBB329:
 1639              		.loc 2 498 10
 1640 0174 D7F89830 		ldr	r3, [r7, #152]
 1641 0178 1BBA     		rev	r3, r3
 1642              	.LBE329:
 1643              	.LBE328:
 532:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1644              		.loc 1 532 45
 1645 017a 3B64     		str	r3, [r7, #64]
 533:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 256:
 1646              		.loc 1 533 5
 1647 017c 61E0     		b	.L94
 1648              	.L86:
 535:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 1649              		.loc 1 535 42
 1650 017e 4FF40073 		mov	r3, #512
 1651 0182 3B65     		str	r3, [r7, #80]
 536:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1652              		.loc 1 536 54
 1653 0184 D7F8B030 		ldr	r3, [r7, #176]
 536:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1654              		.loc 1 536 47
 1655 0188 1B68     		ldr	r3, [r3]
 1656 018a 7B66     		str	r3, [r7, #100]
 1657              	.LBB330:
 1658              	.LBB331:
 1659              		.loc 2 498 10
 1660 018c 7B6E     		ldr	r3, [r7, #100]
ARM GAS  /tmp/cc2lf3as.s 			page 52


 1661 018e 1BBA     		rev	r3, r3
 1662              	.LBE331:
 1663              	.LBE330:
 536:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1664              		.loc 1 536 45
 1665 0190 7B62     		str	r3, [r7, #36]
 537:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 1666              		.loc 1 537 12
 1667 0192 D7F8B030 		ldr	r3, [r7, #176]
 1668 0196 0433     		adds	r3, r3, #4
 1669 0198 C7F8B030 		str	r3, [r7, #176]
 538:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1670              		.loc 1 538 54
 1671 019c D7F8B030 		ldr	r3, [r7, #176]
 538:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1672              		.loc 1 538 47
 1673 01a0 1B68     		ldr	r3, [r3]
 1674 01a2 BB66     		str	r3, [r7, #104]
 1675              	.LBB332:
 1676              	.LBB333:
 1677              		.loc 2 498 10
 1678 01a4 BB6E     		ldr	r3, [r7, #104]
 1679 01a6 1BBA     		rev	r3, r3
 1680              	.LBE333:
 1681              	.LBE332:
 538:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1682              		.loc 1 538 45
 1683 01a8 BB62     		str	r3, [r7, #40]
 539:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1684              		.loc 1 539 12
 1685 01aa D7F8B030 		ldr	r3, [r7, #176]
 1686 01ae 0433     		adds	r3, r3, #4
 1687 01b0 C7F8B030 		str	r3, [r7, #176]
 540:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1688              		.loc 1 540 54
 1689 01b4 D7F8B030 		ldr	r3, [r7, #176]
 540:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1690              		.loc 1 540 47
 1691 01b8 1B68     		ldr	r3, [r3]
 1692 01ba FB66     		str	r3, [r7, #108]
 1693              	.LBB334:
 1694              	.LBB335:
 1695              		.loc 2 498 10
 1696 01bc FB6E     		ldr	r3, [r7, #108]
 1697 01be 1BBA     		rev	r3, r3
 1698              	.LBE335:
 1699              	.LBE334:
 540:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1700              		.loc 1 540 45
 1701 01c0 FB62     		str	r3, [r7, #44]
 541:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 1702              		.loc 1 541 12
 1703 01c2 D7F8B030 		ldr	r3, [r7, #176]
 1704 01c6 0433     		adds	r3, r3, #4
 1705 01c8 C7F8B030 		str	r3, [r7, #176]
 542:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1706              		.loc 1 542 54
ARM GAS  /tmp/cc2lf3as.s 			page 53


 1707 01cc D7F8B030 		ldr	r3, [r7, #176]
 542:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1708              		.loc 1 542 47
 1709 01d0 1B68     		ldr	r3, [r3]
 1710 01d2 3B67     		str	r3, [r7, #112]
 1711              	.LBB336:
 1712              	.LBB337:
 1713              		.loc 2 498 10
 1714 01d4 3B6F     		ldr	r3, [r7, #112]
 1715 01d6 1BBA     		rev	r3, r3
 1716              	.LBE337:
 1717              	.LBE336:
 542:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1718              		.loc 1 542 45
 1719 01d8 3B63     		str	r3, [r7, #48]
 543:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1720              		.loc 1 543 12
 1721 01da D7F8B030 		ldr	r3, [r7, #176]
 1722 01de 0433     		adds	r3, r3, #4
 1723 01e0 C7F8B030 		str	r3, [r7, #176]
 544:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1724              		.loc 1 544 54
 1725 01e4 D7F8B030 		ldr	r3, [r7, #176]
 544:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1726              		.loc 1 544 47
 1727 01e8 1B68     		ldr	r3, [r3]
 1728 01ea 7B67     		str	r3, [r7, #116]
 1729              	.LBB338:
 1730              	.LBB339:
 1731              		.loc 2 498 10
 1732 01ec 7B6F     		ldr	r3, [r7, #116]
 1733 01ee 1BBA     		rev	r3, r3
 1734              	.LBE339:
 1735              	.LBE338:
 544:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1736              		.loc 1 544 45
 1737 01f0 7B63     		str	r3, [r7, #52]
 545:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1738              		.loc 1 545 12
 1739 01f2 D7F8B030 		ldr	r3, [r7, #176]
 1740 01f6 0433     		adds	r3, r3, #4
 1741 01f8 C7F8B030 		str	r3, [r7, #176]
 546:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1742              		.loc 1 546 54
 1743 01fc D7F8B030 		ldr	r3, [r7, #176]
 546:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1744              		.loc 1 546 47
 1745 0200 1B68     		ldr	r3, [r3]
 1746 0202 BB67     		str	r3, [r7, #120]
 1747              	.LBB340:
 1748              	.LBB341:
 1749              		.loc 2 498 10
 1750 0204 BB6F     		ldr	r3, [r7, #120]
 1751 0206 1BBA     		rev	r3, r3
 1752              	.LBE341:
 1753              	.LBE340:
 546:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc2lf3as.s 			page 54


 1754              		.loc 1 546 45
 1755 0208 BB63     		str	r3, [r7, #56]
 547:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1756              		.loc 1 547 12
 1757 020a D7F8B030 		ldr	r3, [r7, #176]
 1758 020e 0433     		adds	r3, r3, #4
 1759 0210 C7F8B030 		str	r3, [r7, #176]
 548:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1760              		.loc 1 548 54
 1761 0214 D7F8B030 		ldr	r3, [r7, #176]
 548:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1762              		.loc 1 548 47
 1763 0218 1B68     		ldr	r3, [r3]
 1764 021a FB67     		str	r3, [r7, #124]
 1765              	.LBB342:
 1766              	.LBB343:
 1767              		.loc 2 498 10
 1768 021c FB6F     		ldr	r3, [r7, #124]
 1769 021e 1BBA     		rev	r3, r3
 1770              	.LBE343:
 1771              	.LBE342:
 548:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1772              		.loc 1 548 45
 1773 0220 FB63     		str	r3, [r7, #60]
 549:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1774              		.loc 1 549 12
 1775 0222 D7F8B030 		ldr	r3, [r7, #176]
 1776 0226 0433     		adds	r3, r3, #4
 1777 0228 C7F8B030 		str	r3, [r7, #176]
 550:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1778              		.loc 1 550 54
 1779 022c D7F8B030 		ldr	r3, [r7, #176]
 550:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1780              		.loc 1 550 47
 1781 0230 1B68     		ldr	r3, [r3]
 1782 0232 C7F88030 		str	r3, [r7, #128]
 1783              	.LBB344:
 1784              	.LBB345:
 1785              		.loc 2 498 10
 1786 0236 D7F88030 		ldr	r3, [r7, #128]
 1787 023a 1BBA     		rev	r3, r3
 1788              	.LBE345:
 1789              	.LBE344:
 550:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 1790              		.loc 1 550 45
 1791 023c 3B64     		str	r3, [r7, #64]
 551:./Lib/Src/stm32f4xx_cryp_aes.c ****     default:
 1792              		.loc 1 551 5
 1793 023e 00E0     		b	.L94
 1794              	.L125:
 1795              		.loc 1 553 5
 1796 0240 00BF     		nop
 1797              	.L94:
 554:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 555:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 556:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 1798              		.loc 1 556 50
ARM GAS  /tmp/cc2lf3as.s 			page 55


 1799 0242 D7F8AC30 		ldr	r3, [r7, #172]
 1800              		.loc 1 556 43
 1801 0246 1B68     		ldr	r3, [r3]
 1802 0248 7B65     		str	r3, [r7, #84]
 1803              	.LBB346:
 1804              	.LBB347:
 1805              		.loc 2 498 10
 1806 024a 7B6D     		ldr	r3, [r7, #84]
 1807 024c 1BBA     		rev	r3, r3
 1808              	.LBE347:
 1809              	.LBE346:
 1810              		.loc 1 556 41
 1811 024e 7B61     		str	r3, [r7, #20]
 557:./Lib/Src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1812              		.loc 1 557 9
 1813 0250 D7F8AC30 		ldr	r3, [r7, #172]
 1814 0254 0433     		adds	r3, r3, #4
 1815 0256 C7F8AC30 		str	r3, [r7, #172]
 558:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 1816              		.loc 1 558 50
 1817 025a D7F8AC30 		ldr	r3, [r7, #172]
 1818              		.loc 1 558 43
 1819 025e 1B68     		ldr	r3, [r3]
 1820 0260 BB65     		str	r3, [r7, #88]
 1821              	.LBB348:
 1822              	.LBB349:
 1823              		.loc 2 498 10
 1824 0262 BB6D     		ldr	r3, [r7, #88]
 1825 0264 1BBA     		rev	r3, r3
 1826              	.LBE349:
 1827              	.LBE348:
 1828              		.loc 1 558 41
 1829 0266 BB61     		str	r3, [r7, #24]
 559:./Lib/Src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1830              		.loc 1 559 9
 1831 0268 D7F8AC30 		ldr	r3, [r7, #172]
 1832 026c 0433     		adds	r3, r3, #4
 1833 026e C7F8AC30 		str	r3, [r7, #172]
 560:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 1834              		.loc 1 560 50
 1835 0272 D7F8AC30 		ldr	r3, [r7, #172]
 1836              		.loc 1 560 43
 1837 0276 1B68     		ldr	r3, [r3]
 1838 0278 FB65     		str	r3, [r7, #92]
 1839              	.LBB350:
 1840              	.LBB351:
 1841              		.loc 2 498 10
 1842 027a FB6D     		ldr	r3, [r7, #92]
 1843 027c 1BBA     		rev	r3, r3
 1844              	.LBE351:
 1845              	.LBE350:
 1846              		.loc 1 560 41
 1847 027e FB61     		str	r3, [r7, #28]
 561:./Lib/Src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1848              		.loc 1 561 9
 1849 0280 D7F8AC30 		ldr	r3, [r7, #172]
 1850 0284 0433     		adds	r3, r3, #4
ARM GAS  /tmp/cc2lf3as.s 			page 56


 1851 0286 C7F8AC30 		str	r3, [r7, #172]
 562:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 1852              		.loc 1 562 50
 1853 028a D7F8AC30 		ldr	r3, [r7, #172]
 1854              		.loc 1 562 43
 1855 028e 1B68     		ldr	r3, [r3]
 1856 0290 3B66     		str	r3, [r7, #96]
 1857              	.LBB352:
 1858              	.LBB353:
 1859              		.loc 2 498 10
 1860 0292 3B6E     		ldr	r3, [r7, #96]
 1861 0294 1BBA     		rev	r3, r3
 1862              	.LBE353:
 1863              	.LBE352:
 1864              		.loc 1 562 41
 1865 0296 3B62     		str	r3, [r7, #32]
 563:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 564:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Key Initialisation */
 565:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1866              		.loc 1 565 3
 1867 0298 07F12403 		add	r3, r7, #36
 1868 029c 1846     		mov	r0, r3
 1869 029e FFF7FEFF 		bl	CRYP_KeyInit
 566:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 567:./Lib/Src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 568:./Lib/Src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 1870              		.loc 1 568 5
 1871 02a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1872 02a4 002B     		cmp	r3, #0
 1873 02a6 02D1     		bne	.L113
 569:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 570:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for decryption process */
 571:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1874              		.loc 1 571 41
 1875 02a8 0423     		movs	r3, #4
 1876 02aa 7B64     		str	r3, [r7, #68]
 1877 02ac 01E0     		b	.L114
 1878              	.L113:
 572:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 573:./Lib/Src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 574:./Lib/Src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 575:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 576:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 577:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 1879              		.loc 1 577 41
 1880 02ae 0023     		movs	r3, #0
 1881 02b0 7B64     		str	r3, [r7, #68]
 1882              	.L114:
 578:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 579:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CTR;
 1883              		.loc 1 579 40
 1884 02b2 3023     		movs	r3, #48
 1885 02b4 BB64     		str	r3, [r7, #72]
 580:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 1886              		.loc 1 580 40
 1887 02b6 8023     		movs	r3, #128
 1888 02b8 FB64     		str	r3, [r7, #76]
ARM GAS  /tmp/cc2lf3as.s 			page 57


 581:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 1889              		.loc 1 581 3
 1890 02ba 07F14403 		add	r3, r7, #68
 1891 02be 1846     		mov	r0, r3
 1892 02c0 FFF7FEFF 		bl	CRYP_Init
 582:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 583:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 584:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_IVInit(&AES_CRYP_IVInitStructure);
 1893              		.loc 1 584 3
 1894 02c4 07F11403 		add	r3, r7, #20
 1895 02c8 1846     		mov	r0, r3
 1896 02ca FFF7FEFF 		bl	CRYP_IVInit
 585:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 586:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 587:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 1897              		.loc 1 587 3
 1898 02ce FFF7FEFF 		bl	CRYP_FIFOFlush
 588:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 589:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 590:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 1899              		.loc 1 590 3
 1900 02d2 0120     		movs	r0, #1
 1901 02d4 FFF7FEFF 		bl	CRYP_Cmd
 591:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 592:./Lib/Src/stm32f4xx_cryp_aes.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 1902              		.loc 1 592 6
 1903 02d8 FFF7FEFF 		bl	CRYP_GetCmdStatus
 1904 02dc 0346     		mov	r3, r0
 1905              		.loc 1 592 5
 1906 02de 002B     		cmp	r3, #0
 1907 02e0 01D1     		bne	.L115
 593:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 594:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 595:./Lib/Src/stm32f4xx_cryp_aes.c ****        the CRYP peripheral (please check the device sales type. */
 596:./Lib/Src/stm32f4xx_cryp_aes.c ****     return(ERROR);
 1908              		.loc 1 596 11
 1909 02e2 0023     		movs	r3, #0
 1910 02e4 8BE0     		b	.L124
 1911              	.L115:
 597:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 598:./Lib/Src/stm32f4xx_cryp_aes.c ****   
 599:./Lib/Src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1912              		.loc 1 599 8
 1913 02e6 0023     		movs	r3, #0
 1914 02e8 C7F8B830 		str	r3, [r7, #184]
 1915              		.loc 1 599 3
 1916 02ec 77E0     		b	.L117
 1917              	.L123:
 600:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 601:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 602:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 603:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1918              		.loc 1 603 18
 1919 02ee D7F8C030 		ldr	r3, [r7, #192]
 1920              		.loc 1 603 5
 1921 02f2 1B68     		ldr	r3, [r3]
 1922 02f4 1846     		mov	r0, r3
ARM GAS  /tmp/cc2lf3as.s 			page 58


 1923 02f6 FFF7FEFF 		bl	CRYP_DataIn
 604:./Lib/Src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1924              		.loc 1 604 14
 1925 02fa D7F8C030 		ldr	r3, [r7, #192]
 1926 02fe 0433     		adds	r3, r3, #4
 1927 0300 C7F8C030 		str	r3, [r7, #192]
 605:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1928              		.loc 1 605 18
 1929 0304 D7F8C030 		ldr	r3, [r7, #192]
 1930              		.loc 1 605 5
 1931 0308 1B68     		ldr	r3, [r3]
 1932 030a 1846     		mov	r0, r3
 1933 030c FFF7FEFF 		bl	CRYP_DataIn
 606:./Lib/Src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1934              		.loc 1 606 14
 1935 0310 D7F8C030 		ldr	r3, [r7, #192]
 1936 0314 0433     		adds	r3, r3, #4
 1937 0316 C7F8C030 		str	r3, [r7, #192]
 607:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1938              		.loc 1 607 18
 1939 031a D7F8C030 		ldr	r3, [r7, #192]
 1940              		.loc 1 607 5
 1941 031e 1B68     		ldr	r3, [r3]
 1942 0320 1846     		mov	r0, r3
 1943 0322 FFF7FEFF 		bl	CRYP_DataIn
 608:./Lib/Src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1944              		.loc 1 608 14
 1945 0326 D7F8C030 		ldr	r3, [r7, #192]
 1946 032a 0433     		adds	r3, r3, #4
 1947 032c C7F8C030 		str	r3, [r7, #192]
 609:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1948              		.loc 1 609 18
 1949 0330 D7F8C030 		ldr	r3, [r7, #192]
 1950              		.loc 1 609 5
 1951 0334 1B68     		ldr	r3, [r3]
 1952 0336 1846     		mov	r0, r3
 1953 0338 FFF7FEFF 		bl	CRYP_DataIn
 610:./Lib/Src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1954              		.loc 1 610 14
 1955 033c D7F8C030 		ldr	r3, [r7, #192]
 1956 0340 0433     		adds	r3, r3, #4
 1957 0342 C7F8C030 		str	r3, [r7, #192]
 611:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 612:./Lib/Src/stm32f4xx_cryp_aes.c ****     counter = 0;
 1958              		.loc 1 612 13
 1959 0346 0023     		movs	r3, #0
 1960 0348 3B61     		str	r3, [r7, #16]
 1961              	.L119:
 613:./Lib/Src/stm32f4xx_cryp_aes.c ****     do
 614:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 615:./Lib/Src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 1962              		.loc 1 615 20 discriminator 2
 1963 034a 1020     		movs	r0, #16
 1964 034c FFF7FEFF 		bl	CRYP_GetFlagStatus
 1965 0350 0346     		mov	r3, r0
 1966              		.loc 1 615 18 discriminator 2
 1967 0352 C7F8B430 		str	r3, [r7, #180]
ARM GAS  /tmp/cc2lf3as.s 			page 59


 616:./Lib/Src/stm32f4xx_cryp_aes.c ****       counter++;
 1968              		.loc 1 616 14 discriminator 2
 1969 0356 3B69     		ldr	r3, [r7, #16]
 1970 0358 0133     		adds	r3, r3, #1
 1971 035a 3B61     		str	r3, [r7, #16]
 617:./Lib/Src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1972              		.loc 1 617 22 discriminator 2
 1973 035c 3B69     		ldr	r3, [r7, #16]
 1974              		.loc 1 617 42 discriminator 2
 1975 035e B3F5803F 		cmp	r3, #65536
 1976 0362 03D0     		beq	.L118
 1977              		.loc 1 617 42 is_stmt 0 discriminator 1
 1978 0364 D7F8B430 		ldr	r3, [r7, #180]
 1979 0368 002B     		cmp	r3, #0
 1980 036a EED1     		bne	.L119
 1981              	.L118:
 618:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 619:./Lib/Src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 1982              		.loc 1 619 8 is_stmt 1
 1983 036c D7F8B430 		ldr	r3, [r7, #180]
 1984 0370 002B     		cmp	r3, #0
 1985 0372 03D0     		beq	.L120
 620:./Lib/Src/stm32f4xx_cryp_aes.c ****    {
 621:./Lib/Src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1986              		.loc 1 621 15
 1987 0374 0023     		movs	r3, #0
 1988 0376 87F8C730 		strb	r3, [r7, #199]
 1989 037a 2BE0     		b	.L121
 1990              	.L120:
 622:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 623:./Lib/Src/stm32f4xx_cryp_aes.c ****     else
 624:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 625:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 626:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 627:./Lib/Src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1991              		.loc 1 627 8
 1992 037c D7F8BC40 		ldr	r4, [r7, #188]
 1993              		.loc 1 627 34
 1994 0380 FFF7FEFF 		bl	CRYP_DataOut
 1995 0384 0346     		mov	r3, r0
 1996              		.loc 1 627 32
 1997 0386 2360     		str	r3, [r4]
 628:./Lib/Src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1998              		.loc 1 628 17
 1999 0388 D7F8BC30 		ldr	r3, [r7, #188]
 2000 038c 0433     		adds	r3, r3, #4
 2001 038e C7F8BC30 		str	r3, [r7, #188]
 629:./Lib/Src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2002              		.loc 1 629 8
 2003 0392 D7F8BC40 		ldr	r4, [r7, #188]
 2004              		.loc 1 629 34
 2005 0396 FFF7FEFF 		bl	CRYP_DataOut
 2006 039a 0346     		mov	r3, r0
 2007              		.loc 1 629 32
 2008 039c 2360     		str	r3, [r4]
 630:./Lib/Src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2009              		.loc 1 630 17
ARM GAS  /tmp/cc2lf3as.s 			page 60


 2010 039e D7F8BC30 		ldr	r3, [r7, #188]
 2011 03a2 0433     		adds	r3, r3, #4
 2012 03a4 C7F8BC30 		str	r3, [r7, #188]
 631:./Lib/Src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2013              		.loc 1 631 8
 2014 03a8 D7F8BC40 		ldr	r4, [r7, #188]
 2015              		.loc 1 631 34
 2016 03ac FFF7FEFF 		bl	CRYP_DataOut
 2017 03b0 0346     		mov	r3, r0
 2018              		.loc 1 631 32
 2019 03b2 2360     		str	r3, [r4]
 632:./Lib/Src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2020              		.loc 1 632 17
 2021 03b4 D7F8BC30 		ldr	r3, [r7, #188]
 2022 03b8 0433     		adds	r3, r3, #4
 2023 03ba C7F8BC30 		str	r3, [r7, #188]
 633:./Lib/Src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2024              		.loc 1 633 8
 2025 03be D7F8BC40 		ldr	r4, [r7, #188]
 2026              		.loc 1 633 34
 2027 03c2 FFF7FEFF 		bl	CRYP_DataOut
 2028 03c6 0346     		mov	r3, r0
 2029              		.loc 1 633 32
 2030 03c8 2360     		str	r3, [r4]
 634:./Lib/Src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2031              		.loc 1 634 17
 2032 03ca D7F8BC30 		ldr	r3, [r7, #188]
 2033 03ce 0433     		adds	r3, r3, #4
 2034 03d0 C7F8BC30 		str	r3, [r7, #188]
 2035              	.L121:
 599:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 2036              		.loc 1 599 49 discriminator 2
 2037 03d4 D7F8B830 		ldr	r3, [r7, #184]
 2038 03d8 1033     		adds	r3, r3, #16
 2039 03da C7F8B830 		str	r3, [r7, #184]
 2040              	.L117:
 599:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 2041              		.loc 1 599 25 discriminator 1
 2042 03de D7F8B820 		ldr	r2, [r7, #184]
 2043 03e2 D7F8DC30 		ldr	r3, [r7, #220]
 2044 03e6 9A42     		cmp	r2, r3
 2045 03e8 04D2     		bcs	.L122
 599:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 2046              		.loc 1 599 25 is_stmt 0 discriminator 3
 2047 03ea 97F8C730 		ldrb	r3, [r7, #199]	@ zero_extendqisi2
 2048 03ee 002B     		cmp	r3, #0
 2049 03f0 7FF47DAF 		bne	.L123
 2050              	.L122:
 635:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 636:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 637:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 638:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 2051              		.loc 1 638 3 is_stmt 1
 2052 03f4 0020     		movs	r0, #0
 2053 03f6 FFF7FEFF 		bl	CRYP_Cmd
 639:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 640:./Lib/Src/stm32f4xx_cryp_aes.c ****   return status;
ARM GAS  /tmp/cc2lf3as.s 			page 61


 2054              		.loc 1 640 10
 2055 03fa 97F8C730 		ldrb	r3, [r7, #199]	@ zero_extendqisi2
 2056              	.L124:
 641:./Lib/Src/stm32f4xx_cryp_aes.c **** }
 2057              		.loc 1 641 1 discriminator 1
 2058 03fe 1846     		mov	r0, r3
 2059 0400 CC37     		adds	r7, r7, #204
 2060              		.cfi_def_cfa_offset 12
 2061 0402 BD46     		mov	sp, r7
 2062              		.cfi_def_cfa_register 13
 2063              		@ sp needed
 2064 0404 90BD     		pop	{r4, r7, pc}
 2065              		.cfi_endproc
 2066              	.LFE125:
 2068              		.section	.text.CRYP_AES_GCM,"ax",%progbits
 2069              		.align	1
 2070              		.global	CRYP_AES_GCM
 2071              		.syntax unified
 2072              		.thumb
 2073              		.thumb_func
 2075              	CRYP_AES_GCM:
 2076              	.LFB126:
 642:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 643:./Lib/Src/stm32f4xx_cryp_aes.c **** /**
 644:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in GCM Mode. The GCM and CCM modes
 645:./Lib/Src/stm32f4xx_cryp_aes.c ****   *         are available only on STM32F437x Devices.
 646:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 647:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
 648:./Lib/Src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 649:./Lib/Src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 650:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 651:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 652:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 653:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 654:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer in bytes, must be a multiple of 16.
 655:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Header: pointer to the header buffer.
 656:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Hlength: length of the header buffer in bytes, must be a multiple of 16.  
 657:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 658:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  AuthTAG: pointer to the authentication TAG buffer.
 659:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 660:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 661:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 662:./Lib/Src/stm32f4xx_cryp_aes.c ****   */
 663:./Lib/Src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_GCM(uint8_t Mode, uint8_t InitVectors[16],
 664:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t *Key, uint16_t Keysize,
 665:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t *Input, uint32_t ILength,
 666:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t *Header, uint32_t HLength,
 667:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output, uint8_t *AuthTAG)
 668:./Lib/Src/stm32f4xx_cryp_aes.c **** {
 2077              		.loc 1 668 1
 2078              		.cfi_startproc
 2079              		@ args = 24, pretend = 0, frame = 264
 2080              		@ frame_needed = 1, uses_anonymous_args = 0
 2081 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2082              		.cfi_def_cfa_offset 28
 2083              		.cfi_offset 4, -28
 2084              		.cfi_offset 5, -24
ARM GAS  /tmp/cc2lf3as.s 			page 62


 2085              		.cfi_offset 6, -20
 2086              		.cfi_offset 7, -16
 2087              		.cfi_offset 8, -12
 2088              		.cfi_offset 9, -8
 2089              		.cfi_offset 14, -4
 2090 0004 C3B0     		sub	sp, sp, #268
 2091              		.cfi_def_cfa_offset 296
 2092 0006 00AF     		add	r7, sp, #0
 2093              		.cfi_def_cfa_register 7
 2094 0008 0646     		mov	r6, r0
 2095 000a 07F58470 		add	r0, r7, #264
 2096 000e A0F58070 		sub	r0, r0, #256
 2097 0012 0160     		str	r1, [r0]
 2098 0014 07F58471 		add	r1, r7, #264
 2099 0018 A1F58271 		sub	r1, r1, #260
 2100 001c 0A60     		str	r2, [r1]
 2101 001e 1A46     		mov	r2, r3
 2102 0020 3346     		mov	r3, r6
 2103 0022 FB73     		strb	r3, [r7, #15]
 2104 0024 1346     		mov	r3, r2	@ movhi
 2105 0026 BB81     		strh	r3, [r7, #12]	@ movhi
 669:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 670:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 671:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 672:./Lib/Src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 2106              		.loc 1 672 17
 2107 0028 0023     		movs	r3, #0
 2108 002a 7B61     		str	r3, [r7, #20]
 673:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 2109              		.loc 1 673 12
 2110 002c 0023     		movs	r3, #0
 2111 002e C7F8F030 		str	r3, [r7, #240]
 674:./Lib/Src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 2112              		.loc 1 674 15
 2113 0032 0123     		movs	r3, #1
 2114 0034 87F80731 		strb	r3, [r7, #263]
 675:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 2115              		.loc 1 675 12
 2116 0038 07F58473 		add	r3, r7, #264
 2117 003c A3F58273 		sub	r3, r3, #260
 2118 0040 1B68     		ldr	r3, [r3]
 2119 0042 C7F8EC30 		str	r3, [r7, #236]
 676:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 2120              		.loc 1 676 12
 2121 0046 D7F82831 		ldr	r3, [r7, #296]
 2122 004a C7F80031 		str	r3, [r7, #256]
 677:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 2123              		.loc 1 677 12
 2124 004e D7F83831 		ldr	r3, [r7, #312]
 2125 0052 C7F8FC30 		str	r3, [r7, #252]
 678:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 2126              		.loc 1 678 12
 2127 0056 07F58473 		add	r3, r7, #264
 2128 005a A3F58073 		sub	r3, r3, #256
 2129 005e 1B68     		ldr	r3, [r3]
 2130 0060 C7F8E830 		str	r3, [r7, #232]
 679:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t headeraddr = (uint32_t)Header;
ARM GAS  /tmp/cc2lf3as.s 			page 63


 2131              		.loc 1 679 12
 2132 0064 D7F83031 		ldr	r3, [r7, #304]
 2133 0068 C7F8F830 		str	r3, [r7, #248]
 680:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t tagaddr = (uint32_t)AuthTAG;
 2134              		.loc 1 680 12
 2135 006c D7F83C31 		ldr	r3, [r7, #316]
 2136 0070 C7F8E430 		str	r3, [r7, #228]
 681:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint64_t headerlength = HLength * 8;/* header length in bits */
 2137              		.loc 1 681 35
 2138 0074 D7F83431 		ldr	r3, [r7, #308]
 2139 0078 DB00     		lsls	r3, r3, #3
 2140              		.loc 1 681 12
 2141 007a 0022     		movs	r2, #0
 2142 007c 9846     		mov	r8, r3
 2143 007e 9146     		mov	r9, r2
 2144 0080 C7E93689 		strd	r8, [r7, #216]
 682:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint64_t inputlength = ILength * 8;/* input length in bits */
 2145              		.loc 1 682 34
 2146 0084 D7F82C31 		ldr	r3, [r7, #300]
 2147 0088 DB00     		lsls	r3, r3, #3
 2148              		.loc 1 682 12
 2149 008a 0022     		movs	r2, #0
 2150 008c 1C46     		mov	r4, r3
 2151 008e 1546     		mov	r5, r2
 2152 0090 C7E93445 		strd	r4, [r7, #208]
 683:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t loopcounter = 0;
 2153              		.loc 1 683 12
 2154 0094 0023     		movs	r3, #0
 2155 0096 C7F8F430 		str	r3, [r7, #244]
 684:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 685:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 686:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 2156              		.loc 1 686 3
 2157 009a 07F12803 		add	r3, r7, #40
 2158 009e 1846     		mov	r0, r3
 2159 00a0 FFF7FEFF 		bl	CRYP_KeyStructInit
 687:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 688:./Lib/Src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 2160              		.loc 1 688 3
 2161 00a4 BB89     		ldrh	r3, [r7, #12]
 2162 00a6 B3F5807F 		cmp	r3, #256
 2163 00aa 00F09280 		beq	.L127
 2164 00ae B3F5807F 		cmp	r3, #256
 2165 00b2 00F3FD80 		bgt	.L206
 2166 00b6 802B     		cmp	r3, #128
 2167 00b8 02D0     		beq	.L129
 2168 00ba C02B     		cmp	r3, #192
 2169 00bc 36D0     		beq	.L130
 689:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 690:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 128:
 691:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 692:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 693:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 694:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 695:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 696:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 697:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc2lf3as.s 			page 64


 698:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 699:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 700:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 192:
 701:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 702:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 703:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 704:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 705:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 706:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 707:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 708:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 709:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 710:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 711:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 712:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 713:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 714:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 256:
 715:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 716:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 717:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 718:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 719:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 720:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 721:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 722:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 723:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 724:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 725:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 726:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 727:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 728:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 729:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 730:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 731:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 732:./Lib/Src/stm32f4xx_cryp_aes.c ****     default:
 733:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 2170              		.loc 1 733 5
 2171 00be F7E0     		b	.L206
 2172              	.L129:
 691:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 2173              		.loc 1 691 41
 2174 00c0 0023     		movs	r3, #0
 2175 00c2 7B65     		str	r3, [r7, #84]
 692:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2176              		.loc 1 692 54
 2177 00c4 D7F8EC30 		ldr	r3, [r7, #236]
 692:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2178              		.loc 1 692 47
 2179 00c8 1B68     		ldr	r3, [r3]
 2180 00ca C7F8C030 		str	r3, [r7, #192]
 2181              	.LBB354:
 2182              	.LBB355:
 2183              		.loc 2 498 10
 2184 00ce D7F8C030 		ldr	r3, [r7, #192]
 2185 00d2 1BBA     		rev	r3, r3
 2186              	.LBE355:
 2187              	.LBE354:
ARM GAS  /tmp/cc2lf3as.s 			page 65


 692:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2188              		.loc 1 692 45
 2189 00d4 BB63     		str	r3, [r7, #56]
 693:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 2190              		.loc 1 693 12
 2191 00d6 D7F8EC30 		ldr	r3, [r7, #236]
 2192 00da 0433     		adds	r3, r3, #4
 2193 00dc C7F8EC30 		str	r3, [r7, #236]
 694:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2194              		.loc 1 694 54
 2195 00e0 D7F8EC30 		ldr	r3, [r7, #236]
 694:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2196              		.loc 1 694 47
 2197 00e4 1B68     		ldr	r3, [r3]
 2198 00e6 C7F8C430 		str	r3, [r7, #196]
 2199              	.LBB356:
 2200              	.LBB357:
 2201              		.loc 2 498 10
 2202 00ea D7F8C430 		ldr	r3, [r7, #196]
 2203 00ee 1BBA     		rev	r3, r3
 2204              	.LBE357:
 2205              	.LBE356:
 694:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2206              		.loc 1 694 45
 2207 00f0 FB63     		str	r3, [r7, #60]
 695:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 2208              		.loc 1 695 12
 2209 00f2 D7F8EC30 		ldr	r3, [r7, #236]
 2210 00f6 0433     		adds	r3, r3, #4
 2211 00f8 C7F8EC30 		str	r3, [r7, #236]
 696:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2212              		.loc 1 696 54
 2213 00fc D7F8EC30 		ldr	r3, [r7, #236]
 696:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2214              		.loc 1 696 47
 2215 0100 1B68     		ldr	r3, [r3]
 2216 0102 C7F8C830 		str	r3, [r7, #200]
 2217              	.LBB358:
 2218              	.LBB359:
 2219              		.loc 2 498 10
 2220 0106 D7F8C830 		ldr	r3, [r7, #200]
 2221 010a 1BBA     		rev	r3, r3
 2222              	.LBE359:
 2223              	.LBE358:
 696:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2224              		.loc 1 696 45
 2225 010c 3B64     		str	r3, [r7, #64]
 697:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 2226              		.loc 1 697 12
 2227 010e D7F8EC30 		ldr	r3, [r7, #236]
 2228 0112 0433     		adds	r3, r3, #4
 2229 0114 C7F8EC30 		str	r3, [r7, #236]
 698:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 2230              		.loc 1 698 54
 2231 0118 D7F8EC30 		ldr	r3, [r7, #236]
 698:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 2232              		.loc 1 698 47
ARM GAS  /tmp/cc2lf3as.s 			page 66


 2233 011c 1B68     		ldr	r3, [r3]
 2234 011e C7F8CC30 		str	r3, [r7, #204]
 2235              	.LBB360:
 2236              	.LBB361:
 2237              		.loc 2 498 10
 2238 0122 D7F8CC30 		ldr	r3, [r7, #204]
 2239 0126 1BBA     		rev	r3, r3
 2240              	.LBE361:
 2241              	.LBE360:
 698:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 2242              		.loc 1 698 45
 2243 0128 7B64     		str	r3, [r7, #68]
 699:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 192:
 2244              		.loc 1 699 5
 2245 012a C2E0     		b	.L135
 2246              	.L130:
 701:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 2247              		.loc 1 701 42
 2248 012c 4FF48073 		mov	r3, #256
 2249 0130 7B65     		str	r3, [r7, #84]
 702:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2250              		.loc 1 702 54
 2251 0132 D7F8EC30 		ldr	r3, [r7, #236]
 702:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2252              		.loc 1 702 47
 2253 0136 1B68     		ldr	r3, [r3]
 2254 0138 C7F8A830 		str	r3, [r7, #168]
 2255              	.LBB362:
 2256              	.LBB363:
 2257              		.loc 2 498 10
 2258 013c D7F8A830 		ldr	r3, [r7, #168]
 2259 0140 1BBA     		rev	r3, r3
 2260              	.LBE363:
 2261              	.LBE362:
 702:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2262              		.loc 1 702 45
 2263 0142 3B63     		str	r3, [r7, #48]
 703:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 2264              		.loc 1 703 12
 2265 0144 D7F8EC30 		ldr	r3, [r7, #236]
 2266 0148 0433     		adds	r3, r3, #4
 2267 014a C7F8EC30 		str	r3, [r7, #236]
 704:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2268              		.loc 1 704 54
 2269 014e D7F8EC30 		ldr	r3, [r7, #236]
 704:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2270              		.loc 1 704 47
 2271 0152 1B68     		ldr	r3, [r3]
 2272 0154 C7F8AC30 		str	r3, [r7, #172]
 2273              	.LBB364:
 2274              	.LBB365:
 2275              		.loc 2 498 10
 2276 0158 D7F8AC30 		ldr	r3, [r7, #172]
 2277 015c 1BBA     		rev	r3, r3
 2278              	.LBE365:
 2279              	.LBE364:
 704:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc2lf3as.s 			page 67


 2280              		.loc 1 704 45
 2281 015e 7B63     		str	r3, [r7, #52]
 705:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 2282              		.loc 1 705 12
 2283 0160 D7F8EC30 		ldr	r3, [r7, #236]
 2284 0164 0433     		adds	r3, r3, #4
 2285 0166 C7F8EC30 		str	r3, [r7, #236]
 706:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2286              		.loc 1 706 54
 2287 016a D7F8EC30 		ldr	r3, [r7, #236]
 706:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2288              		.loc 1 706 47
 2289 016e 1B68     		ldr	r3, [r3]
 2290 0170 C7F8B030 		str	r3, [r7, #176]
 2291              	.LBB366:
 2292              	.LBB367:
 2293              		.loc 2 498 10
 2294 0174 D7F8B030 		ldr	r3, [r7, #176]
 2295 0178 1BBA     		rev	r3, r3
 2296              	.LBE367:
 2297              	.LBE366:
 706:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2298              		.loc 1 706 45
 2299 017a BB63     		str	r3, [r7, #56]
 707:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 2300              		.loc 1 707 12
 2301 017c D7F8EC30 		ldr	r3, [r7, #236]
 2302 0180 0433     		adds	r3, r3, #4
 2303 0182 C7F8EC30 		str	r3, [r7, #236]
 708:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2304              		.loc 1 708 54
 2305 0186 D7F8EC30 		ldr	r3, [r7, #236]
 708:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2306              		.loc 1 708 47
 2307 018a 1B68     		ldr	r3, [r3]
 2308 018c C7F8B430 		str	r3, [r7, #180]
 2309              	.LBB368:
 2310              	.LBB369:
 2311              		.loc 2 498 10
 2312 0190 D7F8B430 		ldr	r3, [r7, #180]
 2313 0194 1BBA     		rev	r3, r3
 2314              	.LBE369:
 2315              	.LBE368:
 708:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2316              		.loc 1 708 45
 2317 0196 FB63     		str	r3, [r7, #60]
 709:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 2318              		.loc 1 709 12
 2319 0198 D7F8EC30 		ldr	r3, [r7, #236]
 2320 019c 0433     		adds	r3, r3, #4
 2321 019e C7F8EC30 		str	r3, [r7, #236]
 710:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2322              		.loc 1 710 54
 2323 01a2 D7F8EC30 		ldr	r3, [r7, #236]
 710:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2324              		.loc 1 710 47
 2325 01a6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc2lf3as.s 			page 68


 2326 01a8 C7F8B830 		str	r3, [r7, #184]
 2327              	.LBB370:
 2328              	.LBB371:
 2329              		.loc 2 498 10
 2330 01ac D7F8B830 		ldr	r3, [r7, #184]
 2331 01b0 1BBA     		rev	r3, r3
 2332              	.LBE371:
 2333              	.LBE370:
 710:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2334              		.loc 1 710 45
 2335 01b2 3B64     		str	r3, [r7, #64]
 711:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 2336              		.loc 1 711 12
 2337 01b4 D7F8EC30 		ldr	r3, [r7, #236]
 2338 01b8 0433     		adds	r3, r3, #4
 2339 01ba C7F8EC30 		str	r3, [r7, #236]
 712:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 2340              		.loc 1 712 54
 2341 01be D7F8EC30 		ldr	r3, [r7, #236]
 712:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 2342              		.loc 1 712 47
 2343 01c2 1B68     		ldr	r3, [r3]
 2344 01c4 C7F8BC30 		str	r3, [r7, #188]
 2345              	.LBB372:
 2346              	.LBB373:
 2347              		.loc 2 498 10
 2348 01c8 D7F8BC30 		ldr	r3, [r7, #188]
 2349 01cc 1BBA     		rev	r3, r3
 2350              	.LBE373:
 2351              	.LBE372:
 712:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 2352              		.loc 1 712 45
 2353 01ce 7B64     		str	r3, [r7, #68]
 713:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 256:
 2354              		.loc 1 713 5
 2355 01d0 6FE0     		b	.L135
 2356              	.L127:
 715:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 2357              		.loc 1 715 42
 2358 01d2 4FF40073 		mov	r3, #512
 2359 01d6 7B65     		str	r3, [r7, #84]
 716:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2360              		.loc 1 716 54
 2361 01d8 D7F8EC30 		ldr	r3, [r7, #236]
 716:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2362              		.loc 1 716 47
 2363 01dc 1B68     		ldr	r3, [r3]
 2364 01de C7F88830 		str	r3, [r7, #136]
 2365              	.LBB374:
 2366              	.LBB375:
 2367              		.loc 2 498 10
 2368 01e2 D7F88830 		ldr	r3, [r7, #136]
 2369 01e6 1BBA     		rev	r3, r3
 2370              	.LBE375:
 2371              	.LBE374:
 716:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2372              		.loc 1 716 45
ARM GAS  /tmp/cc2lf3as.s 			page 69


 2373 01e8 BB62     		str	r3, [r7, #40]
 717:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 2374              		.loc 1 717 12
 2375 01ea D7F8EC30 		ldr	r3, [r7, #236]
 2376 01ee 0433     		adds	r3, r3, #4
 2377 01f0 C7F8EC30 		str	r3, [r7, #236]
 718:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2378              		.loc 1 718 54
 2379 01f4 D7F8EC30 		ldr	r3, [r7, #236]
 718:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2380              		.loc 1 718 47
 2381 01f8 1B68     		ldr	r3, [r3]
 2382 01fa C7F88C30 		str	r3, [r7, #140]
 2383              	.LBB376:
 2384              	.LBB377:
 2385              		.loc 2 498 10
 2386 01fe D7F88C30 		ldr	r3, [r7, #140]
 2387 0202 1BBA     		rev	r3, r3
 2388              	.LBE377:
 2389              	.LBE376:
 718:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2390              		.loc 1 718 45
 2391 0204 FB62     		str	r3, [r7, #44]
 719:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 2392              		.loc 1 719 12
 2393 0206 D7F8EC30 		ldr	r3, [r7, #236]
 2394 020a 0433     		adds	r3, r3, #4
 2395 020c C7F8EC30 		str	r3, [r7, #236]
 720:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2396              		.loc 1 720 54
 2397 0210 D7F8EC30 		ldr	r3, [r7, #236]
 720:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2398              		.loc 1 720 47
 2399 0214 1B68     		ldr	r3, [r3]
 2400 0216 C7F89030 		str	r3, [r7, #144]
 2401              	.LBB378:
 2402              	.LBB379:
 2403              		.loc 2 498 10
 2404 021a D7F89030 		ldr	r3, [r7, #144]
 2405 021e 1BBA     		rev	r3, r3
 2406              	.LBE379:
 2407              	.LBE378:
 720:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2408              		.loc 1 720 45
 2409 0220 3B63     		str	r3, [r7, #48]
 721:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 2410              		.loc 1 721 12
 2411 0222 D7F8EC30 		ldr	r3, [r7, #236]
 2412 0226 0433     		adds	r3, r3, #4
 2413 0228 C7F8EC30 		str	r3, [r7, #236]
 722:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2414              		.loc 1 722 54
 2415 022c D7F8EC30 		ldr	r3, [r7, #236]
 722:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2416              		.loc 1 722 47
 2417 0230 1B68     		ldr	r3, [r3]
 2418 0232 C7F89430 		str	r3, [r7, #148]
ARM GAS  /tmp/cc2lf3as.s 			page 70


 2419              	.LBB380:
 2420              	.LBB381:
 2421              		.loc 2 498 10
 2422 0236 D7F89430 		ldr	r3, [r7, #148]
 2423 023a 1BBA     		rev	r3, r3
 2424              	.LBE381:
 2425              	.LBE380:
 722:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2426              		.loc 1 722 45
 2427 023c 7B63     		str	r3, [r7, #52]
 723:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 2428              		.loc 1 723 12
 2429 023e D7F8EC30 		ldr	r3, [r7, #236]
 2430 0242 0433     		adds	r3, r3, #4
 2431 0244 C7F8EC30 		str	r3, [r7, #236]
 724:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2432              		.loc 1 724 54
 2433 0248 D7F8EC30 		ldr	r3, [r7, #236]
 724:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2434              		.loc 1 724 47
 2435 024c 1B68     		ldr	r3, [r3]
 2436 024e C7F89830 		str	r3, [r7, #152]
 2437              	.LBB382:
 2438              	.LBB383:
 2439              		.loc 2 498 10
 2440 0252 D7F89830 		ldr	r3, [r7, #152]
 2441 0256 1BBA     		rev	r3, r3
 2442              	.LBE383:
 2443              	.LBE382:
 724:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2444              		.loc 1 724 45
 2445 0258 BB63     		str	r3, [r7, #56]
 725:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 2446              		.loc 1 725 12
 2447 025a D7F8EC30 		ldr	r3, [r7, #236]
 2448 025e 0433     		adds	r3, r3, #4
 2449 0260 C7F8EC30 		str	r3, [r7, #236]
 726:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2450              		.loc 1 726 54
 2451 0264 D7F8EC30 		ldr	r3, [r7, #236]
 726:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2452              		.loc 1 726 47
 2453 0268 1B68     		ldr	r3, [r3]
 2454 026a C7F89C30 		str	r3, [r7, #156]
 2455              	.LBB384:
 2456              	.LBB385:
 2457              		.loc 2 498 10
 2458 026e D7F89C30 		ldr	r3, [r7, #156]
 2459 0272 1BBA     		rev	r3, r3
 2460              	.LBE385:
 2461              	.LBE384:
 726:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2462              		.loc 1 726 45
 2463 0274 FB63     		str	r3, [r7, #60]
 727:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 2464              		.loc 1 727 12
 2465 0276 D7F8EC30 		ldr	r3, [r7, #236]
ARM GAS  /tmp/cc2lf3as.s 			page 71


 2466 027a 0433     		adds	r3, r3, #4
 2467 027c C7F8EC30 		str	r3, [r7, #236]
 728:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2468              		.loc 1 728 54
 2469 0280 D7F8EC30 		ldr	r3, [r7, #236]
 728:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2470              		.loc 1 728 47
 2471 0284 1B68     		ldr	r3, [r3]
 2472 0286 C7F8A030 		str	r3, [r7, #160]
 2473              	.LBB386:
 2474              	.LBB387:
 2475              		.loc 2 498 10
 2476 028a D7F8A030 		ldr	r3, [r7, #160]
 2477 028e 1BBA     		rev	r3, r3
 2478              	.LBE387:
 2479              	.LBE386:
 728:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2480              		.loc 1 728 45
 2481 0290 3B64     		str	r3, [r7, #64]
 729:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 2482              		.loc 1 729 12
 2483 0292 D7F8EC30 		ldr	r3, [r7, #236]
 2484 0296 0433     		adds	r3, r3, #4
 2485 0298 C7F8EC30 		str	r3, [r7, #236]
 730:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 2486              		.loc 1 730 54
 2487 029c D7F8EC30 		ldr	r3, [r7, #236]
 730:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 2488              		.loc 1 730 47
 2489 02a0 1B68     		ldr	r3, [r3]
 2490 02a2 C7F8A430 		str	r3, [r7, #164]
 2491              	.LBB388:
 2492              	.LBB389:
 2493              		.loc 2 498 10
 2494 02a6 D7F8A430 		ldr	r3, [r7, #164]
 2495 02aa 1BBA     		rev	r3, r3
 2496              	.LBE389:
 2497              	.LBE388:
 730:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 2498              		.loc 1 730 45
 2499 02ac 7B64     		str	r3, [r7, #68]
 731:./Lib/Src/stm32f4xx_cryp_aes.c ****     default:
 2500              		.loc 1 731 5
 2501 02ae 00E0     		b	.L135
 2502              	.L206:
 2503              		.loc 1 733 5
 2504 02b0 00BF     		nop
 2505              	.L135:
 734:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 735:./Lib/Src/stm32f4xx_cryp_aes.c ****   
 736:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 737:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 2506              		.loc 1 737 50
 2507 02b2 D7F8E830 		ldr	r3, [r7, #232]
 2508              		.loc 1 737 43
 2509 02b6 1B68     		ldr	r3, [r3]
 2510 02b8 BB67     		str	r3, [r7, #120]
ARM GAS  /tmp/cc2lf3as.s 			page 72


 2511              	.LBB390:
 2512              	.LBB391:
 2513              		.loc 2 498 10
 2514 02ba BB6F     		ldr	r3, [r7, #120]
 2515 02bc 1BBA     		rev	r3, r3
 2516              	.LBE391:
 2517              	.LBE390:
 2518              		.loc 1 737 41
 2519 02be BB61     		str	r3, [r7, #24]
 738:./Lib/Src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 2520              		.loc 1 738 9
 2521 02c0 D7F8E830 		ldr	r3, [r7, #232]
 2522 02c4 0433     		adds	r3, r3, #4
 2523 02c6 C7F8E830 		str	r3, [r7, #232]
 739:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 2524              		.loc 1 739 50
 2525 02ca D7F8E830 		ldr	r3, [r7, #232]
 2526              		.loc 1 739 43
 2527 02ce 1B68     		ldr	r3, [r3]
 2528 02d0 FB67     		str	r3, [r7, #124]
 2529              	.LBB392:
 2530              	.LBB393:
 2531              		.loc 2 498 10
 2532 02d2 FB6F     		ldr	r3, [r7, #124]
 2533 02d4 1BBA     		rev	r3, r3
 2534              	.LBE393:
 2535              	.LBE392:
 2536              		.loc 1 739 41
 2537 02d6 FB61     		str	r3, [r7, #28]
 740:./Lib/Src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 2538              		.loc 1 740 9
 2539 02d8 D7F8E830 		ldr	r3, [r7, #232]
 2540 02dc 0433     		adds	r3, r3, #4
 2541 02de C7F8E830 		str	r3, [r7, #232]
 741:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 2542              		.loc 1 741 50
 2543 02e2 D7F8E830 		ldr	r3, [r7, #232]
 2544              		.loc 1 741 43
 2545 02e6 1B68     		ldr	r3, [r3]
 2546 02e8 C7F88030 		str	r3, [r7, #128]
 2547              	.LBB394:
 2548              	.LBB395:
 2549              		.loc 2 498 10
 2550 02ec D7F88030 		ldr	r3, [r7, #128]
 2551 02f0 1BBA     		rev	r3, r3
 2552              	.LBE395:
 2553              	.LBE394:
 2554              		.loc 1 741 41
 2555 02f2 3B62     		str	r3, [r7, #32]
 742:./Lib/Src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 2556              		.loc 1 742 9
 2557 02f4 D7F8E830 		ldr	r3, [r7, #232]
 2558 02f8 0433     		adds	r3, r3, #4
 2559 02fa C7F8E830 		str	r3, [r7, #232]
 743:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 2560              		.loc 1 743 50
 2561 02fe D7F8E830 		ldr	r3, [r7, #232]
ARM GAS  /tmp/cc2lf3as.s 			page 73


 2562              		.loc 1 743 43
 2563 0302 1B68     		ldr	r3, [r3]
 2564 0304 C7F88430 		str	r3, [r7, #132]
 2565              	.LBB396:
 2566              	.LBB397:
 2567              		.loc 2 498 10
 2568 0308 D7F88430 		ldr	r3, [r7, #132]
 2569 030c 1BBA     		rev	r3, r3
 2570              	.LBE397:
 2571              	.LBE396:
 2572              		.loc 1 743 41
 2573 030e 7B62     		str	r3, [r7, #36]
 744:./Lib/Src/stm32f4xx_cryp_aes.c ****   
 745:./Lib/Src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 746:./Lib/Src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_ENCRYPT) /* AES encryption */
 2574              		.loc 1 746 5
 2575 0310 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2576 0312 012B     		cmp	r3, #1
 2577 0314 40F0AE81 		bne	.L154
 747:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 748:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 749:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 2578              		.loc 1 749 5
 2579 0318 FFF7FEFF 		bl	CRYP_FIFOFlush
 750:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 751:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 752:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 2580              		.loc 1 752 5
 2581 031c 07F12803 		add	r3, r7, #40
 2582 0320 1846     		mov	r0, r3
 2583 0322 FFF7FEFF 		bl	CRYP_KeyInit
 753:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 754:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* CRYP Initialization Vectors */
 755:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_IVInit(&AES_CRYP_IVInitStructure);
 2584              		.loc 1 755 5
 2585 0326 07F11803 		add	r3, r7, #24
 2586 032a 1846     		mov	r0, r3
 2587 032c FFF7FEFF 		bl	CRYP_IVInit
 756:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 757:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 758:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 2588              		.loc 1 758 41
 2589 0330 0023     		movs	r3, #0
 2590 0332 BB64     		str	r3, [r7, #72]
 759:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_GCM;
 2591              		.loc 1 759 42
 2592 0334 4FF40023 		mov	r3, #524288
 2593 0338 FB64     		str	r3, [r7, #76]
 760:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 2594              		.loc 1 760 42
 2595 033a 8023     		movs	r3, #128
 2596 033c 3B65     		str	r3, [r7, #80]
 761:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 2597              		.loc 1 761 5
 2598 033e 07F14803 		add	r3, r7, #72
 2599 0342 1846     		mov	r0, r3
 2600 0344 FFF7FEFF 		bl	CRYP_Init
ARM GAS  /tmp/cc2lf3as.s 			page 74


 762:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 763:./Lib/Src/stm32f4xx_cryp_aes.c ****     /***************************** Init phase *********************************/
 764:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Select init phase */
 765:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Init);
 2601              		.loc 1 765 5
 2602 0348 0020     		movs	r0, #0
 2603 034a FFF7FEFF 		bl	CRYP_PhaseConfig
 766:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 767:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 768:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 2604              		.loc 1 768 5
 2605 034e 0120     		movs	r0, #1
 2606 0350 FFF7FEFF 		bl	CRYP_Cmd
 769:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 770:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Wait for CRYPEN bit to be 0 */
 771:./Lib/Src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetCmdStatus() == ENABLE)
 2607              		.loc 1 771 10
 2608 0354 00BF     		nop
 2609              	.L155:
 2610              		.loc 1 771 11 discriminator 1
 2611 0356 FFF7FEFF 		bl	CRYP_GetCmdStatus
 2612 035a 0346     		mov	r3, r0
 2613              		.loc 1 771 31 discriminator 1
 2614 035c 012B     		cmp	r3, #1
 2615 035e FAD0     		beq	.L155
 772:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 773:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 774:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 775:./Lib/Src/stm32f4xx_cryp_aes.c ****     /***************************** header phase *******************************/
 776:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(HLength != 0)
 2616              		.loc 1 776 7
 2617 0360 D7F83431 		ldr	r3, [r7, #308]
 2618 0364 002B     		cmp	r3, #0
 2619 0366 69D0     		beq	.L156
 777:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 778:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Select header phase */
 779:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Header);
 2620              		.loc 1 779 7
 2621 0368 4FF48030 		mov	r0, #65536
 2622 036c FFF7FEFF 		bl	CRYP_PhaseConfig
 780:./Lib/Src/stm32f4xx_cryp_aes.c ****       
 781:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
 782:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 2623              		.loc 1 782 7
 2624 0370 0120     		movs	r0, #1
 2625 0372 FFF7FEFF 		bl	CRYP_Cmd
 783:./Lib/Src/stm32f4xx_cryp_aes.c ****       
 784:./Lib/Src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 2626              		.loc 1 784 10
 2627 0376 FFF7FEFF 		bl	CRYP_GetCmdStatus
 2628 037a 0346     		mov	r3, r0
 2629              		.loc 1 784 9
 2630 037c 002B     		cmp	r3, #0
 2631 037e 01D1     		bne	.L157
 785:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 786:./Lib/Src/stm32f4xx_cryp_aes.c ****          /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 787:./Lib/Src/stm32f4xx_cryp_aes.c ****             the CRYP peripheral (please check the device sales type. */
ARM GAS  /tmp/cc2lf3as.s 			page 75


 788:./Lib/Src/stm32f4xx_cryp_aes.c ****          return(ERROR);
 2632              		.loc 1 788 16
 2633 0380 0023     		movs	r3, #0
 2634 0382 29E3     		b	.L205
 2635              	.L157:
 789:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
 790:./Lib/Src/stm32f4xx_cryp_aes.c ****       
 791:./Lib/Src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; (loopcounter < HLength); loopcounter+=16)
 2636              		.loc 1 791 23
 2637 0384 0023     		movs	r3, #0
 2638 0386 C7F8F430 		str	r3, [r7, #244]
 2639              		.loc 1 791 7
 2640 038a 37E0     		b	.L159
 2641              	.L161:
 792:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 793:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
 794:./Lib/Src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 2642              		.loc 1 794 14
 2643 038c 00BF     		nop
 2644              	.L160:
 2645              		.loc 1 794 15 discriminator 1
 2646 038e 0120     		movs	r0, #1
 2647 0390 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2648 0394 0346     		mov	r3, r0
 2649              		.loc 1 794 50 discriminator 1
 2650 0396 002B     		cmp	r3, #0
 2651 0398 F9D0     		beq	.L160
 795:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
 796:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
 797:./Lib/Src/stm32f4xx_cryp_aes.c ****         
 798:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
 799:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 2652              		.loc 1 799 22 discriminator 2
 2653 039a D7F8F830 		ldr	r3, [r7, #248]
 2654              		.loc 1 799 9 discriminator 2
 2655 039e 1B68     		ldr	r3, [r3]
 2656 03a0 1846     		mov	r0, r3
 2657 03a2 FFF7FEFF 		bl	CRYP_DataIn
 800:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2658              		.loc 1 800 19 discriminator 2
 2659 03a6 D7F8F830 		ldr	r3, [r7, #248]
 2660 03aa 0433     		adds	r3, r3, #4
 2661 03ac C7F8F830 		str	r3, [r7, #248]
 801:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 2662              		.loc 1 801 22 discriminator 2
 2663 03b0 D7F8F830 		ldr	r3, [r7, #248]
 2664              		.loc 1 801 9 discriminator 2
 2665 03b4 1B68     		ldr	r3, [r3]
 2666 03b6 1846     		mov	r0, r3
 2667 03b8 FFF7FEFF 		bl	CRYP_DataIn
 802:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2668              		.loc 1 802 19 discriminator 2
 2669 03bc D7F8F830 		ldr	r3, [r7, #248]
 2670 03c0 0433     		adds	r3, r3, #4
 2671 03c2 C7F8F830 		str	r3, [r7, #248]
 803:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 2672              		.loc 1 803 22 discriminator 2
ARM GAS  /tmp/cc2lf3as.s 			page 76


 2673 03c6 D7F8F830 		ldr	r3, [r7, #248]
 2674              		.loc 1 803 9 discriminator 2
 2675 03ca 1B68     		ldr	r3, [r3]
 2676 03cc 1846     		mov	r0, r3
 2677 03ce FFF7FEFF 		bl	CRYP_DataIn
 804:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2678              		.loc 1 804 19 discriminator 2
 2679 03d2 D7F8F830 		ldr	r3, [r7, #248]
 2680 03d6 0433     		adds	r3, r3, #4
 2681 03d8 C7F8F830 		str	r3, [r7, #248]
 805:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 2682              		.loc 1 805 22 discriminator 2
 2683 03dc D7F8F830 		ldr	r3, [r7, #248]
 2684              		.loc 1 805 9 discriminator 2
 2685 03e0 1B68     		ldr	r3, [r3]
 2686 03e2 1846     		mov	r0, r3
 2687 03e4 FFF7FEFF 		bl	CRYP_DataIn
 806:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 2688              		.loc 1 806 19 discriminator 2
 2689 03e8 D7F8F830 		ldr	r3, [r7, #248]
 2690 03ec 0433     		adds	r3, r3, #4
 2691 03ee C7F8F830 		str	r3, [r7, #248]
 791:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 2692              		.loc 1 791 64 discriminator 2
 2693 03f2 D7F8F430 		ldr	r3, [r7, #244]
 2694 03f6 1033     		adds	r3, r3, #16
 2695 03f8 C7F8F430 		str	r3, [r7, #244]
 2696              	.L159:
 791:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 2697              		.loc 1 791 41 discriminator 1
 2698 03fc D7F8F420 		ldr	r2, [r7, #244]
 2699 0400 D7F83431 		ldr	r3, [r7, #308]
 2700 0404 9A42     		cmp	r2, r3
 2701 0406 C1D3     		bcc	.L161
 807:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
 808:./Lib/Src/stm32f4xx_cryp_aes.c ****       
 809:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Wait until the complete message has been processed */
 810:./Lib/Src/stm32f4xx_cryp_aes.c ****       counter = 0;
 2702              		.loc 1 810 15
 2703 0408 0023     		movs	r3, #0
 2704 040a 7B61     		str	r3, [r7, #20]
 2705              	.L163:
 811:./Lib/Src/stm32f4xx_cryp_aes.c ****       do
 812:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 813:./Lib/Src/stm32f4xx_cryp_aes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 2706              		.loc 1 813 22 discriminator 2
 2707 040c 1020     		movs	r0, #16
 2708 040e FFF7FEFF 		bl	CRYP_GetFlagStatus
 2709 0412 0346     		mov	r3, r0
 2710              		.loc 1 813 20 discriminator 2
 2711 0414 C7F8F030 		str	r3, [r7, #240]
 814:./Lib/Src/stm32f4xx_cryp_aes.c ****         counter++;
 2712              		.loc 1 814 16 discriminator 2
 2713 0418 7B69     		ldr	r3, [r7, #20]
 2714 041a 0133     		adds	r3, r3, #1
 2715 041c 7B61     		str	r3, [r7, #20]
 815:./Lib/Src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
ARM GAS  /tmp/cc2lf3as.s 			page 77


 2716              		.loc 1 815 24 discriminator 2
 2717 041e 7B69     		ldr	r3, [r7, #20]
 2718              		.loc 1 815 44 discriminator 2
 2719 0420 B3F5803F 		cmp	r3, #65536
 2720 0424 03D0     		beq	.L162
 2721              		.loc 1 815 44 is_stmt 0 discriminator 1
 2722 0426 D7F8F030 		ldr	r3, [r7, #240]
 2723 042a 002B     		cmp	r3, #0
 2724 042c EED1     		bne	.L163
 2725              	.L162:
 816:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 817:./Lib/Src/stm32f4xx_cryp_aes.c ****       if (busystatus != RESET)
 2726              		.loc 1 817 10 is_stmt 1
 2727 042e D7F8F030 		ldr	r3, [r7, #240]
 2728 0432 002B     		cmp	r3, #0
 2729 0434 02D0     		beq	.L156
 818:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 819:./Lib/Src/stm32f4xx_cryp_aes.c ****         status = ERROR;
 2730              		.loc 1 819 16
 2731 0436 0023     		movs	r3, #0
 2732 0438 87F80731 		strb	r3, [r7, #263]
 2733              	.L156:
 820:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
 821:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 822:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 823:./Lib/Src/stm32f4xx_cryp_aes.c ****     /**************************** payload phase *******************************/
 824:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(ILength != 0)
 2734              		.loc 1 824 7
 2735 043c D7F82C31 		ldr	r3, [r7, #300]
 2736 0440 002B     		cmp	r3, #0
 2737 0442 00F0A380 		beq	.L164
 825:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 826:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Select payload phase */
 827:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Payload);
 2738              		.loc 1 827 7
 2739 0446 4FF40030 		mov	r0, #131072
 2740 044a FFF7FEFF 		bl	CRYP_PhaseConfig
 828:./Lib/Src/stm32f4xx_cryp_aes.c ****       
 829:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
 830:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 2741              		.loc 1 830 7
 2742 044e 0120     		movs	r0, #1
 2743 0450 FFF7FEFF 		bl	CRYP_Cmd
 831:./Lib/Src/stm32f4xx_cryp_aes.c ****       
 832:./Lib/Src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 2744              		.loc 1 832 10
 2745 0454 FFF7FEFF 		bl	CRYP_GetCmdStatus
 2746 0458 0346     		mov	r3, r0
 2747              		.loc 1 832 9
 2748 045a 002B     		cmp	r3, #0
 2749 045c 01D1     		bne	.L165
 833:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 834:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 835:./Lib/Src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
 836:./Lib/Src/stm32f4xx_cryp_aes.c ****         return(ERROR);
 2750              		.loc 1 836 15
 2751 045e 0023     		movs	r3, #0
ARM GAS  /tmp/cc2lf3as.s 			page 78


 2752 0460 BAE2     		b	.L205
 2753              	.L165:
 837:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
 838:./Lib/Src/stm32f4xx_cryp_aes.c ****       
 839:./Lib/Src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; ((loopcounter < ILength) && (status != ERROR)); loopcounter+=16)
 2754              		.loc 1 839 23
 2755 0462 0023     		movs	r3, #0
 2756 0464 C7F8F430 		str	r3, [r7, #244]
 2757              		.loc 1 839 7
 2758 0468 85E0     		b	.L166
 2759              	.L173:
 840:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 841:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
 842:./Lib/Src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 2760              		.loc 1 842 14
 2761 046a 00BF     		nop
 2762              	.L167:
 2763              		.loc 1 842 15 discriminator 1
 2764 046c 0120     		movs	r0, #1
 2765 046e FFF7FEFF 		bl	CRYP_GetFlagStatus
 2766 0472 0346     		mov	r3, r0
 2767              		.loc 1 842 50 discriminator 1
 2768 0474 002B     		cmp	r3, #0
 2769 0476 F9D0     		beq	.L167
 843:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
 844:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
 845:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
 846:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 2770              		.loc 1 846 22
 2771 0478 D7F80031 		ldr	r3, [r7, #256]
 2772              		.loc 1 846 9
 2773 047c 1B68     		ldr	r3, [r3]
 2774 047e 1846     		mov	r0, r3
 2775 0480 FFF7FEFF 		bl	CRYP_DataIn
 847:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2776              		.loc 1 847 18
 2777 0484 D7F80031 		ldr	r3, [r7, #256]
 2778 0488 0433     		adds	r3, r3, #4
 2779 048a C7F80031 		str	r3, [r7, #256]
 848:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 2780              		.loc 1 848 22
 2781 048e D7F80031 		ldr	r3, [r7, #256]
 2782              		.loc 1 848 9
 2783 0492 1B68     		ldr	r3, [r3]
 2784 0494 1846     		mov	r0, r3
 2785 0496 FFF7FEFF 		bl	CRYP_DataIn
 849:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2786              		.loc 1 849 18
 2787 049a D7F80031 		ldr	r3, [r7, #256]
 2788 049e 0433     		adds	r3, r3, #4
 2789 04a0 C7F80031 		str	r3, [r7, #256]
 850:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 2790              		.loc 1 850 22
 2791 04a4 D7F80031 		ldr	r3, [r7, #256]
 2792              		.loc 1 850 9
 2793 04a8 1B68     		ldr	r3, [r3]
 2794 04aa 1846     		mov	r0, r3
ARM GAS  /tmp/cc2lf3as.s 			page 79


 2795 04ac FFF7FEFF 		bl	CRYP_DataIn
 851:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2796              		.loc 1 851 18
 2797 04b0 D7F80031 		ldr	r3, [r7, #256]
 2798 04b4 0433     		adds	r3, r3, #4
 2799 04b6 C7F80031 		str	r3, [r7, #256]
 852:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 2800              		.loc 1 852 22
 2801 04ba D7F80031 		ldr	r3, [r7, #256]
 2802              		.loc 1 852 9
 2803 04be 1B68     		ldr	r3, [r3]
 2804 04c0 1846     		mov	r0, r3
 2805 04c2 FFF7FEFF 		bl	CRYP_DataIn
 853:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 2806              		.loc 1 853 18
 2807 04c6 D7F80031 		ldr	r3, [r7, #256]
 2808 04ca 0433     		adds	r3, r3, #4
 2809 04cc C7F80031 		str	r3, [r7, #256]
 854:./Lib/Src/stm32f4xx_cryp_aes.c ****         
 855:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Wait until the complete message has been processed */
 856:./Lib/Src/stm32f4xx_cryp_aes.c ****         counter = 0;
 2810              		.loc 1 856 17
 2811 04d0 0023     		movs	r3, #0
 2812 04d2 7B61     		str	r3, [r7, #20]
 2813              	.L169:
 857:./Lib/Src/stm32f4xx_cryp_aes.c ****         do
 858:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
 859:./Lib/Src/stm32f4xx_cryp_aes.c ****           busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 2814              		.loc 1 859 24 discriminator 2
 2815 04d4 1020     		movs	r0, #16
 2816 04d6 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2817 04da 0346     		mov	r3, r0
 2818              		.loc 1 859 22 discriminator 2
 2819 04dc C7F8F030 		str	r3, [r7, #240]
 860:./Lib/Src/stm32f4xx_cryp_aes.c ****           counter++;
 2820              		.loc 1 860 18 discriminator 2
 2821 04e0 7B69     		ldr	r3, [r7, #20]
 2822 04e2 0133     		adds	r3, r3, #1
 2823 04e4 7B61     		str	r3, [r7, #20]
 861:./Lib/Src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 2824              		.loc 1 861 26 discriminator 2
 2825 04e6 7B69     		ldr	r3, [r7, #20]
 2826              		.loc 1 861 46 discriminator 2
 2827 04e8 B3F5803F 		cmp	r3, #65536
 2828 04ec 03D0     		beq	.L168
 2829              		.loc 1 861 46 is_stmt 0 discriminator 1
 2830 04ee D7F8F030 		ldr	r3, [r7, #240]
 2831 04f2 002B     		cmp	r3, #0
 2832 04f4 EED1     		bne	.L169
 2833              	.L168:
 862:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 863:./Lib/Src/stm32f4xx_cryp_aes.c ****         if (busystatus != RESET)
 2834              		.loc 1 863 12 is_stmt 1
 2835 04f6 D7F8F030 		ldr	r3, [r7, #240]
 2836 04fa 002B     		cmp	r3, #0
 2837 04fc 03D0     		beq	.L207
 864:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
ARM GAS  /tmp/cc2lf3as.s 			page 80


 865:./Lib/Src/stm32f4xx_cryp_aes.c ****           status = ERROR;
 2838              		.loc 1 865 18
 2839 04fe 0023     		movs	r3, #0
 2840 0500 87F80731 		strb	r3, [r7, #263]
 2841 0504 32E0     		b	.L171
 2842              	.L207:
 866:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
 867:./Lib/Src/stm32f4xx_cryp_aes.c ****         else
 868:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
 869:./Lib/Src/stm32f4xx_cryp_aes.c ****           /* Wait until the OFNE flag is reset */
 870:./Lib/Src/stm32f4xx_cryp_aes.c ****           while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 2843              		.loc 1 870 16
 2844 0506 00BF     		nop
 2845              	.L172:
 2846              		.loc 1 870 17 discriminator 1
 2847 0508 0420     		movs	r0, #4
 2848 050a FFF7FEFF 		bl	CRYP_GetFlagStatus
 2849 050e 0346     		mov	r3, r0
 2850              		.loc 1 870 52 discriminator 1
 2851 0510 002B     		cmp	r3, #0
 2852 0512 F9D0     		beq	.L172
 871:./Lib/Src/stm32f4xx_cryp_aes.c ****           {
 872:./Lib/Src/stm32f4xx_cryp_aes.c ****           }
 873:./Lib/Src/stm32f4xx_cryp_aes.c ****           
 874:./Lib/Src/stm32f4xx_cryp_aes.c ****           /* Read the Output block from the Output FIFO */
 875:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2853              		.loc 1 875 12
 2854 0514 D7F8FC40 		ldr	r4, [r7, #252]
 2855              		.loc 1 875 38
 2856 0518 FFF7FEFF 		bl	CRYP_DataOut
 2857 051c 0346     		mov	r3, r0
 2858              		.loc 1 875 36
 2859 051e 2360     		str	r3, [r4]
 876:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2860              		.loc 1 876 21
 2861 0520 D7F8FC30 		ldr	r3, [r7, #252]
 2862 0524 0433     		adds	r3, r3, #4
 2863 0526 C7F8FC30 		str	r3, [r7, #252]
 877:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2864              		.loc 1 877 12
 2865 052a D7F8FC40 		ldr	r4, [r7, #252]
 2866              		.loc 1 877 38
 2867 052e FFF7FEFF 		bl	CRYP_DataOut
 2868 0532 0346     		mov	r3, r0
 2869              		.loc 1 877 36
 2870 0534 2360     		str	r3, [r4]
 878:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2871              		.loc 1 878 21
 2872 0536 D7F8FC30 		ldr	r3, [r7, #252]
 2873 053a 0433     		adds	r3, r3, #4
 2874 053c C7F8FC30 		str	r3, [r7, #252]
 879:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2875              		.loc 1 879 12
 2876 0540 D7F8FC40 		ldr	r4, [r7, #252]
 2877              		.loc 1 879 38
 2878 0544 FFF7FEFF 		bl	CRYP_DataOut
 2879 0548 0346     		mov	r3, r0
ARM GAS  /tmp/cc2lf3as.s 			page 81


 2880              		.loc 1 879 36
 2881 054a 2360     		str	r3, [r4]
 880:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2882              		.loc 1 880 21
 2883 054c D7F8FC30 		ldr	r3, [r7, #252]
 2884 0550 0433     		adds	r3, r3, #4
 2885 0552 C7F8FC30 		str	r3, [r7, #252]
 881:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2886              		.loc 1 881 12
 2887 0556 D7F8FC40 		ldr	r4, [r7, #252]
 2888              		.loc 1 881 38
 2889 055a FFF7FEFF 		bl	CRYP_DataOut
 2890 055e 0346     		mov	r3, r0
 2891              		.loc 1 881 36
 2892 0560 2360     		str	r3, [r4]
 882:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 2893              		.loc 1 882 21
 2894 0562 D7F8FC30 		ldr	r3, [r7, #252]
 2895 0566 0433     		adds	r3, r3, #4
 2896 0568 C7F8FC30 		str	r3, [r7, #252]
 2897              	.L171:
 839:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 2898              		.loc 1 839 87 discriminator 2
 2899 056c D7F8F430 		ldr	r3, [r7, #244]
 2900 0570 1033     		adds	r3, r3, #16
 2901 0572 C7F8F430 		str	r3, [r7, #244]
 2902              	.L166:
 839:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 2903              		.loc 1 839 53 discriminator 1
 2904 0576 D7F8F420 		ldr	r2, [r7, #244]
 2905 057a D7F82C31 		ldr	r3, [r7, #300]
 2906 057e 9A42     		cmp	r2, r3
 2907 0580 04D2     		bcs	.L164
 839:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 2908              		.loc 1 839 53 is_stmt 0 discriminator 3
 2909 0582 97F80731 		ldrb	r3, [r7, #263]	@ zero_extendqisi2
 2910 0586 002B     		cmp	r3, #0
 2911 0588 7FF46FAF 		bne	.L173
 2912              	.L164:
 883:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
 884:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
 885:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 886:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 887:./Lib/Src/stm32f4xx_cryp_aes.c ****     /***************************** final phase ********************************/
 888:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Select final phase */
 889:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Final);
 2913              		.loc 1 889 5 is_stmt 1
 2914 058c 4FF44030 		mov	r0, #196608
 2915 0590 FFF7FEFF 		bl	CRYP_PhaseConfig
 890:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 891:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 892:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 2916              		.loc 1 892 5
 2917 0594 0120     		movs	r0, #1
 2918 0596 FFF7FEFF 		bl	CRYP_Cmd
 893:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 894:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(CRYP_GetCmdStatus() == DISABLE)
ARM GAS  /tmp/cc2lf3as.s 			page 82


 2919              		.loc 1 894 8
 2920 059a FFF7FEFF 		bl	CRYP_GetCmdStatus
 2921 059e 0346     		mov	r3, r0
 2922              		.loc 1 894 7
 2923 05a0 002B     		cmp	r3, #0
 2924 05a2 01D1     		bne	.L174
 895:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 896:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 897:./Lib/Src/stm32f4xx_cryp_aes.c ****          the CRYP peripheral (please check the device sales type. */
 898:./Lib/Src/stm32f4xx_cryp_aes.c ****       return(ERROR);
 2925              		.loc 1 898 13
 2926 05a4 0023     		movs	r3, #0
 2927 05a6 17E2     		b	.L205
 2928              	.L174:
 899:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 900:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 901:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Write number of bits concatenated with header in the IN FIFO */
 902:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength>>32));
 2929              		.loc 1 902 35
 2930 05a8 D7E93601 		ldrd	r0, [r7, #216]
 2931 05ac 4FF00002 		mov	r2, #0
 2932 05b0 4FF00003 		mov	r3, #0
 2933 05b4 0A00     		movs	r2, r1
 2934 05b6 0023     		movs	r3, #0
 2935              		.loc 1 902 5
 2936 05b8 1346     		mov	r3, r2
 2937 05ba BB66     		str	r3, [r7, #104]
 2938              	.LBB398:
 2939              	.LBB399:
 2940              		.loc 2 498 10
 2941 05bc BB6E     		ldr	r3, [r7, #104]
 2942 05be 1BBA     		rev	r3, r3
 2943              	.LBE399:
 2944              	.LBE398:
 2945              		.loc 1 902 5
 2946 05c0 1846     		mov	r0, r3
 2947 05c2 FFF7FEFF 		bl	CRYP_DataIn
 903:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength));
 2948              		.loc 1 903 5
 2949 05c6 D7F8D830 		ldr	r3, [r7, #216]
 2950 05ca FB66     		str	r3, [r7, #108]
 2951              	.LBB400:
 2952              	.LBB401:
 2953              		.loc 2 498 10
 2954 05cc FB6E     		ldr	r3, [r7, #108]
 2955 05ce 1BBA     		rev	r3, r3
 2956              	.LBE401:
 2957              	.LBE400:
 2958              		.loc 1 903 5
 2959 05d0 1846     		mov	r0, r3
 2960 05d2 FFF7FEFF 		bl	CRYP_DataIn
 904:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength>>32));
 2961              		.loc 1 904 34
 2962 05d6 D7E93401 		ldrd	r0, [r7, #208]
 2963 05da 4FF00002 		mov	r2, #0
 2964 05de 4FF00003 		mov	r3, #0
 2965 05e2 0A00     		movs	r2, r1
ARM GAS  /tmp/cc2lf3as.s 			page 83


 2966 05e4 0023     		movs	r3, #0
 2967              		.loc 1 904 5
 2968 05e6 1346     		mov	r3, r2
 2969 05e8 3B67     		str	r3, [r7, #112]
 2970              	.LBB402:
 2971              	.LBB403:
 2972              		.loc 2 498 10
 2973 05ea 3B6F     		ldr	r3, [r7, #112]
 2974 05ec 1BBA     		rev	r3, r3
 2975              	.LBE403:
 2976              	.LBE402:
 2977              		.loc 1 904 5
 2978 05ee 1846     		mov	r0, r3
 2979 05f0 FFF7FEFF 		bl	CRYP_DataIn
 905:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength));
 2980              		.loc 1 905 5
 2981 05f4 D7F8D030 		ldr	r3, [r7, #208]
 2982 05f8 7B67     		str	r3, [r7, #116]
 2983              	.LBB404:
 2984              	.LBB405:
 2985              		.loc 2 498 10
 2986 05fa 7B6F     		ldr	r3, [r7, #116]
 2987 05fc 1BBA     		rev	r3, r3
 2988              	.LBE405:
 2989              	.LBE404:
 2990              		.loc 1 905 5
 2991 05fe 1846     		mov	r0, r3
 2992 0600 FFF7FEFF 		bl	CRYP_DataIn
 906:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
 907:./Lib/Src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 2993              		.loc 1 907 10
 2994 0604 00BF     		nop
 2995              	.L179:
 2996              		.loc 1 907 11 discriminator 1
 2997 0606 0420     		movs	r0, #4
 2998 0608 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2999 060c 0346     		mov	r3, r0
 3000              		.loc 1 907 46 discriminator 1
 3001 060e 002B     		cmp	r3, #0
 3002 0610 F9D0     		beq	.L179
 908:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 909:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 910:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 911:./Lib/Src/stm32f4xx_cryp_aes.c ****     tagaddr = (uint32_t)AuthTAG;
 3003              		.loc 1 911 13
 3004 0612 D7F83C31 		ldr	r3, [r7, #316]
 3005 0616 C7F8E430 		str	r3, [r7, #228]
 912:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Read the Auth TAG in the IN FIFO */
 913:./Lib/Src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 3006              		.loc 1 913 6
 3007 061a D7F8E440 		ldr	r4, [r7, #228]
 3008              		.loc 1 913 29
 3009 061e FFF7FEFF 		bl	CRYP_DataOut
 3010 0622 0346     		mov	r3, r0
 3011              		.loc 1 913 27
 3012 0624 2360     		str	r3, [r4]
 914:./Lib/Src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
ARM GAS  /tmp/cc2lf3as.s 			page 84


 3013              		.loc 1 914 12
 3014 0626 D7F8E430 		ldr	r3, [r7, #228]
 3015 062a 0433     		adds	r3, r3, #4
 3016 062c C7F8E430 		str	r3, [r7, #228]
 915:./Lib/Src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 3017              		.loc 1 915 6
 3018 0630 D7F8E440 		ldr	r4, [r7, #228]
 3019              		.loc 1 915 29
 3020 0634 FFF7FEFF 		bl	CRYP_DataOut
 3021 0638 0346     		mov	r3, r0
 3022              		.loc 1 915 27
 3023 063a 2360     		str	r3, [r4]
 916:./Lib/Src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 3024              		.loc 1 916 12
 3025 063c D7F8E430 		ldr	r3, [r7, #228]
 3026 0640 0433     		adds	r3, r3, #4
 3027 0642 C7F8E430 		str	r3, [r7, #228]
 917:./Lib/Src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 3028              		.loc 1 917 6
 3029 0646 D7F8E440 		ldr	r4, [r7, #228]
 3030              		.loc 1 917 29
 3031 064a FFF7FEFF 		bl	CRYP_DataOut
 3032 064e 0346     		mov	r3, r0
 3033              		.loc 1 917 27
 3034 0650 2360     		str	r3, [r4]
 918:./Lib/Src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 3035              		.loc 1 918 12
 3036 0652 D7F8E430 		ldr	r3, [r7, #228]
 3037 0656 0433     		adds	r3, r3, #4
 3038 0658 C7F8E430 		str	r3, [r7, #228]
 919:./Lib/Src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 3039              		.loc 1 919 6
 3040 065c D7F8E440 		ldr	r4, [r7, #228]
 3041              		.loc 1 919 29
 3042 0660 FFF7FEFF 		bl	CRYP_DataOut
 3043 0664 0346     		mov	r3, r0
 3044              		.loc 1 919 27
 3045 0666 2360     		str	r3, [r4]
 920:./Lib/Src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 3046              		.loc 1 920 12
 3047 0668 D7F8E430 		ldr	r3, [r7, #228]
 3048 066c 0433     		adds	r3, r3, #4
 3049 066e C7F8E430 		str	r3, [r7, #228]
 3050 0672 ACE1     		b	.L180
 3051              	.L154:
 921:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
 922:./Lib/Src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 923:./Lib/Src/stm32f4xx_cryp_aes.c ****   else /* AES decryption */
 924:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 925:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 926:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 3052              		.loc 1 926 5
 3053 0674 FFF7FEFF 		bl	CRYP_FIFOFlush
 927:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 928:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 929:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 3054              		.loc 1 929 5
ARM GAS  /tmp/cc2lf3as.s 			page 85


 3055 0678 07F12803 		add	r3, r7, #40
 3056 067c 1846     		mov	r0, r3
 3057 067e FFF7FEFF 		bl	CRYP_KeyInit
 930:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 931:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* CRYP Initialization Vectors */
 932:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_IVInit(&AES_CRYP_IVInitStructure);
 3058              		.loc 1 932 5
 3059 0682 07F11803 		add	r3, r7, #24
 3060 0686 1846     		mov	r0, r3
 3061 0688 FFF7FEFF 		bl	CRYP_IVInit
 933:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 934:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 935:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 3062              		.loc 1 935 41
 3063 068c 0423     		movs	r3, #4
 3064 068e BB64     		str	r3, [r7, #72]
 936:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_GCM;
 3065              		.loc 1 936 42
 3066 0690 4FF40023 		mov	r3, #524288
 3067 0694 FB64     		str	r3, [r7, #76]
 937:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 3068              		.loc 1 937 42
 3069 0696 8023     		movs	r3, #128
 3070 0698 3B65     		str	r3, [r7, #80]
 938:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 3071              		.loc 1 938 5
 3072 069a 07F14803 		add	r3, r7, #72
 3073 069e 1846     		mov	r0, r3
 3074 06a0 FFF7FEFF 		bl	CRYP_Init
 939:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 940:./Lib/Src/stm32f4xx_cryp_aes.c ****     /***************************** Init phase *********************************/
 941:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Select init phase */
 942:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Init);
 3075              		.loc 1 942 5
 3076 06a4 0020     		movs	r0, #0
 3077 06a6 FFF7FEFF 		bl	CRYP_PhaseConfig
 943:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 944:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 945:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 3078              		.loc 1 945 5
 3079 06aa 0120     		movs	r0, #1
 3080 06ac FFF7FEFF 		bl	CRYP_Cmd
 946:./Lib/Src/stm32f4xx_cryp_aes.c ****     
 947:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Wait for CRYPEN bit to be 0 */
 948:./Lib/Src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetCmdStatus() == ENABLE)
 3081              		.loc 1 948 10
 3082 06b0 00BF     		nop
 3083              	.L181:
 3084              		.loc 1 948 11 discriminator 1
 3085 06b2 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3086 06b6 0346     		mov	r3, r0
 3087              		.loc 1 948 31 discriminator 1
 3088 06b8 012B     		cmp	r3, #1
 3089 06ba FAD0     		beq	.L181
 949:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 950:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 951:./Lib/Src/stm32f4xx_cryp_aes.c ****     
ARM GAS  /tmp/cc2lf3as.s 			page 86


 952:./Lib/Src/stm32f4xx_cryp_aes.c ****     /***************************** header phase *******************************/
 953:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(HLength != 0)
 3090              		.loc 1 953 7
 3091 06bc D7F83431 		ldr	r3, [r7, #308]
 3092 06c0 002B     		cmp	r3, #0
 3093 06c2 69D0     		beq	.L182
 954:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 955:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Select header phase */
 956:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Header);
 3094              		.loc 1 956 7
 3095 06c4 4FF48030 		mov	r0, #65536
 3096 06c8 FFF7FEFF 		bl	CRYP_PhaseConfig
 957:./Lib/Src/stm32f4xx_cryp_aes.c ****       
 958:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
 959:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 3097              		.loc 1 959 7
 3098 06cc 0120     		movs	r0, #1
 3099 06ce FFF7FEFF 		bl	CRYP_Cmd
 960:./Lib/Src/stm32f4xx_cryp_aes.c ****       
 961:./Lib/Src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 3100              		.loc 1 961 10
 3101 06d2 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3102 06d6 0346     		mov	r3, r0
 3103              		.loc 1 961 9
 3104 06d8 002B     		cmp	r3, #0
 3105 06da 01D1     		bne	.L183
 962:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 963:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 964:./Lib/Src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
 965:./Lib/Src/stm32f4xx_cryp_aes.c ****         return(ERROR);
 3106              		.loc 1 965 15
 3107 06dc 0023     		movs	r3, #0
 3108 06de 7BE1     		b	.L205
 3109              	.L183:
 966:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
 967:./Lib/Src/stm32f4xx_cryp_aes.c ****       
 968:./Lib/Src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; (loopcounter < HLength); loopcounter+=16)
 3110              		.loc 1 968 23
 3111 06e0 0023     		movs	r3, #0
 3112 06e2 C7F8F430 		str	r3, [r7, #244]
 3113              		.loc 1 968 7
 3114 06e6 37E0     		b	.L184
 3115              	.L186:
 969:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 970:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
 971:./Lib/Src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 3116              		.loc 1 971 14
 3117 06e8 00BF     		nop
 3118              	.L185:
 3119              		.loc 1 971 15 discriminator 1
 3120 06ea 0120     		movs	r0, #1
 3121 06ec FFF7FEFF 		bl	CRYP_GetFlagStatus
 3122 06f0 0346     		mov	r3, r0
 3123              		.loc 1 971 50 discriminator 1
 3124 06f2 002B     		cmp	r3, #0
 3125 06f4 F9D0     		beq	.L185
 972:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
ARM GAS  /tmp/cc2lf3as.s 			page 87


 973:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
 974:./Lib/Src/stm32f4xx_cryp_aes.c ****         
 975:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
 976:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 3126              		.loc 1 976 22 discriminator 2
 3127 06f6 D7F8F830 		ldr	r3, [r7, #248]
 3128              		.loc 1 976 9 discriminator 2
 3129 06fa 1B68     		ldr	r3, [r3]
 3130 06fc 1846     		mov	r0, r3
 3131 06fe FFF7FEFF 		bl	CRYP_DataIn
 977:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3132              		.loc 1 977 19 discriminator 2
 3133 0702 D7F8F830 		ldr	r3, [r7, #248]
 3134 0706 0433     		adds	r3, r3, #4
 3135 0708 C7F8F830 		str	r3, [r7, #248]
 978:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 3136              		.loc 1 978 22 discriminator 2
 3137 070c D7F8F830 		ldr	r3, [r7, #248]
 3138              		.loc 1 978 9 discriminator 2
 3139 0710 1B68     		ldr	r3, [r3]
 3140 0712 1846     		mov	r0, r3
 3141 0714 FFF7FEFF 		bl	CRYP_DataIn
 979:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3142              		.loc 1 979 19 discriminator 2
 3143 0718 D7F8F830 		ldr	r3, [r7, #248]
 3144 071c 0433     		adds	r3, r3, #4
 3145 071e C7F8F830 		str	r3, [r7, #248]
 980:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 3146              		.loc 1 980 22 discriminator 2
 3147 0722 D7F8F830 		ldr	r3, [r7, #248]
 3148              		.loc 1 980 9 discriminator 2
 3149 0726 1B68     		ldr	r3, [r3]
 3150 0728 1846     		mov	r0, r3
 3151 072a FFF7FEFF 		bl	CRYP_DataIn
 981:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3152              		.loc 1 981 19 discriminator 2
 3153 072e D7F8F830 		ldr	r3, [r7, #248]
 3154 0732 0433     		adds	r3, r3, #4
 3155 0734 C7F8F830 		str	r3, [r7, #248]
 982:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 3156              		.loc 1 982 22 discriminator 2
 3157 0738 D7F8F830 		ldr	r3, [r7, #248]
 3158              		.loc 1 982 9 discriminator 2
 3159 073c 1B68     		ldr	r3, [r3]
 3160 073e 1846     		mov	r0, r3
 3161 0740 FFF7FEFF 		bl	CRYP_DataIn
 983:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 3162              		.loc 1 983 19 discriminator 2
 3163 0744 D7F8F830 		ldr	r3, [r7, #248]
 3164 0748 0433     		adds	r3, r3, #4
 3165 074a C7F8F830 		str	r3, [r7, #248]
 968:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 3166              		.loc 1 968 64 discriminator 2
 3167 074e D7F8F430 		ldr	r3, [r7, #244]
 3168 0752 1033     		adds	r3, r3, #16
 3169 0754 C7F8F430 		str	r3, [r7, #244]
 3170              	.L184:
ARM GAS  /tmp/cc2lf3as.s 			page 88


 968:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 3171              		.loc 1 968 41 discriminator 1
 3172 0758 D7F8F420 		ldr	r2, [r7, #244]
 3173 075c D7F83431 		ldr	r3, [r7, #308]
 3174 0760 9A42     		cmp	r2, r3
 3175 0762 C1D3     		bcc	.L186
 984:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
 985:./Lib/Src/stm32f4xx_cryp_aes.c ****       
 986:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Wait until the complete message has been processed */
 987:./Lib/Src/stm32f4xx_cryp_aes.c ****       counter = 0;
 3176              		.loc 1 987 15
 3177 0764 0023     		movs	r3, #0
 3178 0766 7B61     		str	r3, [r7, #20]
 3179              	.L188:
 988:./Lib/Src/stm32f4xx_cryp_aes.c ****       do
 989:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 990:./Lib/Src/stm32f4xx_cryp_aes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 3180              		.loc 1 990 22 discriminator 2
 3181 0768 1020     		movs	r0, #16
 3182 076a FFF7FEFF 		bl	CRYP_GetFlagStatus
 3183 076e 0346     		mov	r3, r0
 3184              		.loc 1 990 20 discriminator 2
 3185 0770 C7F8F030 		str	r3, [r7, #240]
 991:./Lib/Src/stm32f4xx_cryp_aes.c ****         counter++;
 3186              		.loc 1 991 16 discriminator 2
 3187 0774 7B69     		ldr	r3, [r7, #20]
 3188 0776 0133     		adds	r3, r3, #1
 3189 0778 7B61     		str	r3, [r7, #20]
 992:./Lib/Src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 3190              		.loc 1 992 24 discriminator 2
 3191 077a 7B69     		ldr	r3, [r7, #20]
 3192              		.loc 1 992 44 discriminator 2
 3193 077c B3F5803F 		cmp	r3, #65536
 3194 0780 03D0     		beq	.L187
 3195              		.loc 1 992 44 is_stmt 0 discriminator 1
 3196 0782 D7F8F030 		ldr	r3, [r7, #240]
 3197 0786 002B     		cmp	r3, #0
 3198 0788 EED1     		bne	.L188
 3199              	.L187:
 993:./Lib/Src/stm32f4xx_cryp_aes.c **** 
 994:./Lib/Src/stm32f4xx_cryp_aes.c ****       if (busystatus != RESET)
 3200              		.loc 1 994 10 is_stmt 1
 3201 078a D7F8F030 		ldr	r3, [r7, #240]
 3202 078e 002B     		cmp	r3, #0
 3203 0790 02D0     		beq	.L182
 995:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 996:./Lib/Src/stm32f4xx_cryp_aes.c ****         status = ERROR;
 3204              		.loc 1 996 16
 3205 0792 0023     		movs	r3, #0
 3206 0794 87F80731 		strb	r3, [r7, #263]
 3207              	.L182:
 997:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
 998:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
 999:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1000:./Lib/Src/stm32f4xx_cryp_aes.c ****     /**************************** payload phase *******************************/
1001:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(ILength != 0)
 3208              		.loc 1 1001 7
ARM GAS  /tmp/cc2lf3as.s 			page 89


 3209 0798 D7F82C31 		ldr	r3, [r7, #300]
 3210 079c 002B     		cmp	r3, #0
 3211 079e 00F0A380 		beq	.L189
1002:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1003:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Select payload phase */
1004:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Payload);
 3212              		.loc 1 1004 7
 3213 07a2 4FF40030 		mov	r0, #131072
 3214 07a6 FFF7FEFF 		bl	CRYP_PhaseConfig
1005:./Lib/Src/stm32f4xx_cryp_aes.c **** 
1006:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1007:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 3215              		.loc 1 1007 7
 3216 07aa 0120     		movs	r0, #1
 3217 07ac FFF7FEFF 		bl	CRYP_Cmd
1008:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1009:./Lib/Src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 3218              		.loc 1 1009 10
 3219 07b0 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3220 07b4 0346     		mov	r3, r0
 3221              		.loc 1 1009 9
 3222 07b6 002B     		cmp	r3, #0
 3223 07b8 01D1     		bne	.L190
1010:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1011:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embed 
1012:./Lib/Src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
1013:./Lib/Src/stm32f4xx_cryp_aes.c ****         return(ERROR);
 3224              		.loc 1 1013 15
 3225 07ba 0023     		movs	r3, #0
 3226 07bc 0CE1     		b	.L205
 3227              	.L190:
1014:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1015:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1016:./Lib/Src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; ((loopcounter < ILength) && (status != ERROR)); loopcounter+=16)
 3228              		.loc 1 1016 23
 3229 07be 0023     		movs	r3, #0
 3230 07c0 C7F8F430 		str	r3, [r7, #244]
 3231              		.loc 1 1016 7
 3232 07c4 85E0     		b	.L191
 3233              	.L198:
1017:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1018:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1019:./Lib/Src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 3234              		.loc 1 1019 14
 3235 07c6 00BF     		nop
 3236              	.L192:
 3237              		.loc 1 1019 15 discriminator 1
 3238 07c8 0120     		movs	r0, #1
 3239 07ca FFF7FEFF 		bl	CRYP_GetFlagStatus
 3240 07ce 0346     		mov	r3, r0
 3241              		.loc 1 1019 50 discriminator 1
 3242 07d0 002B     		cmp	r3, #0
 3243 07d2 F9D0     		beq	.L192
1020:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1021:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
1022:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1023:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
ARM GAS  /tmp/cc2lf3as.s 			page 90


 3244              		.loc 1 1023 22
 3245 07d4 D7F80031 		ldr	r3, [r7, #256]
 3246              		.loc 1 1023 9
 3247 07d8 1B68     		ldr	r3, [r3]
 3248 07da 1846     		mov	r0, r3
 3249 07dc FFF7FEFF 		bl	CRYP_DataIn
1024:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3250              		.loc 1 1024 18
 3251 07e0 D7F80031 		ldr	r3, [r7, #256]
 3252 07e4 0433     		adds	r3, r3, #4
 3253 07e6 C7F80031 		str	r3, [r7, #256]
1025:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 3254              		.loc 1 1025 22
 3255 07ea D7F80031 		ldr	r3, [r7, #256]
 3256              		.loc 1 1025 9
 3257 07ee 1B68     		ldr	r3, [r3]
 3258 07f0 1846     		mov	r0, r3
 3259 07f2 FFF7FEFF 		bl	CRYP_DataIn
1026:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3260              		.loc 1 1026 18
 3261 07f6 D7F80031 		ldr	r3, [r7, #256]
 3262 07fa 0433     		adds	r3, r3, #4
 3263 07fc C7F80031 		str	r3, [r7, #256]
1027:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 3264              		.loc 1 1027 22
 3265 0800 D7F80031 		ldr	r3, [r7, #256]
 3266              		.loc 1 1027 9
 3267 0804 1B68     		ldr	r3, [r3]
 3268 0806 1846     		mov	r0, r3
 3269 0808 FFF7FEFF 		bl	CRYP_DataIn
1028:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3270              		.loc 1 1028 18
 3271 080c D7F80031 		ldr	r3, [r7, #256]
 3272 0810 0433     		adds	r3, r3, #4
 3273 0812 C7F80031 		str	r3, [r7, #256]
1029:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 3274              		.loc 1 1029 22
 3275 0816 D7F80031 		ldr	r3, [r7, #256]
 3276              		.loc 1 1029 9
 3277 081a 1B68     		ldr	r3, [r3]
 3278 081c 1846     		mov	r0, r3
 3279 081e FFF7FEFF 		bl	CRYP_DataIn
1030:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 3280              		.loc 1 1030 18
 3281 0822 D7F80031 		ldr	r3, [r7, #256]
 3282 0826 0433     		adds	r3, r3, #4
 3283 0828 C7F80031 		str	r3, [r7, #256]
1031:./Lib/Src/stm32f4xx_cryp_aes.c ****         
1032:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Wait until the complete message has been processed */
1033:./Lib/Src/stm32f4xx_cryp_aes.c ****         counter = 0;
 3284              		.loc 1 1033 17
 3285 082c 0023     		movs	r3, #0
 3286 082e 7B61     		str	r3, [r7, #20]
 3287              	.L194:
1034:./Lib/Src/stm32f4xx_cryp_aes.c ****         do
1035:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1036:./Lib/Src/stm32f4xx_cryp_aes.c ****           busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
ARM GAS  /tmp/cc2lf3as.s 			page 91


 3288              		.loc 1 1036 24 discriminator 2
 3289 0830 1020     		movs	r0, #16
 3290 0832 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3291 0836 0346     		mov	r3, r0
 3292              		.loc 1 1036 22 discriminator 2
 3293 0838 C7F8F030 		str	r3, [r7, #240]
1037:./Lib/Src/stm32f4xx_cryp_aes.c ****           counter++;
 3294              		.loc 1 1037 18 discriminator 2
 3295 083c 7B69     		ldr	r3, [r7, #20]
 3296 083e 0133     		adds	r3, r3, #1
 3297 0840 7B61     		str	r3, [r7, #20]
1038:./Lib/Src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 3298              		.loc 1 1038 26 discriminator 2
 3299 0842 7B69     		ldr	r3, [r7, #20]
 3300              		.loc 1 1038 46 discriminator 2
 3301 0844 B3F5803F 		cmp	r3, #65536
 3302 0848 03D0     		beq	.L193
 3303              		.loc 1 1038 46 is_stmt 0 discriminator 1
 3304 084a D7F8F030 		ldr	r3, [r7, #240]
 3305 084e 002B     		cmp	r3, #0
 3306 0850 EED1     		bne	.L194
 3307              	.L193:
1039:./Lib/Src/stm32f4xx_cryp_aes.c **** 
1040:./Lib/Src/stm32f4xx_cryp_aes.c ****         if (busystatus != RESET)
 3308              		.loc 1 1040 12 is_stmt 1
 3309 0852 D7F8F030 		ldr	r3, [r7, #240]
 3310 0856 002B     		cmp	r3, #0
 3311 0858 03D0     		beq	.L208
1041:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1042:./Lib/Src/stm32f4xx_cryp_aes.c ****           status = ERROR;
 3312              		.loc 1 1042 18
 3313 085a 0023     		movs	r3, #0
 3314 085c 87F80731 		strb	r3, [r7, #263]
 3315 0860 32E0     		b	.L196
 3316              	.L208:
1043:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
1044:./Lib/Src/stm32f4xx_cryp_aes.c ****         else
1045:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1046:./Lib/Src/stm32f4xx_cryp_aes.c ****           /* Wait until the OFNE flag is reset */
1047:./Lib/Src/stm32f4xx_cryp_aes.c ****           while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 3317              		.loc 1 1047 16
 3318 0862 00BF     		nop
 3319              	.L197:
 3320              		.loc 1 1047 17 discriminator 1
 3321 0864 0420     		movs	r0, #4
 3322 0866 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3323 086a 0346     		mov	r3, r0
 3324              		.loc 1 1047 52 discriminator 1
 3325 086c 002B     		cmp	r3, #0
 3326 086e F9D0     		beq	.L197
1048:./Lib/Src/stm32f4xx_cryp_aes.c ****           {
1049:./Lib/Src/stm32f4xx_cryp_aes.c ****           }
1050:./Lib/Src/stm32f4xx_cryp_aes.c ****           
1051:./Lib/Src/stm32f4xx_cryp_aes.c ****           /* Read the Output block from the Output FIFO */
1052:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 3327              		.loc 1 1052 12
 3328 0870 D7F8FC40 		ldr	r4, [r7, #252]
ARM GAS  /tmp/cc2lf3as.s 			page 92


 3329              		.loc 1 1052 38
 3330 0874 FFF7FEFF 		bl	CRYP_DataOut
 3331 0878 0346     		mov	r3, r0
 3332              		.loc 1 1052 36
 3333 087a 2360     		str	r3, [r4]
1053:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3334              		.loc 1 1053 21
 3335 087c D7F8FC30 		ldr	r3, [r7, #252]
 3336 0880 0433     		adds	r3, r3, #4
 3337 0882 C7F8FC30 		str	r3, [r7, #252]
1054:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 3338              		.loc 1 1054 12
 3339 0886 D7F8FC40 		ldr	r4, [r7, #252]
 3340              		.loc 1 1054 38
 3341 088a FFF7FEFF 		bl	CRYP_DataOut
 3342 088e 0346     		mov	r3, r0
 3343              		.loc 1 1054 36
 3344 0890 2360     		str	r3, [r4]
1055:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3345              		.loc 1 1055 21
 3346 0892 D7F8FC30 		ldr	r3, [r7, #252]
 3347 0896 0433     		adds	r3, r3, #4
 3348 0898 C7F8FC30 		str	r3, [r7, #252]
1056:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 3349              		.loc 1 1056 12
 3350 089c D7F8FC40 		ldr	r4, [r7, #252]
 3351              		.loc 1 1056 38
 3352 08a0 FFF7FEFF 		bl	CRYP_DataOut
 3353 08a4 0346     		mov	r3, r0
 3354              		.loc 1 1056 36
 3355 08a6 2360     		str	r3, [r4]
1057:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3356              		.loc 1 1057 21
 3357 08a8 D7F8FC30 		ldr	r3, [r7, #252]
 3358 08ac 0433     		adds	r3, r3, #4
 3359 08ae C7F8FC30 		str	r3, [r7, #252]
1058:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 3360              		.loc 1 1058 12
 3361 08b2 D7F8FC40 		ldr	r4, [r7, #252]
 3362              		.loc 1 1058 38
 3363 08b6 FFF7FEFF 		bl	CRYP_DataOut
 3364 08ba 0346     		mov	r3, r0
 3365              		.loc 1 1058 36
 3366 08bc 2360     		str	r3, [r4]
1059:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 3367              		.loc 1 1059 21
 3368 08be D7F8FC30 		ldr	r3, [r7, #252]
 3369 08c2 0433     		adds	r3, r3, #4
 3370 08c4 C7F8FC30 		str	r3, [r7, #252]
 3371              	.L196:
1016:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 3372              		.loc 1 1016 87 discriminator 2
 3373 08c8 D7F8F430 		ldr	r3, [r7, #244]
 3374 08cc 1033     		adds	r3, r3, #16
 3375 08ce C7F8F430 		str	r3, [r7, #244]
 3376              	.L191:
1016:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
ARM GAS  /tmp/cc2lf3as.s 			page 93


 3377              		.loc 1 1016 53 discriminator 1
 3378 08d2 D7F8F420 		ldr	r2, [r7, #244]
 3379 08d6 D7F82C31 		ldr	r3, [r7, #300]
 3380 08da 9A42     		cmp	r2, r3
 3381 08dc 04D2     		bcs	.L189
1016:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 3382              		.loc 1 1016 53 is_stmt 0 discriminator 3
 3383 08de 97F80731 		ldrb	r3, [r7, #263]	@ zero_extendqisi2
 3384 08e2 002B     		cmp	r3, #0
 3385 08e4 7FF46FAF 		bne	.L198
 3386              	.L189:
1060:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
1061:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1062:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1063:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1064:./Lib/Src/stm32f4xx_cryp_aes.c ****     /***************************** final phase ********************************/
1065:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Select final phase */
1066:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Final);
 3387              		.loc 1 1066 5 is_stmt 1
 3388 08e8 4FF44030 		mov	r0, #196608
 3389 08ec FFF7FEFF 		bl	CRYP_PhaseConfig
1067:./Lib/Src/stm32f4xx_cryp_aes.c **** 
1068:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1069:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 3390              		.loc 1 1069 5
 3391 08f0 0120     		movs	r0, #1
 3392 08f2 FFF7FEFF 		bl	CRYP_Cmd
1070:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1071:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(CRYP_GetCmdStatus() == DISABLE)
 3393              		.loc 1 1071 8
 3394 08f6 FFF7FEFF 		bl	CRYP_GetCmdStatus
 3395 08fa 0346     		mov	r3, r0
 3396              		.loc 1 1071 7
 3397 08fc 002B     		cmp	r3, #0
 3398 08fe 01D1     		bne	.L199
1072:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1073:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* The CRYP peripheral clock is not enabled or the device doesn't embed 
1074:./Lib/Src/stm32f4xx_cryp_aes.c ****          the CRYP peripheral (please check the device sales type. */
1075:./Lib/Src/stm32f4xx_cryp_aes.c ****       return(ERROR);
 3399              		.loc 1 1075 13
 3400 0900 0023     		movs	r3, #0
 3401 0902 69E0     		b	.L205
 3402              	.L199:
1076:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1077:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1078:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Write number of bits concatenated with header in the IN FIFO */
1079:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength>>32));
 3403              		.loc 1 1079 35
 3404 0904 D7E93601 		ldrd	r0, [r7, #216]
 3405 0908 4FF00002 		mov	r2, #0
 3406 090c 4FF00003 		mov	r3, #0
 3407 0910 0A00     		movs	r2, r1
 3408 0912 0023     		movs	r3, #0
 3409              		.loc 1 1079 5
 3410 0914 1346     		mov	r3, r2
 3411 0916 BB65     		str	r3, [r7, #88]
 3412              	.LBB406:
ARM GAS  /tmp/cc2lf3as.s 			page 94


 3413              	.LBB407:
 3414              		.loc 2 498 10
 3415 0918 BB6D     		ldr	r3, [r7, #88]
 3416 091a 1BBA     		rev	r3, r3
 3417              	.LBE407:
 3418              	.LBE406:
 3419              		.loc 1 1079 5
 3420 091c 1846     		mov	r0, r3
 3421 091e FFF7FEFF 		bl	CRYP_DataIn
1080:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(headerlength));
 3422              		.loc 1 1080 5
 3423 0922 D7F8D830 		ldr	r3, [r7, #216]
 3424 0926 FB65     		str	r3, [r7, #92]
 3425              	.LBB408:
 3426              	.LBB409:
 3427              		.loc 2 498 10
 3428 0928 FB6D     		ldr	r3, [r7, #92]
 3429 092a 1BBA     		rev	r3, r3
 3430              	.LBE409:
 3431              	.LBE408:
 3432              		.loc 1 1080 5
 3433 092c 1846     		mov	r0, r3
 3434 092e FFF7FEFF 		bl	CRYP_DataIn
1081:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength>>32));
 3435              		.loc 1 1081 34
 3436 0932 D7E93401 		ldrd	r0, [r7, #208]
 3437 0936 4FF00002 		mov	r2, #0
 3438 093a 4FF00003 		mov	r3, #0
 3439 093e 0A00     		movs	r2, r1
 3440 0940 0023     		movs	r3, #0
 3441              		.loc 1 1081 5
 3442 0942 1346     		mov	r3, r2
 3443 0944 3B66     		str	r3, [r7, #96]
 3444              	.LBB410:
 3445              	.LBB411:
 3446              		.loc 2 498 10
 3447 0946 3B6E     		ldr	r3, [r7, #96]
 3448 0948 1BBA     		rev	r3, r3
 3449              	.LBE411:
 3450              	.LBE410:
 3451              		.loc 1 1081 5
 3452 094a 1846     		mov	r0, r3
 3453 094c FFF7FEFF 		bl	CRYP_DataIn
1082:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(__REV(inputlength));
 3454              		.loc 1 1082 5
 3455 0950 D7F8D030 		ldr	r3, [r7, #208]
 3456 0954 7B66     		str	r3, [r7, #100]
 3457              	.LBB412:
 3458              	.LBB413:
 3459              		.loc 2 498 10
 3460 0956 7B6E     		ldr	r3, [r7, #100]
 3461 0958 1BBA     		rev	r3, r3
 3462              	.LBE413:
 3463              	.LBE412:
 3464              		.loc 1 1082 5
 3465 095a 1846     		mov	r0, r3
 3466 095c FFF7FEFF 		bl	CRYP_DataIn
ARM GAS  /tmp/cc2lf3as.s 			page 95


1083:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
1084:./Lib/Src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 3467              		.loc 1 1084 10
 3468 0960 00BF     		nop
 3469              	.L204:
 3470              		.loc 1 1084 11 discriminator 1
 3471 0962 0420     		movs	r0, #4
 3472 0964 FFF7FEFF 		bl	CRYP_GetFlagStatus
 3473 0968 0346     		mov	r3, r0
 3474              		.loc 1 1084 46 discriminator 1
 3475 096a 002B     		cmp	r3, #0
 3476 096c F9D0     		beq	.L204
1085:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1086:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1087:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1088:./Lib/Src/stm32f4xx_cryp_aes.c ****     tagaddr = (uint32_t)AuthTAG;
 3477              		.loc 1 1088 13
 3478 096e D7F83C31 		ldr	r3, [r7, #316]
 3479 0972 C7F8E430 		str	r3, [r7, #228]
1089:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Read the Auth TAG in the IN FIFO */
1090:./Lib/Src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 3480              		.loc 1 1090 6
 3481 0976 D7F8E440 		ldr	r4, [r7, #228]
 3482              		.loc 1 1090 29
 3483 097a FFF7FEFF 		bl	CRYP_DataOut
 3484 097e 0346     		mov	r3, r0
 3485              		.loc 1 1090 27
 3486 0980 2360     		str	r3, [r4]
1091:./Lib/Src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 3487              		.loc 1 1091 12
 3488 0982 D7F8E430 		ldr	r3, [r7, #228]
 3489 0986 0433     		adds	r3, r3, #4
 3490 0988 C7F8E430 		str	r3, [r7, #228]
1092:./Lib/Src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 3491              		.loc 1 1092 6
 3492 098c D7F8E440 		ldr	r4, [r7, #228]
 3493              		.loc 1 1092 29
 3494 0990 FFF7FEFF 		bl	CRYP_DataOut
 3495 0994 0346     		mov	r3, r0
 3496              		.loc 1 1092 27
 3497 0996 2360     		str	r3, [r4]
1093:./Lib/Src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 3498              		.loc 1 1093 12
 3499 0998 D7F8E430 		ldr	r3, [r7, #228]
 3500 099c 0433     		adds	r3, r3, #4
 3501 099e C7F8E430 		str	r3, [r7, #228]
1094:./Lib/Src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 3502              		.loc 1 1094 6
 3503 09a2 D7F8E440 		ldr	r4, [r7, #228]
 3504              		.loc 1 1094 29
 3505 09a6 FFF7FEFF 		bl	CRYP_DataOut
 3506 09aa 0346     		mov	r3, r0
 3507              		.loc 1 1094 27
 3508 09ac 2360     		str	r3, [r4]
1095:./Lib/Src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 3509              		.loc 1 1095 12
 3510 09ae D7F8E430 		ldr	r3, [r7, #228]
ARM GAS  /tmp/cc2lf3as.s 			page 96


 3511 09b2 0433     		adds	r3, r3, #4
 3512 09b4 C7F8E430 		str	r3, [r7, #228]
1096:./Lib/Src/stm32f4xx_cryp_aes.c ****     *(uint32_t*)(tagaddr) = CRYP_DataOut();
 3513              		.loc 1 1096 6
 3514 09b8 D7F8E440 		ldr	r4, [r7, #228]
 3515              		.loc 1 1096 29
 3516 09bc FFF7FEFF 		bl	CRYP_DataOut
 3517 09c0 0346     		mov	r3, r0
 3518              		.loc 1 1096 27
 3519 09c2 2360     		str	r3, [r4]
1097:./Lib/Src/stm32f4xx_cryp_aes.c ****     tagaddr+=4;
 3520              		.loc 1 1097 12
 3521 09c4 D7F8E430 		ldr	r3, [r7, #228]
 3522 09c8 0433     		adds	r3, r3, #4
 3523 09ca C7F8E430 		str	r3, [r7, #228]
 3524              	.L180:
1098:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
1099:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
1100:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 3525              		.loc 1 1100 3
 3526 09ce 0020     		movs	r0, #0
 3527 09d0 FFF7FEFF 		bl	CRYP_Cmd
1101:./Lib/Src/stm32f4xx_cryp_aes.c **** 
1102:./Lib/Src/stm32f4xx_cryp_aes.c ****   return status;
 3528              		.loc 1 1102 10
 3529 09d4 97F80731 		ldrb	r3, [r7, #263]	@ zero_extendqisi2
 3530              	.L205:
1103:./Lib/Src/stm32f4xx_cryp_aes.c **** }
 3531              		.loc 1 1103 1 discriminator 1
 3532 09d8 1846     		mov	r0, r3
 3533 09da 07F58677 		add	r7, r7, #268
 3534              		.cfi_def_cfa_offset 28
 3535 09de BD46     		mov	sp, r7
 3536              		.cfi_def_cfa_register 13
 3537              		@ sp needed
 3538 09e0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3539              		.cfi_endproc
 3540              	.LFE126:
 3542              		.section	.text.CRYP_AES_CCM,"ax",%progbits
 3543              		.align	1
 3544              		.global	CRYP_AES_CCM
 3545              		.syntax unified
 3546              		.thumb
 3547              		.thumb_func
 3549              	CRYP_AES_CCM:
 3550              	.LFB127:
1104:./Lib/Src/stm32f4xx_cryp_aes.c **** 
1105:./Lib/Src/stm32f4xx_cryp_aes.c **** /**
1106:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CCM Mode. The GCM and CCM modes
1107:./Lib/Src/stm32f4xx_cryp_aes.c ****   *         are available only on STM32F437x Devices.
1108:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
1109:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
1110:./Lib/Src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
1111:./Lib/Src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
1112:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Nonce: the nonce used for AES algorithm. It shall be unique for each processing.
1113:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
1114:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
ARM GAS  /tmp/cc2lf3as.s 			page 97


1115:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
1116:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer in bytes, must be a multiple of 16.
1117:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Header: pointer to the header buffer.
1118:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Hlength: length of the header buffer in bytes.
1119:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  HBuffer: pointer to temporary buffer used to append the header
1120:./Lib/Src/stm32f4xx_cryp_aes.c ****   *         HBuffer size must be equal to Hlength + 21
1121:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
1122:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  AuthTAG: pointer to the authentication TAG buffer.
1123:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @param  TAGSize: the size of the TAG (called also MAC).
1124:./Lib/Src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
1125:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
1126:./Lib/Src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
1127:./Lib/Src/stm32f4xx_cryp_aes.c ****   */
1128:./Lib/Src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CCM(uint8_t Mode, 
1129:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t* Nonce, uint32_t NonceSize,
1130:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t *Key, uint16_t Keysize,
1131:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t *Input, uint32_t ILength,
1132:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t *Header, uint32_t HLength, uint8_t *HBuffer,
1133:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output,
1134:./Lib/Src/stm32f4xx_cryp_aes.c ****                          uint8_t *AuthTAG, uint32_t TAGSize)
1135:./Lib/Src/stm32f4xx_cryp_aes.c **** {
 3551              		.loc 1 1135 1
 3552              		.cfi_startproc
 3553              		@ args = 36, pretend = 0, frame = 272
 3554              		@ frame_needed = 1, uses_anonymous_args = 0
 3555 0000 90B5     		push	{r4, r7, lr}
 3556              		.cfi_def_cfa_offset 12
 3557              		.cfi_offset 4, -12
 3558              		.cfi_offset 7, -8
 3559              		.cfi_offset 14, -4
 3560 0002 C5B0     		sub	sp, sp, #276
 3561              		.cfi_def_cfa_offset 288
 3562 0004 00AF     		add	r7, sp, #0
 3563              		.cfi_def_cfa_register 7
 3564 0006 0446     		mov	r4, r0
 3565 0008 07F58870 		add	r0, r7, #272
 3566 000c A0F58470 		sub	r0, r0, #264
 3567 0010 0160     		str	r1, [r0]
 3568 0012 07F58871 		add	r1, r7, #272
 3569 0016 A1F58671 		sub	r1, r1, #268
 3570 001a 0A60     		str	r2, [r1]
 3571 001c 07F58872 		add	r2, r7, #272
 3572 0020 A2F58872 		sub	r2, r2, #272
 3573 0024 1360     		str	r3, [r2]
 3574 0026 07F58873 		add	r3, r7, #272
 3575 002a A3F20113 		subw	r3, r3, #257
 3576 002e 2246     		mov	r2, r4
 3577 0030 1A70     		strb	r2, [r3]
1136:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
1137:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
1138:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
1139:./Lib/Src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 3578              		.loc 1 1139 17
 3579 0032 0023     		movs	r3, #0
 3580 0034 7B64     		str	r3, [r7, #68]
1140:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 3581              		.loc 1 1140 12
ARM GAS  /tmp/cc2lf3as.s 			page 98


 3582 0036 0023     		movs	r3, #0
 3583 0038 C7F8F030 		str	r3, [r7, #240]
1141:./Lib/Src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 3584              		.loc 1 1141 15
 3585 003c 0123     		movs	r3, #1
 3586 003e 87F80F31 		strb	r3, [r7, #271]
1142:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 3587              		.loc 1 1142 12
 3588 0042 07F58873 		add	r3, r7, #272
 3589 0046 A3F58873 		sub	r3, r3, #272
 3590 004a 1B68     		ldr	r3, [r3]
 3591 004c C7F8EC30 		str	r3, [r7, #236]
1143:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 3592              		.loc 1 1143 12
 3593 0050 D7F82431 		ldr	r3, [r7, #292]
 3594 0054 C7F80831 		str	r3, [r7, #264]
1144:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 3595              		.loc 1 1144 12
 3596 0058 D7F83831 		ldr	r3, [r7, #312]
 3597 005c C7F80431 		str	r3, [r7, #260]
1145:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t headeraddr = (uint32_t)Header;
 3598              		.loc 1 1145 12
 3599 0060 D7F82C31 		ldr	r3, [r7, #300]
 3600 0064 C7F80031 		str	r3, [r7, #256]
1146:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t tagaddr = (uint32_t)AuthTAG;
 3601              		.loc 1 1146 12
 3602 0068 D7F83C31 		ldr	r3, [r7, #316]
 3603 006c C7F8E830 		str	r3, [r7, #232]
1147:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t headersize = HLength;
 3604              		.loc 1 1147 12
 3605 0070 D7F83031 		ldr	r3, [r7, #304]
 3606 0074 C7F8FC30 		str	r3, [r7, #252]
1148:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t loopcounter = 0;
 3607              		.loc 1 1148 12
 3608 0078 0023     		movs	r3, #0
 3609 007a C7F8F830 		str	r3, [r7, #248]
1149:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t bufferidx = 0;
 3610              		.loc 1 1149 12
 3611 007e 0023     		movs	r3, #0
 3612 0080 C7F8F430 		str	r3, [r7, #244]
1150:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint8_t blockb0[16] = {0};/* Block B0 */
 3613              		.loc 1 1150 11
 3614 0084 0023     		movs	r3, #0
 3615 0086 7B63     		str	r3, [r7, #52]
 3616 0088 07F13803 		add	r3, r7, #56
 3617 008c 0022     		movs	r2, #0
 3618 008e 1A60     		str	r2, [r3]
 3619 0090 5A60     		str	r2, [r3, #4]
 3620 0092 9A60     		str	r2, [r3, #8]
1151:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint8_t ctr[16] = {0}; /* Counter */
 3621              		.loc 1 1151 11
 3622 0094 0023     		movs	r3, #0
 3623 0096 7B62     		str	r3, [r7, #36]
 3624 0098 07F12803 		add	r3, r7, #40
 3625 009c 0022     		movs	r2, #0
 3626 009e 1A60     		str	r2, [r3]
 3627 00a0 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/cc2lf3as.s 			page 99


 3628 00a2 9A60     		str	r2, [r3, #8]
1152:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t temptag[4] = {0}; /* temporary TAG (MAC) */
 3629              		.loc 1 1152 12
 3630 00a4 07F11403 		add	r3, r7, #20
 3631 00a8 0022     		movs	r2, #0
 3632 00aa 1A60     		str	r2, [r3]
 3633 00ac 5A60     		str	r2, [r3, #4]
 3634 00ae 9A60     		str	r2, [r3, #8]
 3635 00b0 DA60     		str	r2, [r3, #12]
1153:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t ctraddr = (uint32_t)ctr;
 3636              		.loc 1 1153 12
 3637 00b2 07F12403 		add	r3, r7, #36
 3638 00b6 C7F8E430 		str	r3, [r7, #228]
1154:./Lib/Src/stm32f4xx_cryp_aes.c ****   uint32_t b0addr = (uint32_t)blockb0;
 3639              		.loc 1 1154 12
 3640 00ba 07F13403 		add	r3, r7, #52
 3641 00be C7F8E030 		str	r3, [r7, #224]
1155:./Lib/Src/stm32f4xx_cryp_aes.c ****   
1156:./Lib/Src/stm32f4xx_cryp_aes.c ****   /************************ Formatting the header block ***********************/
1157:./Lib/Src/stm32f4xx_cryp_aes.c ****   if(headersize != 0)
 3642              		.loc 1 1157 5
 3643 00c2 D7F8FC30 		ldr	r3, [r7, #252]
 3644 00c6 002B     		cmp	r3, #0
 3645 00c8 00F0B080 		beq	.L210
1158:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
1159:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Check that the associated data (or header) length is lower than 2^16 - 2^8 = 65536 - 256 = 6
1160:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(headersize < 65280)
 3646              		.loc 1 1160 7
 3647 00cc D7F8FC30 		ldr	r3, [r7, #252]
 3648 00d0 B3F57F4F 		cmp	r3, #65280
 3649 00d4 1ED2     		bcs	.L211
1161:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1162:./Lib/Src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = (uint8_t) ((headersize >> 8) & 0xFF);
 3650              		.loc 1 1162 53
 3651 00d6 D7F8FC30 		ldr	r3, [r7, #252]
 3652 00da 190A     		lsrs	r1, r3, #8
 3653              		.loc 1 1162 24
 3654 00dc D7F8F430 		ldr	r3, [r7, #244]
 3655 00e0 5A1C     		adds	r2, r3, #1
 3656 00e2 C7F8F420 		str	r2, [r7, #244]
 3657              		.loc 1 1162 14
 3658 00e6 D7F83421 		ldr	r2, [r7, #308]
 3659 00ea 1344     		add	r3, r3, r2
 3660              		.loc 1 1162 30
 3661 00ec CAB2     		uxtb	r2, r1
 3662              		.loc 1 1162 28
 3663 00ee 1A70     		strb	r2, [r3]
1163:./Lib/Src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = (uint8_t) ((headersize) & 0xFF);
 3664              		.loc 1 1163 24
 3665 00f0 D7F8F430 		ldr	r3, [r7, #244]
 3666 00f4 5A1C     		adds	r2, r3, #1
 3667 00f6 C7F8F420 		str	r2, [r7, #244]
 3668              		.loc 1 1163 14
 3669 00fa D7F83421 		ldr	r2, [r7, #308]
 3670 00fe 1344     		add	r3, r3, r2
 3671              		.loc 1 1163 30
 3672 0100 D7F8FC20 		ldr	r2, [r7, #252]
ARM GAS  /tmp/cc2lf3as.s 			page 100


 3673 0104 D2B2     		uxtb	r2, r2
 3674              		.loc 1 1163 28
 3675 0106 1A70     		strb	r2, [r3]
1164:./Lib/Src/stm32f4xx_cryp_aes.c ****       headersize += 2;
 3676              		.loc 1 1164 18
 3677 0108 D7F8FC30 		ldr	r3, [r7, #252]
 3678 010c 0233     		adds	r3, r3, #2
 3679 010e C7F8FC30 		str	r3, [r7, #252]
 3680 0112 42E0     		b	.L212
 3681              	.L211:
1165:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1166:./Lib/Src/stm32f4xx_cryp_aes.c ****     else
1167:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1168:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* header is encoded as 0xff || 0xfe || [headersize]32, i.e., six octets */
1169:./Lib/Src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = 0xFF;
 3682              		.loc 1 1169 24
 3683 0114 D7F8F430 		ldr	r3, [r7, #244]
 3684 0118 5A1C     		adds	r2, r3, #1
 3685 011a C7F8F420 		str	r2, [r7, #244]
 3686              		.loc 1 1169 14
 3687 011e D7F83421 		ldr	r2, [r7, #308]
 3688 0122 1344     		add	r3, r3, r2
 3689              		.loc 1 1169 28
 3690 0124 FF22     		movs	r2, #255
 3691 0126 1A70     		strb	r2, [r3]
1170:./Lib/Src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = 0xFE;
 3692              		.loc 1 1170 24
 3693 0128 D7F8F430 		ldr	r3, [r7, #244]
 3694 012c 5A1C     		adds	r2, r3, #1
 3695 012e C7F8F420 		str	r2, [r7, #244]
 3696              		.loc 1 1170 14
 3697 0132 D7F83421 		ldr	r2, [r7, #308]
 3698 0136 1344     		add	r3, r3, r2
 3699              		.loc 1 1170 28
 3700 0138 FE22     		movs	r2, #254
 3701 013a 1A70     		strb	r2, [r3]
1171:./Lib/Src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0xff000000;
 3702              		.loc 1 1171 24
 3703 013c D7F8F430 		ldr	r3, [r7, #244]
 3704 0140 5A1C     		adds	r2, r3, #1
 3705 0142 C7F8F420 		str	r2, [r7, #244]
 3706              		.loc 1 1171 14
 3707 0146 D7F83421 		ldr	r2, [r7, #308]
 3708 014a 1344     		add	r3, r3, r2
 3709              		.loc 1 1171 28
 3710 014c 0022     		movs	r2, #0
 3711 014e 1A70     		strb	r2, [r3]
1172:./Lib/Src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x00ff0000;
 3712              		.loc 1 1172 24
 3713 0150 D7F8F430 		ldr	r3, [r7, #244]
 3714 0154 5A1C     		adds	r2, r3, #1
 3715 0156 C7F8F420 		str	r2, [r7, #244]
 3716              		.loc 1 1172 14
 3717 015a D7F83421 		ldr	r2, [r7, #308]
 3718 015e 1344     		add	r3, r3, r2
 3719              		.loc 1 1172 28
 3720 0160 0022     		movs	r2, #0
ARM GAS  /tmp/cc2lf3as.s 			page 101


 3721 0162 1A70     		strb	r2, [r3]
1173:./Lib/Src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x0000ff00;
 3722              		.loc 1 1173 24
 3723 0164 D7F8F430 		ldr	r3, [r7, #244]
 3724 0168 5A1C     		adds	r2, r3, #1
 3725 016a C7F8F420 		str	r2, [r7, #244]
 3726              		.loc 1 1173 14
 3727 016e D7F83421 		ldr	r2, [r7, #308]
 3728 0172 1344     		add	r3, r3, r2
 3729              		.loc 1 1173 28
 3730 0174 0022     		movs	r2, #0
 3731 0176 1A70     		strb	r2, [r3]
1174:./Lib/Src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = headersize & 0x000000ff;
 3732              		.loc 1 1174 24
 3733 0178 D7F8F430 		ldr	r3, [r7, #244]
 3734 017c 5A1C     		adds	r2, r3, #1
 3735 017e C7F8F420 		str	r2, [r7, #244]
 3736              		.loc 1 1174 14
 3737 0182 D7F83421 		ldr	r2, [r7, #308]
 3738 0186 1344     		add	r3, r3, r2
 3739              		.loc 1 1174 28
 3740 0188 D7F8FC20 		ldr	r2, [r7, #252]
 3741 018c D2B2     		uxtb	r2, r2
 3742 018e 1A70     		strb	r2, [r3]
1175:./Lib/Src/stm32f4xx_cryp_aes.c ****       headersize += 6;
 3743              		.loc 1 1175 18
 3744 0190 D7F8FC30 		ldr	r3, [r7, #252]
 3745 0194 0633     		adds	r3, r3, #6
 3746 0196 C7F8FC30 		str	r3, [r7, #252]
 3747              	.L212:
1176:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1177:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Copy the header buffer in internal buffer "HBuffer" */
1178:./Lib/Src/stm32f4xx_cryp_aes.c ****     for(loopcounter = 0; loopcounter < headersize; loopcounter++)
 3748              		.loc 1 1178 21
 3749 019a 0023     		movs	r3, #0
 3750 019c C7F8F830 		str	r3, [r7, #248]
 3751              		.loc 1 1178 5
 3752 01a0 13E0     		b	.L213
 3753              	.L214:
1179:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1180:./Lib/Src/stm32f4xx_cryp_aes.c ****       HBuffer[bufferidx++] = Header[loopcounter];
 3754              		.loc 1 1180 36 discriminator 3
 3755 01a2 D7F82C21 		ldr	r2, [r7, #300]
 3756 01a6 D7F8F830 		ldr	r3, [r7, #248]
 3757 01aa 1A44     		add	r2, r2, r3
 3758              		.loc 1 1180 24 discriminator 3
 3759 01ac D7F8F430 		ldr	r3, [r7, #244]
 3760 01b0 591C     		adds	r1, r3, #1
 3761 01b2 C7F8F410 		str	r1, [r7, #244]
 3762              		.loc 1 1180 14 discriminator 3
 3763 01b6 D7F83411 		ldr	r1, [r7, #308]
 3764 01ba 0B44     		add	r3, r3, r1
 3765              		.loc 1 1180 36 discriminator 3
 3766 01bc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3767              		.loc 1 1180 28 discriminator 3
 3768 01be 1A70     		strb	r2, [r3]
1178:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
ARM GAS  /tmp/cc2lf3as.s 			page 102


 3769              		.loc 1 1178 63 discriminator 3
 3770 01c0 D7F8F830 		ldr	r3, [r7, #248]
 3771 01c4 0133     		adds	r3, r3, #1
 3772 01c6 C7F8F830 		str	r3, [r7, #248]
 3773              	.L213:
1178:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
 3774              		.loc 1 1178 38 discriminator 1
 3775 01ca D7F8F820 		ldr	r2, [r7, #248]
 3776 01ce D7F8FC30 		ldr	r3, [r7, #252]
 3777 01d2 9A42     		cmp	r2, r3
 3778 01d4 E5D3     		bcc	.L214
1181:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1182:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Check if the header size is modulo 16 */
1183:./Lib/Src/stm32f4xx_cryp_aes.c ****     if ((headersize % 16) != 0)
 3779              		.loc 1 1183 21
 3780 01d6 D7F8FC30 		ldr	r3, [r7, #252]
 3781 01da 03F00F03 		and	r3, r3, #15
 3782              		.loc 1 1183 8
 3783 01de 002B     		cmp	r3, #0
 3784 01e0 20D0     		beq	.L215
1184:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1185:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Padd the header buffer with 0s till the HBuffer length is modulo 16 */
1186:./Lib/Src/stm32f4xx_cryp_aes.c ****       for(loopcounter = headersize; loopcounter <= ((headersize/16) + 1) * 16; loopcounter++)
 3785              		.loc 1 1186 23
 3786 01e2 D7F8FC30 		ldr	r3, [r7, #252]
 3787 01e6 C7F8F830 		str	r3, [r7, #248]
 3788              		.loc 1 1186 7
 3789 01ea 0BE0     		b	.L216
 3790              	.L217:
1187:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1188:./Lib/Src/stm32f4xx_cryp_aes.c ****         HBuffer[loopcounter] = 0;
 3791              		.loc 1 1188 16 discriminator 3
 3792 01ec D7F83421 		ldr	r2, [r7, #308]
 3793 01f0 D7F8F830 		ldr	r3, [r7, #248]
 3794 01f4 1344     		add	r3, r3, r2
 3795              		.loc 1 1188 30 discriminator 3
 3796 01f6 0022     		movs	r2, #0
 3797 01f8 1A70     		strb	r2, [r3]
1186:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 3798              		.loc 1 1186 91 discriminator 3
 3799 01fa D7F8F830 		ldr	r3, [r7, #248]
 3800 01fe 0133     		adds	r3, r3, #1
 3801 0200 C7F8F830 		str	r3, [r7, #248]
 3802              	.L216:
1186:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 3803              		.loc 1 1186 64 discriminator 1
 3804 0204 D7F8FC30 		ldr	r3, [r7, #252]
 3805 0208 1B09     		lsrs	r3, r3, #4
1186:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 3806              		.loc 1 1186 69 discriminator 1
 3807 020a 0133     		adds	r3, r3, #1
1186:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 3808              		.loc 1 1186 74 discriminator 1
 3809 020c 1B01     		lsls	r3, r3, #4
1186:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 3810              		.loc 1 1186 49 discriminator 1
 3811 020e D7F8F820 		ldr	r2, [r7, #248]
ARM GAS  /tmp/cc2lf3as.s 			page 103


 3812 0212 9A42     		cmp	r2, r3
 3813 0214 EAD9     		bls	.L217
1189:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1190:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Set the header size to modulo 16 */
1191:./Lib/Src/stm32f4xx_cryp_aes.c ****       headersize = ((headersize/16) + 1) * 16;
 3814              		.loc 1 1191 32
 3815 0216 D7F8FC30 		ldr	r3, [r7, #252]
 3816 021a 1B09     		lsrs	r3, r3, #4
 3817              		.loc 1 1191 37
 3818 021c 0133     		adds	r3, r3, #1
 3819              		.loc 1 1191 18
 3820 021e 1B01     		lsls	r3, r3, #4
 3821 0220 C7F8FC30 		str	r3, [r7, #252]
 3822              	.L215:
1192:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1193:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* set the pointer headeraddr to HBuffer */
1194:./Lib/Src/stm32f4xx_cryp_aes.c ****     headeraddr = (uint32_t)HBuffer;
 3823              		.loc 1 1194 16
 3824 0224 D7F83431 		ldr	r3, [r7, #308]
 3825 0228 C7F80031 		str	r3, [r7, #256]
 3826              	.L210:
1195:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
1196:./Lib/Src/stm32f4xx_cryp_aes.c ****   /************************* Formatting the block B0 **************************/
1197:./Lib/Src/stm32f4xx_cryp_aes.c ****   if(headersize != 0)
 3827              		.loc 1 1197 5
 3828 022c D7F8FC30 		ldr	r3, [r7, #252]
 3829 0230 002B     		cmp	r3, #0
 3830 0232 02D0     		beq	.L218
1198:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
1199:./Lib/Src/stm32f4xx_cryp_aes.c ****     blockb0[0] = 0x40;
 3831              		.loc 1 1199 16
 3832 0234 4023     		movs	r3, #64
 3833 0236 87F83430 		strb	r3, [r7, #52]
 3834              	.L218:
1200:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
1201:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Flags byte */
1202:./Lib/Src/stm32f4xx_cryp_aes.c ****   blockb0[0] |= 0u | (((( (uint8_t) TAGSize - 2) / 2) & 0x07 ) << 3 ) | ( ( (uint8_t) (15 - NonceSi
 3835              		.loc 1 1202 10
 3836 023a 97F83420 		ldrb	r2, [r7, #52]	@ zero_extendqisi2
 3837              		.loc 1 1202 27
 3838 023e D7F84031 		ldr	r3, [r7, #320]
 3839 0242 DBB2     		uxtb	r3, r3
 3840              		.loc 1 1202 45
 3841 0244 023B     		subs	r3, r3, #2
 3842              		.loc 1 1202 50
 3843 0246 D90F     		lsrs	r1, r3, #31
 3844 0248 0B44     		add	r3, r3, r1
 3845 024a 5B10     		asrs	r3, r3, #1
 3846              		.loc 1 1202 64
 3847 024c DBB2     		uxtb	r3, r3
 3848 024e DB00     		lsls	r3, r3, #3
 3849 0250 DBB2     		uxtb	r3, r3
 3850              		.loc 1 1202 20
 3851 0252 03F03803 		and	r3, r3, #56
 3852 0256 D9B2     		uxtb	r1, r3
 3853              		.loc 1 1202 104
 3854 0258 07F58873 		add	r3, r7, #272
ARM GAS  /tmp/cc2lf3as.s 			page 104


 3855 025c A3F58673 		sub	r3, r3, #268
 3856 0260 1B68     		ldr	r3, [r3]
 3857 0262 DBB2     		uxtb	r3, r3
 3858 0264 C3F10E03 		rsb	r3, r3, #14
 3859 0268 DBB2     		uxtb	r3, r3
 3860              		.loc 1 1202 109
 3861 026a 03F00703 		and	r3, r3, #7
 3862 026e DBB2     		uxtb	r3, r3
 3863              		.loc 1 1202 71
 3864 0270 0B43     		orrs	r3, r3, r1
 3865 0272 DBB2     		uxtb	r3, r3
 3866              		.loc 1 1202 14
 3867 0274 1343     		orrs	r3, r3, r2
 3868 0276 DBB2     		uxtb	r3, r3
 3869 0278 87F83430 		strb	r3, [r7, #52]
1203:./Lib/Src/stm32f4xx_cryp_aes.c ****   
1204:./Lib/Src/stm32f4xx_cryp_aes.c ****   for (loopcounter = 0; loopcounter < NonceSize; loopcounter++)
 3870              		.loc 1 1204 20
 3871 027c 0023     		movs	r3, #0
 3872 027e C7F8F830 		str	r3, [r7, #248]
 3873              		.loc 1 1204 3
 3874 0282 15E0     		b	.L219
 3875              	.L220:
1205:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
1206:./Lib/Src/stm32f4xx_cryp_aes.c ****     blockb0[loopcounter+1] = Nonce[loopcounter];
 3876              		.loc 1 1206 35 discriminator 3
 3877 0284 07F58873 		add	r3, r7, #272
 3878 0288 A3F58473 		sub	r3, r3, #264
 3879 028c 1A68     		ldr	r2, [r3]
 3880 028e D7F8F830 		ldr	r3, [r7, #248]
 3881 0292 1A44     		add	r2, r2, r3
 3882              		.loc 1 1206 24 discriminator 3
 3883 0294 D7F8F830 		ldr	r3, [r7, #248]
 3884 0298 0133     		adds	r3, r3, #1
 3885              		.loc 1 1206 35 discriminator 3
 3886 029a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3887              		.loc 1 1206 28 discriminator 3
 3888 029c 03F58873 		add	r3, r3, #272
 3889 02a0 3B44     		add	r3, r3, r7
 3890 02a2 03F8DC2C 		strb	r2, [r3, #-220]
1204:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 3891              		.loc 1 1204 61 discriminator 3
 3892 02a6 D7F8F830 		ldr	r3, [r7, #248]
 3893 02aa 0133     		adds	r3, r3, #1
 3894 02ac C7F8F830 		str	r3, [r7, #248]
 3895              	.L219:
1204:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 3896              		.loc 1 1204 37 discriminator 1
 3897 02b0 07F58873 		add	r3, r7, #272
 3898 02b4 A3F58673 		sub	r3, r3, #268
 3899 02b8 D7F8F820 		ldr	r2, [r7, #248]
 3900 02bc 1B68     		ldr	r3, [r3]
 3901 02be 9A42     		cmp	r2, r3
 3902 02c0 E0D3     		bcc	.L220
1207:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
1208:./Lib/Src/stm32f4xx_cryp_aes.c ****   for ( ; loopcounter < 13; loopcounter++)
 3903              		.loc 1 1208 3
ARM GAS  /tmp/cc2lf3as.s 			page 105


 3904 02c2 0DE0     		b	.L221
 3905              	.L222:
1209:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
1210:./Lib/Src/stm32f4xx_cryp_aes.c ****     blockb0[loopcounter+1] = 0;
 3906              		.loc 1 1210 24 discriminator 2
 3907 02c4 D7F8F830 		ldr	r3, [r7, #248]
 3908 02c8 0133     		adds	r3, r3, #1
 3909              		.loc 1 1210 28 discriminator 2
 3910 02ca 03F58873 		add	r3, r3, #272
 3911 02ce 3B44     		add	r3, r3, r7
 3912 02d0 0022     		movs	r2, #0
 3913 02d2 03F8DC2C 		strb	r2, [r3, #-220]
1208:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 3914              		.loc 1 1208 40 discriminator 2
 3915 02d6 D7F8F830 		ldr	r3, [r7, #248]
 3916 02da 0133     		adds	r3, r3, #1
 3917 02dc C7F8F830 		str	r3, [r7, #248]
 3918              	.L221:
1208:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 3919              		.loc 1 1208 23 discriminator 1
 3920 02e0 D7F8F830 		ldr	r3, [r7, #248]
 3921 02e4 0C2B     		cmp	r3, #12
 3922 02e6 EDD9     		bls	.L222
1211:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
1212:./Lib/Src/stm32f4xx_cryp_aes.c ****   
1213:./Lib/Src/stm32f4xx_cryp_aes.c ****   blockb0[14] = ((ILength >> 8) & 0xFF);
 3923              		.loc 1 1213 27
 3924 02e8 D7F82831 		ldr	r3, [r7, #296]
 3925 02ec 1B0A     		lsrs	r3, r3, #8
 3926              		.loc 1 1213 15
 3927 02ee DBB2     		uxtb	r3, r3
 3928 02f0 87F84230 		strb	r3, [r7, #66]
1214:./Lib/Src/stm32f4xx_cryp_aes.c ****   blockb0[15] = (ILength & 0xFF);
 3929              		.loc 1 1214 15
 3930 02f4 D7F82831 		ldr	r3, [r7, #296]
 3931 02f8 DBB2     		uxtb	r3, r3
 3932 02fa 87F84330 		strb	r3, [r7, #67]
1215:./Lib/Src/stm32f4xx_cryp_aes.c ****   
1216:./Lib/Src/stm32f4xx_cryp_aes.c ****   /************************* Formatting the initial counter *******************/
1217:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Byte 0:
1218:./Lib/Src/stm32f4xx_cryp_aes.c ****      Bits 7 and 6 are reserved and shall be set to 0
1219:./Lib/Src/stm32f4xx_cryp_aes.c ****      Bits 3, 4, and 5 shall also be set to 0, to ensure that all the counter blocks
1220:./Lib/Src/stm32f4xx_cryp_aes.c ****      are distinct from B0
1221:./Lib/Src/stm32f4xx_cryp_aes.c ****      Bits 0, 1, and 2 contain the same encoding of q as in B0
1222:./Lib/Src/stm32f4xx_cryp_aes.c ****   */
1223:./Lib/Src/stm32f4xx_cryp_aes.c ****   ctr[0] = blockb0[0] & 0x07;
 3933              		.loc 1 1223 19
 3934 02fe 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 3935              		.loc 1 1223 23
 3936 0302 03F00703 		and	r3, r3, #7
 3937 0306 DBB2     		uxtb	r3, r3
 3938              		.loc 1 1223 10
 3939 0308 87F82430 		strb	r3, [r7, #36]
1224:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* byte 1 to NonceSize is the IV (Nonce) */
1225:./Lib/Src/stm32f4xx_cryp_aes.c ****   for(loopcounter = 1; loopcounter < NonceSize + 1; loopcounter++)
 3940              		.loc 1 1225 19
 3941 030c 0123     		movs	r3, #1
ARM GAS  /tmp/cc2lf3as.s 			page 106


 3942 030e C7F8F830 		str	r3, [r7, #248]
 3943              		.loc 1 1225 3
 3944 0312 11E0     		b	.L223
 3945              	.L224:
1226:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
1227:./Lib/Src/stm32f4xx_cryp_aes.c ****     ctr[loopcounter] = blockb0[loopcounter];
 3946              		.loc 1 1227 31 discriminator 3
 3947 0314 07F13402 		add	r2, r7, #52
 3948 0318 D7F8F830 		ldr	r3, [r7, #248]
 3949 031c 1344     		add	r3, r3, r2
 3950 031e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3951              		.loc 1 1227 22 discriminator 3
 3952 0320 07F12402 		add	r2, r7, #36
 3953 0324 D7F8F830 		ldr	r3, [r7, #248]
 3954 0328 1344     		add	r3, r3, r2
 3955 032a 0A46     		mov	r2, r1
 3956 032c 1A70     		strb	r2, [r3]
1225:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 3957              		.loc 1 1225 64 discriminator 3
 3958 032e D7F8F830 		ldr	r3, [r7, #248]
 3959 0332 0133     		adds	r3, r3, #1
 3960 0334 C7F8F830 		str	r3, [r7, #248]
 3961              	.L223:
1225:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 3962              		.loc 1 1225 48 discriminator 1
 3963 0338 07F58873 		add	r3, r7, #272
 3964 033c A3F58673 		sub	r3, r3, #268
 3965 0340 1B68     		ldr	r3, [r3]
 3966 0342 0133     		adds	r3, r3, #1
1225:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 3967              		.loc 1 1225 36 discriminator 1
 3968 0344 D7F8F820 		ldr	r2, [r7, #248]
 3969 0348 9A42     		cmp	r2, r3
 3970 034a E3D3     		bcc	.L224
1228:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
1229:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Set the LSB to 1 */
1230:./Lib/Src/stm32f4xx_cryp_aes.c ****   ctr[15] |= 0x01;
 3971              		.loc 1 1230 6
 3972 034c 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 3973              		.loc 1 1230 11
 3974 0350 43F00103 		orr	r3, r3, #1
 3975 0354 DBB2     		uxtb	r3, r3
 3976 0356 87F83330 		strb	r3, [r7, #51]
1231:./Lib/Src/stm32f4xx_cryp_aes.c ****   
1232:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
1233:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 3977              		.loc 1 1233 3
 3978 035a 07F15803 		add	r3, r7, #88
 3979 035e 1846     		mov	r0, r3
 3980 0360 FFF7FEFF 		bl	CRYP_KeyStructInit
1234:./Lib/Src/stm32f4xx_cryp_aes.c ****   
1235:./Lib/Src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 3981              		.loc 1 1235 3
 3982 0364 B7F82031 		ldrh	r3, [r7, #288]
 3983 0368 B3F5807F 		cmp	r3, #256
 3984 036c 00F09480 		beq	.L225
 3985 0370 B3F5807F 		cmp	r3, #256
ARM GAS  /tmp/cc2lf3as.s 			page 107


 3986 0374 00F30081 		bgt	.L298
 3987 0378 802B     		cmp	r3, #128
 3988 037a 02D0     		beq	.L227
 3989 037c C02B     		cmp	r3, #192
 3990 037e 37D0     		beq	.L228
1236:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
1237:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 128:
1238:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
1239:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1240:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1241:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1242:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1243:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1244:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1245:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1246:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
1247:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 192:
1248:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
1249:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
1250:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1251:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
1252:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1253:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1254:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1255:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1256:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1257:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1258:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1259:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1260:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
1261:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 256:
1262:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
1263:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
1264:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1265:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
1266:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1267:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
1268:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1269:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
1270:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1271:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
1272:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1273:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
1274:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1275:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
1276:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
1277:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
1278:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
1279:./Lib/Src/stm32f4xx_cryp_aes.c ****     default:
1280:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 3991              		.loc 1 1280 5
 3992 0380 FAE0     		b	.L298
 3993              	.L227:
1238:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 3994              		.loc 1 1238 41
 3995 0382 0023     		movs	r3, #0
 3996 0384 C7F88430 		str	r3, [r7, #132]
ARM GAS  /tmp/cc2lf3as.s 			page 108


1239:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3997              		.loc 1 1239 54
 3998 0388 D7F8EC30 		ldr	r3, [r7, #236]
1239:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 3999              		.loc 1 1239 47
 4000 038c 1B68     		ldr	r3, [r3]
 4001 038e C7F8D030 		str	r3, [r7, #208]
 4002              	.LBB414:
 4003              	.LBB415:
 4004              		.loc 2 498 10
 4005 0392 D7F8D030 		ldr	r3, [r7, #208]
 4006 0396 1BBA     		rev	r3, r3
 4007              	.LBE415:
 4008              	.LBE414:
1239:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4009              		.loc 1 1239 45
 4010 0398 BB66     		str	r3, [r7, #104]
1240:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 4011              		.loc 1 1240 12
 4012 039a D7F8EC30 		ldr	r3, [r7, #236]
 4013 039e 0433     		adds	r3, r3, #4
 4014 03a0 C7F8EC30 		str	r3, [r7, #236]
1241:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4015              		.loc 1 1241 54
 4016 03a4 D7F8EC30 		ldr	r3, [r7, #236]
1241:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4017              		.loc 1 1241 47
 4018 03a8 1B68     		ldr	r3, [r3]
 4019 03aa C7F8D430 		str	r3, [r7, #212]
 4020              	.LBB416:
 4021              	.LBB417:
 4022              		.loc 2 498 10
 4023 03ae D7F8D430 		ldr	r3, [r7, #212]
 4024 03b2 1BBA     		rev	r3, r3
 4025              	.LBE417:
 4026              	.LBE416:
1241:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4027              		.loc 1 1241 45
 4028 03b4 FB66     		str	r3, [r7, #108]
1242:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 4029              		.loc 1 1242 12
 4030 03b6 D7F8EC30 		ldr	r3, [r7, #236]
 4031 03ba 0433     		adds	r3, r3, #4
 4032 03bc C7F8EC30 		str	r3, [r7, #236]
1243:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4033              		.loc 1 1243 54
 4034 03c0 D7F8EC30 		ldr	r3, [r7, #236]
1243:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4035              		.loc 1 1243 47
 4036 03c4 1B68     		ldr	r3, [r3]
 4037 03c6 C7F8D830 		str	r3, [r7, #216]
 4038              	.LBB418:
 4039              	.LBB419:
 4040              		.loc 2 498 10
 4041 03ca D7F8D830 		ldr	r3, [r7, #216]
 4042 03ce 1BBA     		rev	r3, r3
 4043              	.LBE419:
ARM GAS  /tmp/cc2lf3as.s 			page 109


 4044              	.LBE418:
1243:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4045              		.loc 1 1243 45
 4046 03d0 3B67     		str	r3, [r7, #112]
1244:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 4047              		.loc 1 1244 12
 4048 03d2 D7F8EC30 		ldr	r3, [r7, #236]
 4049 03d6 0433     		adds	r3, r3, #4
 4050 03d8 C7F8EC30 		str	r3, [r7, #236]
1245:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 4051              		.loc 1 1245 54
 4052 03dc D7F8EC30 		ldr	r3, [r7, #236]
1245:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 4053              		.loc 1 1245 47
 4054 03e0 1B68     		ldr	r3, [r3]
 4055 03e2 C7F8DC30 		str	r3, [r7, #220]
 4056              	.LBB420:
 4057              	.LBB421:
 4058              		.loc 2 498 10
 4059 03e6 D7F8DC30 		ldr	r3, [r7, #220]
 4060 03ea 1BBA     		rev	r3, r3
 4061              	.LBE421:
 4062              	.LBE420:
1245:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 4063              		.loc 1 1245 45
 4064 03ec 7B67     		str	r3, [r7, #116]
1246:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 192:
 4065              		.loc 1 1246 5
 4066 03ee C4E0     		b	.L233
 4067              	.L228:
1248:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 4068              		.loc 1 1248 42
 4069 03f0 4FF48073 		mov	r3, #256
 4070 03f4 C7F88430 		str	r3, [r7, #132]
1249:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4071              		.loc 1 1249 54
 4072 03f8 D7F8EC30 		ldr	r3, [r7, #236]
1249:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4073              		.loc 1 1249 47
 4074 03fc 1B68     		ldr	r3, [r3]
 4075 03fe C7F8B830 		str	r3, [r7, #184]
 4076              	.LBB422:
 4077              	.LBB423:
 4078              		.loc 2 498 10
 4079 0402 D7F8B830 		ldr	r3, [r7, #184]
 4080 0406 1BBA     		rev	r3, r3
 4081              	.LBE423:
 4082              	.LBE422:
1249:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4083              		.loc 1 1249 45
 4084 0408 3B66     		str	r3, [r7, #96]
1250:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 4085              		.loc 1 1250 12
 4086 040a D7F8EC30 		ldr	r3, [r7, #236]
 4087 040e 0433     		adds	r3, r3, #4
 4088 0410 C7F8EC30 		str	r3, [r7, #236]
1251:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc2lf3as.s 			page 110


 4089              		.loc 1 1251 54
 4090 0414 D7F8EC30 		ldr	r3, [r7, #236]
1251:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4091              		.loc 1 1251 47
 4092 0418 1B68     		ldr	r3, [r3]
 4093 041a C7F8BC30 		str	r3, [r7, #188]
 4094              	.LBB424:
 4095              	.LBB425:
 4096              		.loc 2 498 10
 4097 041e D7F8BC30 		ldr	r3, [r7, #188]
 4098 0422 1BBA     		rev	r3, r3
 4099              	.LBE425:
 4100              	.LBE424:
1251:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4101              		.loc 1 1251 45
 4102 0424 7B66     		str	r3, [r7, #100]
1252:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 4103              		.loc 1 1252 12
 4104 0426 D7F8EC30 		ldr	r3, [r7, #236]
 4105 042a 0433     		adds	r3, r3, #4
 4106 042c C7F8EC30 		str	r3, [r7, #236]
1253:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4107              		.loc 1 1253 54
 4108 0430 D7F8EC30 		ldr	r3, [r7, #236]
1253:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4109              		.loc 1 1253 47
 4110 0434 1B68     		ldr	r3, [r3]
 4111 0436 C7F8C030 		str	r3, [r7, #192]
 4112              	.LBB426:
 4113              	.LBB427:
 4114              		.loc 2 498 10
 4115 043a D7F8C030 		ldr	r3, [r7, #192]
 4116 043e 1BBA     		rev	r3, r3
 4117              	.LBE427:
 4118              	.LBE426:
1253:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4119              		.loc 1 1253 45
 4120 0440 BB66     		str	r3, [r7, #104]
1254:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 4121              		.loc 1 1254 12
 4122 0442 D7F8EC30 		ldr	r3, [r7, #236]
 4123 0446 0433     		adds	r3, r3, #4
 4124 0448 C7F8EC30 		str	r3, [r7, #236]
1255:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4125              		.loc 1 1255 54
 4126 044c D7F8EC30 		ldr	r3, [r7, #236]
1255:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4127              		.loc 1 1255 47
 4128 0450 1B68     		ldr	r3, [r3]
 4129 0452 C7F8C430 		str	r3, [r7, #196]
 4130              	.LBB428:
 4131              	.LBB429:
 4132              		.loc 2 498 10
 4133 0456 D7F8C430 		ldr	r3, [r7, #196]
 4134 045a 1BBA     		rev	r3, r3
 4135              	.LBE429:
 4136              	.LBE428:
ARM GAS  /tmp/cc2lf3as.s 			page 111


1255:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4137              		.loc 1 1255 45
 4138 045c FB66     		str	r3, [r7, #108]
1256:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 4139              		.loc 1 1256 12
 4140 045e D7F8EC30 		ldr	r3, [r7, #236]
 4141 0462 0433     		adds	r3, r3, #4
 4142 0464 C7F8EC30 		str	r3, [r7, #236]
1257:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4143              		.loc 1 1257 54
 4144 0468 D7F8EC30 		ldr	r3, [r7, #236]
1257:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4145              		.loc 1 1257 47
 4146 046c 1B68     		ldr	r3, [r3]
 4147 046e C7F8C830 		str	r3, [r7, #200]
 4148              	.LBB430:
 4149              	.LBB431:
 4150              		.loc 2 498 10
 4151 0472 D7F8C830 		ldr	r3, [r7, #200]
 4152 0476 1BBA     		rev	r3, r3
 4153              	.LBE431:
 4154              	.LBE430:
1257:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4155              		.loc 1 1257 45
 4156 0478 3B67     		str	r3, [r7, #112]
1258:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 4157              		.loc 1 1258 12
 4158 047a D7F8EC30 		ldr	r3, [r7, #236]
 4159 047e 0433     		adds	r3, r3, #4
 4160 0480 C7F8EC30 		str	r3, [r7, #236]
1259:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 4161              		.loc 1 1259 54
 4162 0484 D7F8EC30 		ldr	r3, [r7, #236]
1259:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 4163              		.loc 1 1259 47
 4164 0488 1B68     		ldr	r3, [r3]
 4165 048a C7F8CC30 		str	r3, [r7, #204]
 4166              	.LBB432:
 4167              	.LBB433:
 4168              		.loc 2 498 10
 4169 048e D7F8CC30 		ldr	r3, [r7, #204]
 4170 0492 1BBA     		rev	r3, r3
 4171              	.LBE433:
 4172              	.LBE432:
1259:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 4173              		.loc 1 1259 45
 4174 0494 7B67     		str	r3, [r7, #116]
1260:./Lib/Src/stm32f4xx_cryp_aes.c ****     case 256:
 4175              		.loc 1 1260 5
 4176 0496 70E0     		b	.L233
 4177              	.L225:
1262:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 4178              		.loc 1 1262 42
 4179 0498 4FF40073 		mov	r3, #512
 4180 049c C7F88430 		str	r3, [r7, #132]
1263:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4181              		.loc 1 1263 54
ARM GAS  /tmp/cc2lf3as.s 			page 112


 4182 04a0 D7F8EC30 		ldr	r3, [r7, #236]
1263:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4183              		.loc 1 1263 47
 4184 04a4 1B68     		ldr	r3, [r3]
 4185 04a6 C7F89830 		str	r3, [r7, #152]
 4186              	.LBB434:
 4187              	.LBB435:
 4188              		.loc 2 498 10
 4189 04aa D7F89830 		ldr	r3, [r7, #152]
 4190 04ae 1BBA     		rev	r3, r3
 4191              	.LBE435:
 4192              	.LBE434:
1263:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4193              		.loc 1 1263 45
 4194 04b0 BB65     		str	r3, [r7, #88]
1264:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 4195              		.loc 1 1264 12
 4196 04b2 D7F8EC30 		ldr	r3, [r7, #236]
 4197 04b6 0433     		adds	r3, r3, #4
 4198 04b8 C7F8EC30 		str	r3, [r7, #236]
1265:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4199              		.loc 1 1265 54
 4200 04bc D7F8EC30 		ldr	r3, [r7, #236]
1265:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4201              		.loc 1 1265 47
 4202 04c0 1B68     		ldr	r3, [r3]
 4203 04c2 C7F89C30 		str	r3, [r7, #156]
 4204              	.LBB436:
 4205              	.LBB437:
 4206              		.loc 2 498 10
 4207 04c6 D7F89C30 		ldr	r3, [r7, #156]
 4208 04ca 1BBA     		rev	r3, r3
 4209              	.LBE437:
 4210              	.LBE436:
1265:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4211              		.loc 1 1265 45
 4212 04cc FB65     		str	r3, [r7, #92]
1266:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 4213              		.loc 1 1266 12
 4214 04ce D7F8EC30 		ldr	r3, [r7, #236]
 4215 04d2 0433     		adds	r3, r3, #4
 4216 04d4 C7F8EC30 		str	r3, [r7, #236]
1267:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4217              		.loc 1 1267 54
 4218 04d8 D7F8EC30 		ldr	r3, [r7, #236]
1267:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4219              		.loc 1 1267 47
 4220 04dc 1B68     		ldr	r3, [r3]
 4221 04de C7F8A030 		str	r3, [r7, #160]
 4222              	.LBB438:
 4223              	.LBB439:
 4224              		.loc 2 498 10
 4225 04e2 D7F8A030 		ldr	r3, [r7, #160]
 4226 04e6 1BBA     		rev	r3, r3
 4227              	.LBE439:
 4228              	.LBE438:
1267:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
ARM GAS  /tmp/cc2lf3as.s 			page 113


 4229              		.loc 1 1267 45
 4230 04e8 3B66     		str	r3, [r7, #96]
1268:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 4231              		.loc 1 1268 12
 4232 04ea D7F8EC30 		ldr	r3, [r7, #236]
 4233 04ee 0433     		adds	r3, r3, #4
 4234 04f0 C7F8EC30 		str	r3, [r7, #236]
1269:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4235              		.loc 1 1269 54
 4236 04f4 D7F8EC30 		ldr	r3, [r7, #236]
1269:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4237              		.loc 1 1269 47
 4238 04f8 1B68     		ldr	r3, [r3]
 4239 04fa C7F8A430 		str	r3, [r7, #164]
 4240              	.LBB440:
 4241              	.LBB441:
 4242              		.loc 2 498 10
 4243 04fe D7F8A430 		ldr	r3, [r7, #164]
 4244 0502 1BBA     		rev	r3, r3
 4245              	.LBE441:
 4246              	.LBE440:
1269:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4247              		.loc 1 1269 45
 4248 0504 7B66     		str	r3, [r7, #100]
1270:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 4249              		.loc 1 1270 12
 4250 0506 D7F8EC30 		ldr	r3, [r7, #236]
 4251 050a 0433     		adds	r3, r3, #4
 4252 050c C7F8EC30 		str	r3, [r7, #236]
1271:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4253              		.loc 1 1271 54
 4254 0510 D7F8EC30 		ldr	r3, [r7, #236]
1271:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4255              		.loc 1 1271 47
 4256 0514 1B68     		ldr	r3, [r3]
 4257 0516 C7F8A830 		str	r3, [r7, #168]
 4258              	.LBB442:
 4259              	.LBB443:
 4260              		.loc 2 498 10
 4261 051a D7F8A830 		ldr	r3, [r7, #168]
 4262 051e 1BBA     		rev	r3, r3
 4263              	.LBE443:
 4264              	.LBE442:
1271:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4265              		.loc 1 1271 45
 4266 0520 BB66     		str	r3, [r7, #104]
1272:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 4267              		.loc 1 1272 12
 4268 0522 D7F8EC30 		ldr	r3, [r7, #236]
 4269 0526 0433     		adds	r3, r3, #4
 4270 0528 C7F8EC30 		str	r3, [r7, #236]
1273:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4271              		.loc 1 1273 54
 4272 052c D7F8EC30 		ldr	r3, [r7, #236]
1273:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4273              		.loc 1 1273 47
 4274 0530 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc2lf3as.s 			page 114


 4275 0532 C7F8AC30 		str	r3, [r7, #172]
 4276              	.LBB444:
 4277              	.LBB445:
 4278              		.loc 2 498 10
 4279 0536 D7F8AC30 		ldr	r3, [r7, #172]
 4280 053a 1BBA     		rev	r3, r3
 4281              	.LBE445:
 4282              	.LBE444:
1273:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4283              		.loc 1 1273 45
 4284 053c FB66     		str	r3, [r7, #108]
1274:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 4285              		.loc 1 1274 12
 4286 053e D7F8EC30 		ldr	r3, [r7, #236]
 4287 0542 0433     		adds	r3, r3, #4
 4288 0544 C7F8EC30 		str	r3, [r7, #236]
1275:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4289              		.loc 1 1275 54
 4290 0548 D7F8EC30 		ldr	r3, [r7, #236]
1275:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4291              		.loc 1 1275 47
 4292 054c 1B68     		ldr	r3, [r3]
 4293 054e C7F8B030 		str	r3, [r7, #176]
 4294              	.LBB446:
 4295              	.LBB447:
 4296              		.loc 2 498 10
 4297 0552 D7F8B030 		ldr	r3, [r7, #176]
 4298 0556 1BBA     		rev	r3, r3
 4299              	.LBE447:
 4300              	.LBE446:
1275:./Lib/Src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 4301              		.loc 1 1275 45
 4302 0558 3B67     		str	r3, [r7, #112]
1276:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 4303              		.loc 1 1276 12
 4304 055a D7F8EC30 		ldr	r3, [r7, #236]
 4305 055e 0433     		adds	r3, r3, #4
 4306 0560 C7F8EC30 		str	r3, [r7, #236]
1277:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 4307              		.loc 1 1277 54
 4308 0564 D7F8EC30 		ldr	r3, [r7, #236]
1277:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 4309              		.loc 1 1277 47
 4310 0568 1B68     		ldr	r3, [r3]
 4311 056a C7F8B430 		str	r3, [r7, #180]
 4312              	.LBB448:
 4313              	.LBB449:
 4314              		.loc 2 498 10
 4315 056e D7F8B430 		ldr	r3, [r7, #180]
 4316 0572 1BBA     		rev	r3, r3
 4317              	.LBE449:
 4318              	.LBE448:
1277:./Lib/Src/stm32f4xx_cryp_aes.c ****     break;
 4319              		.loc 1 1277 45
 4320 0574 7B67     		str	r3, [r7, #116]
1278:./Lib/Src/stm32f4xx_cryp_aes.c ****     default:
 4321              		.loc 1 1278 5
ARM GAS  /tmp/cc2lf3as.s 			page 115


 4322 0576 00E0     		b	.L233
 4323              	.L298:
 4324              		.loc 1 1280 5
 4325 0578 00BF     		nop
 4326              	.L233:
1281:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
1282:./Lib/Src/stm32f4xx_cryp_aes.c ****   
1283:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
1284:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = (__REV(*(uint32_t*)(ctraddr)));
 4327              		.loc 1 1284 51
 4328 057a D7F8E430 		ldr	r3, [r7, #228]
 4329              		.loc 1 1284 44
 4330 057e 1B68     		ldr	r3, [r3]
 4331 0580 C7F88830 		str	r3, [r7, #136]
 4332              	.LBB450:
 4333              	.LBB451:
 4334              		.loc 2 498 10
 4335 0584 D7F88830 		ldr	r3, [r7, #136]
 4336 0588 1BBA     		rev	r3, r3
 4337              	.LBE451:
 4338              	.LBE450:
 4339              		.loc 1 1284 41
 4340 058a BB64     		str	r3, [r7, #72]
1285:./Lib/Src/stm32f4xx_cryp_aes.c ****   ctraddr+=4;
 4341              		.loc 1 1285 10
 4342 058c D7F8E430 		ldr	r3, [r7, #228]
 4343 0590 0433     		adds	r3, r3, #4
 4344 0592 C7F8E430 		str	r3, [r7, #228]
1286:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= (__REV(*(uint32_t*)(ctraddr)));
 4345              		.loc 1 1286 51
 4346 0596 D7F8E430 		ldr	r3, [r7, #228]
 4347              		.loc 1 1286 44
 4348 059a 1B68     		ldr	r3, [r3]
 4349 059c C7F88C30 		str	r3, [r7, #140]
 4350              	.LBB452:
 4351              	.LBB453:
 4352              		.loc 2 498 10
 4353 05a0 D7F88C30 		ldr	r3, [r7, #140]
 4354 05a4 1BBA     		rev	r3, r3
 4355              	.LBE453:
 4356              	.LBE452:
 4357              		.loc 1 1286 41
 4358 05a6 FB64     		str	r3, [r7, #76]
1287:./Lib/Src/stm32f4xx_cryp_aes.c ****   ctraddr+=4;
 4359              		.loc 1 1287 10
 4360 05a8 D7F8E430 		ldr	r3, [r7, #228]
 4361 05ac 0433     		adds	r3, r3, #4
 4362 05ae C7F8E430 		str	r3, [r7, #228]
1288:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = (__REV(*(uint32_t*)(ctraddr)));
 4363              		.loc 1 1288 51
 4364 05b2 D7F8E430 		ldr	r3, [r7, #228]
 4365              		.loc 1 1288 44
 4366 05b6 1B68     		ldr	r3, [r3]
 4367 05b8 C7F89030 		str	r3, [r7, #144]
 4368              	.LBB454:
 4369              	.LBB455:
 4370              		.loc 2 498 10
ARM GAS  /tmp/cc2lf3as.s 			page 116


 4371 05bc D7F89030 		ldr	r3, [r7, #144]
 4372 05c0 1BBA     		rev	r3, r3
 4373              	.LBE455:
 4374              	.LBE454:
 4375              		.loc 1 1288 41
 4376 05c2 3B65     		str	r3, [r7, #80]
1289:./Lib/Src/stm32f4xx_cryp_aes.c ****   ctraddr+=4;
 4377              		.loc 1 1289 10
 4378 05c4 D7F8E430 		ldr	r3, [r7, #228]
 4379 05c8 0433     		adds	r3, r3, #4
 4380 05ca C7F8E430 		str	r3, [r7, #228]
1290:./Lib/Src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= (__REV(*(uint32_t*)(ctraddr)));
 4381              		.loc 1 1290 51
 4382 05ce D7F8E430 		ldr	r3, [r7, #228]
 4383              		.loc 1 1290 44
 4384 05d2 1B68     		ldr	r3, [r3]
 4385 05d4 C7F89430 		str	r3, [r7, #148]
 4386              	.LBB456:
 4387              	.LBB457:
 4388              		.loc 2 498 10
 4389 05d8 D7F89430 		ldr	r3, [r7, #148]
 4390 05dc 1BBA     		rev	r3, r3
 4391              	.LBE457:
 4392              	.LBE456:
 4393              		.loc 1 1290 41
 4394 05de 7B65     		str	r3, [r7, #84]
1291:./Lib/Src/stm32f4xx_cryp_aes.c ****   
1292:./Lib/Src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
1293:./Lib/Src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_ENCRYPT) /* AES encryption */
 4395              		.loc 1 1293 5
 4396 05e0 07F58873 		add	r3, r7, #272
 4397 05e4 A3F20113 		subw	r3, r3, #257
 4398 05e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4399 05ea 012B     		cmp	r3, #1
 4400 05ec 40F0B981 		bne	.L252
1294:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
1295:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
1296:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 4401              		.loc 1 1296 5
 4402 05f0 FFF7FEFF 		bl	CRYP_FIFOFlush
1297:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1298:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
1299:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 4403              		.loc 1 1299 5
 4404 05f4 07F15803 		add	r3, r7, #88
 4405 05f8 1846     		mov	r0, r3
 4406 05fa FFF7FEFF 		bl	CRYP_KeyInit
1300:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1301:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* CRYP Initialization Vectors */
1302:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_IVInit(&AES_CRYP_IVInitStructure);
 4407              		.loc 1 1302 5
 4408 05fe 07F14803 		add	r3, r7, #72
 4409 0602 1846     		mov	r0, r3
 4410 0604 FFF7FEFF 		bl	CRYP_IVInit
1303:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1304:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
1305:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
ARM GAS  /tmp/cc2lf3as.s 			page 117


 4411              		.loc 1 1305 41
 4412 0608 0023     		movs	r3, #0
 4413 060a BB67     		str	r3, [r7, #120]
1306:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CCM;
 4414              		.loc 1 1306 42
 4415 060c 4FF00813 		mov	r3, #524296
 4416 0610 FB67     		str	r3, [r7, #124]
1307:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 4417              		.loc 1 1307 42
 4418 0612 8023     		movs	r3, #128
 4419 0614 C7F88030 		str	r3, [r7, #128]
1308:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 4420              		.loc 1 1308 5
 4421 0618 07F17803 		add	r3, r7, #120
 4422 061c 1846     		mov	r0, r3
 4423 061e FFF7FEFF 		bl	CRYP_Init
1309:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1310:./Lib/Src/stm32f4xx_cryp_aes.c ****     /***************************** Init phase *********************************/
1311:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Select init phase */
1312:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Init);
 4424              		.loc 1 1312 5
 4425 0622 0020     		movs	r0, #0
 4426 0624 FFF7FEFF 		bl	CRYP_PhaseConfig
1313:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1314:./Lib/Src/stm32f4xx_cryp_aes.c ****     b0addr = (uint32_t)blockb0;
 4427              		.loc 1 1314 12
 4428 0628 07F13403 		add	r3, r7, #52
 4429 062c C7F8E030 		str	r3, [r7, #224]
1315:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Write the blockb0 block in the IN FIFO */
1316:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 4430              		.loc 1 1316 19
 4431 0630 D7F8E030 		ldr	r3, [r7, #224]
 4432              		.loc 1 1316 5
 4433 0634 1B68     		ldr	r3, [r3]
 4434 0636 1846     		mov	r0, r3
 4435 0638 FFF7FEFF 		bl	CRYP_DataIn
1317:./Lib/Src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
 4436              		.loc 1 1317 11
 4437 063c D7F8E030 		ldr	r3, [r7, #224]
 4438 0640 0433     		adds	r3, r3, #4
 4439 0642 C7F8E030 		str	r3, [r7, #224]
1318:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 4440              		.loc 1 1318 19
 4441 0646 D7F8E030 		ldr	r3, [r7, #224]
 4442              		.loc 1 1318 5
 4443 064a 1B68     		ldr	r3, [r3]
 4444 064c 1846     		mov	r0, r3
 4445 064e FFF7FEFF 		bl	CRYP_DataIn
1319:./Lib/Src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
 4446              		.loc 1 1319 11
 4447 0652 D7F8E030 		ldr	r3, [r7, #224]
 4448 0656 0433     		adds	r3, r3, #4
 4449 0658 C7F8E030 		str	r3, [r7, #224]
1320:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 4450              		.loc 1 1320 19
 4451 065c D7F8E030 		ldr	r3, [r7, #224]
 4452              		.loc 1 1320 5
ARM GAS  /tmp/cc2lf3as.s 			page 118


 4453 0660 1B68     		ldr	r3, [r3]
 4454 0662 1846     		mov	r0, r3
 4455 0664 FFF7FEFF 		bl	CRYP_DataIn
1321:./Lib/Src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
 4456              		.loc 1 1321 11
 4457 0668 D7F8E030 		ldr	r3, [r7, #224]
 4458 066c 0433     		adds	r3, r3, #4
 4459 066e C7F8E030 		str	r3, [r7, #224]
1322:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 4460              		.loc 1 1322 19
 4461 0672 D7F8E030 		ldr	r3, [r7, #224]
 4462              		.loc 1 1322 5
 4463 0676 1B68     		ldr	r3, [r3]
 4464 0678 1846     		mov	r0, r3
 4465 067a FFF7FEFF 		bl	CRYP_DataIn
1323:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1324:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1325:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 4466              		.loc 1 1325 5
 4467 067e 0120     		movs	r0, #1
 4468 0680 FFF7FEFF 		bl	CRYP_Cmd
1326:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1327:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Wait for CRYPEN bit to be 0 */
1328:./Lib/Src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetCmdStatus() == ENABLE)
 4469              		.loc 1 1328 10
 4470 0684 00BF     		nop
 4471              	.L253:
 4472              		.loc 1 1328 11 discriminator 1
 4473 0686 FFF7FEFF 		bl	CRYP_GetCmdStatus
 4474 068a 0346     		mov	r3, r0
 4475              		.loc 1 1328 31 discriminator 1
 4476 068c 012B     		cmp	r3, #1
 4477 068e FAD0     		beq	.L253
1329:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1330:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1331:./Lib/Src/stm32f4xx_cryp_aes.c ****     /***************************** header phase *******************************/
1332:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(headersize != 0)
 4478              		.loc 1 1332 7
 4479 0690 D7F8FC30 		ldr	r3, [r7, #252]
 4480 0694 002B     		cmp	r3, #0
 4481 0696 69D0     		beq	.L254
1333:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1334:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Select header phase */
1335:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Header);
 4482              		.loc 1 1335 7
 4483 0698 4FF48030 		mov	r0, #65536
 4484 069c FFF7FEFF 		bl	CRYP_PhaseConfig
1336:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1337:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1338:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 4485              		.loc 1 1338 7
 4486 06a0 0120     		movs	r0, #1
 4487 06a2 FFF7FEFF 		bl	CRYP_Cmd
1339:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1340:./Lib/Src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 4488              		.loc 1 1340 10
 4489 06a6 FFF7FEFF 		bl	CRYP_GetCmdStatus
ARM GAS  /tmp/cc2lf3as.s 			page 119


 4490 06aa 0346     		mov	r3, r0
 4491              		.loc 1 1340 9
 4492 06ac 002B     		cmp	r3, #0
 4493 06ae 01D1     		bne	.L255
1341:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1342:./Lib/Src/stm32f4xx_cryp_aes.c ****          /* The CRYP peripheral clock is not enabled or the device doesn't embed 
1343:./Lib/Src/stm32f4xx_cryp_aes.c ****             the CRYP peripheral (please check the device sales type. */
1344:./Lib/Src/stm32f4xx_cryp_aes.c ****          return(ERROR);
 4494              		.loc 1 1344 16
 4495 06b0 0023     		movs	r3, #0
 4496 06b2 2EE3     		b	.L297
 4497              	.L255:
1345:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1346:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1347:./Lib/Src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; (loopcounter < headersize); loopcounter+=16)
 4498              		.loc 1 1347 23
 4499 06b4 0023     		movs	r3, #0
 4500 06b6 C7F8F830 		str	r3, [r7, #248]
 4501              		.loc 1 1347 7
 4502 06ba 37E0     		b	.L257
 4503              	.L259:
1348:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1349:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1350:./Lib/Src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 4504              		.loc 1 1350 14
 4505 06bc 00BF     		nop
 4506              	.L258:
 4507              		.loc 1 1350 15 discriminator 1
 4508 06be 0120     		movs	r0, #1
 4509 06c0 FFF7FEFF 		bl	CRYP_GetFlagStatus
 4510 06c4 0346     		mov	r3, r0
 4511              		.loc 1 1350 50 discriminator 1
 4512 06c6 002B     		cmp	r3, #0
 4513 06c8 F9D0     		beq	.L258
1351:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1352:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
1353:./Lib/Src/stm32f4xx_cryp_aes.c ****         
1354:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1355:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 4514              		.loc 1 1355 22 discriminator 2
 4515 06ca D7F80031 		ldr	r3, [r7, #256]
 4516              		.loc 1 1355 9 discriminator 2
 4517 06ce 1B68     		ldr	r3, [r3]
 4518 06d0 1846     		mov	r0, r3
 4519 06d2 FFF7FEFF 		bl	CRYP_DataIn
1356:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 4520              		.loc 1 1356 19 discriminator 2
 4521 06d6 D7F80031 		ldr	r3, [r7, #256]
 4522 06da 0433     		adds	r3, r3, #4
 4523 06dc C7F80031 		str	r3, [r7, #256]
1357:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 4524              		.loc 1 1357 22 discriminator 2
 4525 06e0 D7F80031 		ldr	r3, [r7, #256]
 4526              		.loc 1 1357 9 discriminator 2
 4527 06e4 1B68     		ldr	r3, [r3]
 4528 06e6 1846     		mov	r0, r3
 4529 06e8 FFF7FEFF 		bl	CRYP_DataIn
ARM GAS  /tmp/cc2lf3as.s 			page 120


1358:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 4530              		.loc 1 1358 19 discriminator 2
 4531 06ec D7F80031 		ldr	r3, [r7, #256]
 4532 06f0 0433     		adds	r3, r3, #4
 4533 06f2 C7F80031 		str	r3, [r7, #256]
1359:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 4534              		.loc 1 1359 22 discriminator 2
 4535 06f6 D7F80031 		ldr	r3, [r7, #256]
 4536              		.loc 1 1359 9 discriminator 2
 4537 06fa 1B68     		ldr	r3, [r3]
 4538 06fc 1846     		mov	r0, r3
 4539 06fe FFF7FEFF 		bl	CRYP_DataIn
1360:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 4540              		.loc 1 1360 19 discriminator 2
 4541 0702 D7F80031 		ldr	r3, [r7, #256]
 4542 0706 0433     		adds	r3, r3, #4
 4543 0708 C7F80031 		str	r3, [r7, #256]
1361:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 4544              		.loc 1 1361 22 discriminator 2
 4545 070c D7F80031 		ldr	r3, [r7, #256]
 4546              		.loc 1 1361 9 discriminator 2
 4547 0710 1B68     		ldr	r3, [r3]
 4548 0712 1846     		mov	r0, r3
 4549 0714 FFF7FEFF 		bl	CRYP_DataIn
1362:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 4550              		.loc 1 1362 19 discriminator 2
 4551 0718 D7F80031 		ldr	r3, [r7, #256]
 4552 071c 0433     		adds	r3, r3, #4
 4553 071e C7F80031 		str	r3, [r7, #256]
1347:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 4554              		.loc 1 1347 67 discriminator 2
 4555 0722 D7F8F830 		ldr	r3, [r7, #248]
 4556 0726 1033     		adds	r3, r3, #16
 4557 0728 C7F8F830 		str	r3, [r7, #248]
 4558              	.L257:
1347:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 4559              		.loc 1 1347 41 discriminator 1
 4560 072c D7F8F820 		ldr	r2, [r7, #248]
 4561 0730 D7F8FC30 		ldr	r3, [r7, #252]
 4562 0734 9A42     		cmp	r2, r3
 4563 0736 C1D3     		bcc	.L259
1363:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1364:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1365:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Wait until the complete message has been processed */
1366:./Lib/Src/stm32f4xx_cryp_aes.c ****       counter = 0;
 4564              		.loc 1 1366 15
 4565 0738 0023     		movs	r3, #0
 4566 073a 7B64     		str	r3, [r7, #68]
 4567              	.L261:
1367:./Lib/Src/stm32f4xx_cryp_aes.c ****       do
1368:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1369:./Lib/Src/stm32f4xx_cryp_aes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 4568              		.loc 1 1369 22 discriminator 2
 4569 073c 1020     		movs	r0, #16
 4570 073e FFF7FEFF 		bl	CRYP_GetFlagStatus
 4571 0742 0346     		mov	r3, r0
 4572              		.loc 1 1369 20 discriminator 2
ARM GAS  /tmp/cc2lf3as.s 			page 121


 4573 0744 C7F8F030 		str	r3, [r7, #240]
1370:./Lib/Src/stm32f4xx_cryp_aes.c ****         counter++;
 4574              		.loc 1 1370 16 discriminator 2
 4575 0748 7B6C     		ldr	r3, [r7, #68]
 4576 074a 0133     		adds	r3, r3, #1
 4577 074c 7B64     		str	r3, [r7, #68]
1371:./Lib/Src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 4578              		.loc 1 1371 24 discriminator 2
 4579 074e 7B6C     		ldr	r3, [r7, #68]
 4580              		.loc 1 1371 44 discriminator 2
 4581 0750 B3F5803F 		cmp	r3, #65536
 4582 0754 03D0     		beq	.L260
 4583              		.loc 1 1371 44 is_stmt 0 discriminator 1
 4584 0756 D7F8F030 		ldr	r3, [r7, #240]
 4585 075a 002B     		cmp	r3, #0
 4586 075c EED1     		bne	.L261
 4587              	.L260:
1372:./Lib/Src/stm32f4xx_cryp_aes.c **** 
1373:./Lib/Src/stm32f4xx_cryp_aes.c ****       if (busystatus != RESET)
 4588              		.loc 1 1373 10 is_stmt 1
 4589 075e D7F8F030 		ldr	r3, [r7, #240]
 4590 0762 002B     		cmp	r3, #0
 4591 0764 02D0     		beq	.L254
1374:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1375:./Lib/Src/stm32f4xx_cryp_aes.c ****         status = ERROR;
 4592              		.loc 1 1375 16
 4593 0766 0023     		movs	r3, #0
 4594 0768 87F80F31 		strb	r3, [r7, #271]
 4595              	.L254:
1376:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1377:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1378:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1379:./Lib/Src/stm32f4xx_cryp_aes.c ****     /**************************** payload phase *******************************/
1380:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(ILength != 0)
 4596              		.loc 1 1380 7
 4597 076c D7F82831 		ldr	r3, [r7, #296]
 4598 0770 002B     		cmp	r3, #0
 4599 0772 00F0A380 		beq	.L262
1381:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1382:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Select payload phase */
1383:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Payload);
 4600              		.loc 1 1383 7
 4601 0776 4FF40030 		mov	r0, #131072
 4602 077a FFF7FEFF 		bl	CRYP_PhaseConfig
1384:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1385:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1386:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 4603              		.loc 1 1386 7
 4604 077e 0120     		movs	r0, #1
 4605 0780 FFF7FEFF 		bl	CRYP_Cmd
1387:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1388:./Lib/Src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 4606              		.loc 1 1388 10
 4607 0784 FFF7FEFF 		bl	CRYP_GetCmdStatus
 4608 0788 0346     		mov	r3, r0
 4609              		.loc 1 1388 9
 4610 078a 002B     		cmp	r3, #0
ARM GAS  /tmp/cc2lf3as.s 			page 122


 4611 078c 01D1     		bne	.L263
1389:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1390:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embed 
1391:./Lib/Src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
1392:./Lib/Src/stm32f4xx_cryp_aes.c ****         return(ERROR);
 4612              		.loc 1 1392 15
 4613 078e 0023     		movs	r3, #0
 4614 0790 BFE2     		b	.L297
 4615              	.L263:
1393:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1394:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1395:./Lib/Src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; ((loopcounter < ILength) && (status != ERROR)); loopcounter+=16)
 4616              		.loc 1 1395 23
 4617 0792 0023     		movs	r3, #0
 4618 0794 C7F8F830 		str	r3, [r7, #248]
 4619              		.loc 1 1395 7
 4620 0798 85E0     		b	.L264
 4621              	.L271:
1396:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1397:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1398:./Lib/Src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 4622              		.loc 1 1398 14
 4623 079a 00BF     		nop
 4624              	.L265:
 4625              		.loc 1 1398 15 discriminator 1
 4626 079c 0120     		movs	r0, #1
 4627 079e FFF7FEFF 		bl	CRYP_GetFlagStatus
 4628 07a2 0346     		mov	r3, r0
 4629              		.loc 1 1398 50 discriminator 1
 4630 07a4 002B     		cmp	r3, #0
 4631 07a6 F9D0     		beq	.L265
1399:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1400:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
1401:./Lib/Src/stm32f4xx_cryp_aes.c ****         
1402:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1403:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 4632              		.loc 1 1403 22
 4633 07a8 D7F80831 		ldr	r3, [r7, #264]
 4634              		.loc 1 1403 9
 4635 07ac 1B68     		ldr	r3, [r3]
 4636 07ae 1846     		mov	r0, r3
 4637 07b0 FFF7FEFF 		bl	CRYP_DataIn
1404:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 4638              		.loc 1 1404 18
 4639 07b4 D7F80831 		ldr	r3, [r7, #264]
 4640 07b8 0433     		adds	r3, r3, #4
 4641 07ba C7F80831 		str	r3, [r7, #264]
1405:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 4642              		.loc 1 1405 22
 4643 07be D7F80831 		ldr	r3, [r7, #264]
 4644              		.loc 1 1405 9
 4645 07c2 1B68     		ldr	r3, [r3]
 4646 07c4 1846     		mov	r0, r3
 4647 07c6 FFF7FEFF 		bl	CRYP_DataIn
1406:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 4648              		.loc 1 1406 18
 4649 07ca D7F80831 		ldr	r3, [r7, #264]
ARM GAS  /tmp/cc2lf3as.s 			page 123


 4650 07ce 0433     		adds	r3, r3, #4
 4651 07d0 C7F80831 		str	r3, [r7, #264]
1407:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 4652              		.loc 1 1407 22
 4653 07d4 D7F80831 		ldr	r3, [r7, #264]
 4654              		.loc 1 1407 9
 4655 07d8 1B68     		ldr	r3, [r3]
 4656 07da 1846     		mov	r0, r3
 4657 07dc FFF7FEFF 		bl	CRYP_DataIn
1408:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 4658              		.loc 1 1408 18
 4659 07e0 D7F80831 		ldr	r3, [r7, #264]
 4660 07e4 0433     		adds	r3, r3, #4
 4661 07e6 C7F80831 		str	r3, [r7, #264]
1409:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 4662              		.loc 1 1409 22
 4663 07ea D7F80831 		ldr	r3, [r7, #264]
 4664              		.loc 1 1409 9
 4665 07ee 1B68     		ldr	r3, [r3]
 4666 07f0 1846     		mov	r0, r3
 4667 07f2 FFF7FEFF 		bl	CRYP_DataIn
1410:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 4668              		.loc 1 1410 18
 4669 07f6 D7F80831 		ldr	r3, [r7, #264]
 4670 07fa 0433     		adds	r3, r3, #4
 4671 07fc C7F80831 		str	r3, [r7, #264]
1411:./Lib/Src/stm32f4xx_cryp_aes.c ****         
1412:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Wait until the complete message has been processed */
1413:./Lib/Src/stm32f4xx_cryp_aes.c ****         counter = 0;
 4672              		.loc 1 1413 17
 4673 0800 0023     		movs	r3, #0
 4674 0802 7B64     		str	r3, [r7, #68]
 4675              	.L267:
1414:./Lib/Src/stm32f4xx_cryp_aes.c ****         do
1415:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1416:./Lib/Src/stm32f4xx_cryp_aes.c ****           busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 4676              		.loc 1 1416 24 discriminator 2
 4677 0804 1020     		movs	r0, #16
 4678 0806 FFF7FEFF 		bl	CRYP_GetFlagStatus
 4679 080a 0346     		mov	r3, r0
 4680              		.loc 1 1416 22 discriminator 2
 4681 080c C7F8F030 		str	r3, [r7, #240]
1417:./Lib/Src/stm32f4xx_cryp_aes.c ****           counter++;
 4682              		.loc 1 1417 18 discriminator 2
 4683 0810 7B6C     		ldr	r3, [r7, #68]
 4684 0812 0133     		adds	r3, r3, #1
 4685 0814 7B64     		str	r3, [r7, #68]
1418:./Lib/Src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 4686              		.loc 1 1418 26 discriminator 2
 4687 0816 7B6C     		ldr	r3, [r7, #68]
 4688              		.loc 1 1418 46 discriminator 2
 4689 0818 B3F5803F 		cmp	r3, #65536
 4690 081c 03D0     		beq	.L266
 4691              		.loc 1 1418 46 is_stmt 0 discriminator 1
 4692 081e D7F8F030 		ldr	r3, [r7, #240]
 4693 0822 002B     		cmp	r3, #0
 4694 0824 EED1     		bne	.L267
ARM GAS  /tmp/cc2lf3as.s 			page 124


 4695              	.L266:
1419:./Lib/Src/stm32f4xx_cryp_aes.c **** 
1420:./Lib/Src/stm32f4xx_cryp_aes.c ****         if (busystatus != RESET)
 4696              		.loc 1 1420 12 is_stmt 1
 4697 0826 D7F8F030 		ldr	r3, [r7, #240]
 4698 082a 002B     		cmp	r3, #0
 4699 082c 03D0     		beq	.L299
1421:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1422:./Lib/Src/stm32f4xx_cryp_aes.c ****           status = ERROR;
 4700              		.loc 1 1422 18
 4701 082e 0023     		movs	r3, #0
 4702 0830 87F80F31 		strb	r3, [r7, #271]
 4703 0834 32E0     		b	.L269
 4704              	.L299:
1423:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
1424:./Lib/Src/stm32f4xx_cryp_aes.c ****         else
1425:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1426:./Lib/Src/stm32f4xx_cryp_aes.c ****           /* Wait until the OFNE flag is reset */
1427:./Lib/Src/stm32f4xx_cryp_aes.c ****           while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 4705              		.loc 1 1427 16
 4706 0836 00BF     		nop
 4707              	.L270:
 4708              		.loc 1 1427 17 discriminator 1
 4709 0838 0420     		movs	r0, #4
 4710 083a FFF7FEFF 		bl	CRYP_GetFlagStatus
 4711 083e 0346     		mov	r3, r0
 4712              		.loc 1 1427 52 discriminator 1
 4713 0840 002B     		cmp	r3, #0
 4714 0842 F9D0     		beq	.L270
1428:./Lib/Src/stm32f4xx_cryp_aes.c ****           {
1429:./Lib/Src/stm32f4xx_cryp_aes.c ****           }
1430:./Lib/Src/stm32f4xx_cryp_aes.c ****           
1431:./Lib/Src/stm32f4xx_cryp_aes.c ****           /* Read the Output block from the Output FIFO */
1432:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 4715              		.loc 1 1432 12
 4716 0844 D7F80441 		ldr	r4, [r7, #260]
 4717              		.loc 1 1432 38
 4718 0848 FFF7FEFF 		bl	CRYP_DataOut
 4719 084c 0346     		mov	r3, r0
 4720              		.loc 1 1432 36
 4721 084e 2360     		str	r3, [r4]
1433:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 4722              		.loc 1 1433 21
 4723 0850 D7F80431 		ldr	r3, [r7, #260]
 4724 0854 0433     		adds	r3, r3, #4
 4725 0856 C7F80431 		str	r3, [r7, #260]
1434:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 4726              		.loc 1 1434 12
 4727 085a D7F80441 		ldr	r4, [r7, #260]
 4728              		.loc 1 1434 38
 4729 085e FFF7FEFF 		bl	CRYP_DataOut
 4730 0862 0346     		mov	r3, r0
 4731              		.loc 1 1434 36
 4732 0864 2360     		str	r3, [r4]
1435:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 4733              		.loc 1 1435 21
 4734 0866 D7F80431 		ldr	r3, [r7, #260]
ARM GAS  /tmp/cc2lf3as.s 			page 125


 4735 086a 0433     		adds	r3, r3, #4
 4736 086c C7F80431 		str	r3, [r7, #260]
1436:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 4737              		.loc 1 1436 12
 4738 0870 D7F80441 		ldr	r4, [r7, #260]
 4739              		.loc 1 1436 38
 4740 0874 FFF7FEFF 		bl	CRYP_DataOut
 4741 0878 0346     		mov	r3, r0
 4742              		.loc 1 1436 36
 4743 087a 2360     		str	r3, [r4]
1437:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 4744              		.loc 1 1437 21
 4745 087c D7F80431 		ldr	r3, [r7, #260]
 4746 0880 0433     		adds	r3, r3, #4
 4747 0882 C7F80431 		str	r3, [r7, #260]
1438:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 4748              		.loc 1 1438 12
 4749 0886 D7F80441 		ldr	r4, [r7, #260]
 4750              		.loc 1 1438 38
 4751 088a FFF7FEFF 		bl	CRYP_DataOut
 4752 088e 0346     		mov	r3, r0
 4753              		.loc 1 1438 36
 4754 0890 2360     		str	r3, [r4]
1439:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 4755              		.loc 1 1439 21
 4756 0892 D7F80431 		ldr	r3, [r7, #260]
 4757 0896 0433     		adds	r3, r3, #4
 4758 0898 C7F80431 		str	r3, [r7, #260]
 4759              	.L269:
1395:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 4760              		.loc 1 1395 87 discriminator 2
 4761 089c D7F8F830 		ldr	r3, [r7, #248]
 4762 08a0 1033     		adds	r3, r3, #16
 4763 08a2 C7F8F830 		str	r3, [r7, #248]
 4764              	.L264:
1395:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 4765              		.loc 1 1395 53 discriminator 1
 4766 08a6 D7F8F820 		ldr	r2, [r7, #248]
 4767 08aa D7F82831 		ldr	r3, [r7, #296]
 4768 08ae 9A42     		cmp	r2, r3
 4769 08b0 04D2     		bcs	.L262
1395:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 4770              		.loc 1 1395 53 is_stmt 0 discriminator 3
 4771 08b2 97F80F31 		ldrb	r3, [r7, #271]	@ zero_extendqisi2
 4772 08b6 002B     		cmp	r3, #0
 4773 08b8 7FF46FAF 		bne	.L271
 4774              	.L262:
1440:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
1441:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1442:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1443:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1444:./Lib/Src/stm32f4xx_cryp_aes.c ****     /***************************** final phase ********************************/
1445:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Select final phase */
1446:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Final);
 4775              		.loc 1 1446 5 is_stmt 1
 4776 08bc 4FF44030 		mov	r0, #196608
 4777 08c0 FFF7FEFF 		bl	CRYP_PhaseConfig
ARM GAS  /tmp/cc2lf3as.s 			page 126


1447:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1448:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1449:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 4778              		.loc 1 1449 5
 4779 08c4 0120     		movs	r0, #1
 4780 08c6 FFF7FEFF 		bl	CRYP_Cmd
1450:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1451:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(CRYP_GetCmdStatus() == DISABLE)
 4781              		.loc 1 1451 8
 4782 08ca FFF7FEFF 		bl	CRYP_GetCmdStatus
 4783 08ce 0346     		mov	r3, r0
 4784              		.loc 1 1451 7
 4785 08d0 002B     		cmp	r3, #0
 4786 08d2 01D1     		bne	.L272
1452:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1453:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* The CRYP peripheral clock is not enabled or the device doesn't embed 
1454:./Lib/Src/stm32f4xx_cryp_aes.c ****          the CRYP peripheral (please check the device sales type. */
1455:./Lib/Src/stm32f4xx_cryp_aes.c ****       return(ERROR);
 4787              		.loc 1 1455 13
 4788 08d4 0023     		movs	r3, #0
 4789 08d6 1CE2     		b	.L297
 4790              	.L272:
1456:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1457:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1458:./Lib/Src/stm32f4xx_cryp_aes.c ****     ctraddr = (uint32_t)ctr;
 4791              		.loc 1 1458 13
 4792 08d8 07F12403 		add	r3, r7, #36
 4793 08dc C7F8E430 		str	r3, [r7, #228]
1459:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Write the counter block in the IN FIFO */
1460:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
 4794              		.loc 1 1460 18
 4795 08e0 D7F8E430 		ldr	r3, [r7, #228]
 4796              		.loc 1 1460 5
 4797 08e4 1B68     		ldr	r3, [r3]
 4798 08e6 1846     		mov	r0, r3
 4799 08e8 FFF7FEFF 		bl	CRYP_DataIn
1461:./Lib/Src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 4800              		.loc 1 1461 12
 4801 08ec D7F8E430 		ldr	r3, [r7, #228]
 4802 08f0 0433     		adds	r3, r3, #4
 4803 08f2 C7F8E430 		str	r3, [r7, #228]
1462:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
 4804              		.loc 1 1462 18
 4805 08f6 D7F8E430 		ldr	r3, [r7, #228]
 4806              		.loc 1 1462 5
 4807 08fa 1B68     		ldr	r3, [r3]
 4808 08fc 1846     		mov	r0, r3
 4809 08fe FFF7FEFF 		bl	CRYP_DataIn
1463:./Lib/Src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 4810              		.loc 1 1463 12
 4811 0902 D7F8E430 		ldr	r3, [r7, #228]
 4812 0906 0433     		adds	r3, r3, #4
 4813 0908 C7F8E430 		str	r3, [r7, #228]
1464:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
 4814              		.loc 1 1464 18
 4815 090c D7F8E430 		ldr	r3, [r7, #228]
 4816              		.loc 1 1464 5
ARM GAS  /tmp/cc2lf3as.s 			page 127


 4817 0910 1B68     		ldr	r3, [r3]
 4818 0912 1846     		mov	r0, r3
 4819 0914 FFF7FEFF 		bl	CRYP_DataIn
1465:./Lib/Src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 4820              		.loc 1 1465 12
 4821 0918 D7F8E430 		ldr	r3, [r7, #228]
 4822 091c 0433     		adds	r3, r3, #4
 4823 091e C7F8E430 		str	r3, [r7, #228]
1466:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Reset bit 0 (after 8-bit swap) is equivalent to reset bit 24 (before 8-bit swap) */
1467:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr) & 0xfeffffff);
 4824              		.loc 1 1467 18
 4825 0922 D7F8E430 		ldr	r3, [r7, #228]
 4826              		.loc 1 1467 17
 4827 0926 1B68     		ldr	r3, [r3]
 4828              		.loc 1 1467 5
 4829 0928 23F08073 		bic	r3, r3, #16777216
 4830 092c 1846     		mov	r0, r3
 4831 092e FFF7FEFF 		bl	CRYP_DataIn
1468:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1469:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
1470:./Lib/Src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 4832              		.loc 1 1470 10
 4833 0932 00BF     		nop
 4834              	.L273:
 4835              		.loc 1 1470 11 discriminator 1
 4836 0934 0420     		movs	r0, #4
 4837 0936 FFF7FEFF 		bl	CRYP_GetFlagStatus
 4838 093a 0346     		mov	r3, r0
 4839              		.loc 1 1470 46 discriminator 1
 4840 093c 002B     		cmp	r3, #0
 4841 093e F9D0     		beq	.L273
1471:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1472:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1473:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1474:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Read the Auth TAG in the IN FIFO */
1475:./Lib/Src/stm32f4xx_cryp_aes.c ****     temptag[0] = CRYP_DataOut();
 4842              		.loc 1 1475 18
 4843 0940 FFF7FEFF 		bl	CRYP_DataOut
 4844 0944 0346     		mov	r3, r0
 4845              		.loc 1 1475 16
 4846 0946 7B61     		str	r3, [r7, #20]
1476:./Lib/Src/stm32f4xx_cryp_aes.c ****     temptag[1] = CRYP_DataOut();
 4847              		.loc 1 1476 18
 4848 0948 FFF7FEFF 		bl	CRYP_DataOut
 4849 094c 0346     		mov	r3, r0
 4850              		.loc 1 1476 16
 4851 094e BB61     		str	r3, [r7, #24]
1477:./Lib/Src/stm32f4xx_cryp_aes.c ****     temptag[2] = CRYP_DataOut();
 4852              		.loc 1 1477 18
 4853 0950 FFF7FEFF 		bl	CRYP_DataOut
 4854 0954 0346     		mov	r3, r0
 4855              		.loc 1 1477 16
 4856 0956 FB61     		str	r3, [r7, #28]
1478:./Lib/Src/stm32f4xx_cryp_aes.c ****     temptag[3] = CRYP_DataOut();
 4857              		.loc 1 1478 18
 4858 0958 FFF7FEFF 		bl	CRYP_DataOut
 4859 095c 0346     		mov	r3, r0
ARM GAS  /tmp/cc2lf3as.s 			page 128


 4860              		.loc 1 1478 16
 4861 095e 3B62     		str	r3, [r7, #32]
 4862 0960 B7E1     		b	.L274
 4863              	.L252:
1479:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
1480:./Lib/Src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
1481:./Lib/Src/stm32f4xx_cryp_aes.c ****   else /* AES decryption */
1482:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
1483:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
1484:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 4864              		.loc 1 1484 5
 4865 0962 FFF7FEFF 		bl	CRYP_FIFOFlush
1485:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1486:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
1487:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 4866              		.loc 1 1487 5
 4867 0966 07F15803 		add	r3, r7, #88
 4868 096a 1846     		mov	r0, r3
 4869 096c FFF7FEFF 		bl	CRYP_KeyInit
1488:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1489:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* CRYP Initialization Vectors */
1490:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_IVInit(&AES_CRYP_IVInitStructure);
 4870              		.loc 1 1490 5
 4871 0970 07F14803 		add	r3, r7, #72
 4872 0974 1846     		mov	r0, r3
 4873 0976 FFF7FEFF 		bl	CRYP_IVInit
1491:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1492:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
1493:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 4874              		.loc 1 1493 41
 4875 097a 0423     		movs	r3, #4
 4876 097c BB67     		str	r3, [r7, #120]
1494:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CCM;
 4877              		.loc 1 1494 42
 4878 097e 4FF00813 		mov	r3, #524296
 4879 0982 FB67     		str	r3, [r7, #124]
1495:./Lib/Src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 4880              		.loc 1 1495 42
 4881 0984 8023     		movs	r3, #128
 4882 0986 C7F88030 		str	r3, [r7, #128]
1496:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 4883              		.loc 1 1496 5
 4884 098a 07F17803 		add	r3, r7, #120
 4885 098e 1846     		mov	r0, r3
 4886 0990 FFF7FEFF 		bl	CRYP_Init
1497:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1498:./Lib/Src/stm32f4xx_cryp_aes.c ****     /***************************** Init phase *********************************/
1499:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Select init phase */
1500:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Init);
 4887              		.loc 1 1500 5
 4888 0994 0020     		movs	r0, #0
 4889 0996 FFF7FEFF 		bl	CRYP_PhaseConfig
1501:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1502:./Lib/Src/stm32f4xx_cryp_aes.c ****     b0addr = (uint32_t)blockb0;
 4890              		.loc 1 1502 12
 4891 099a 07F13403 		add	r3, r7, #52
 4892 099e C7F8E030 		str	r3, [r7, #224]
ARM GAS  /tmp/cc2lf3as.s 			page 129


1503:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Write the blockb0 block in the IN FIFO */
1504:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 4893              		.loc 1 1504 19
 4894 09a2 D7F8E030 		ldr	r3, [r7, #224]
 4895              		.loc 1 1504 5
 4896 09a6 1B68     		ldr	r3, [r3]
 4897 09a8 1846     		mov	r0, r3
 4898 09aa FFF7FEFF 		bl	CRYP_DataIn
1505:./Lib/Src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
 4899              		.loc 1 1505 11
 4900 09ae D7F8E030 		ldr	r3, [r7, #224]
 4901 09b2 0433     		adds	r3, r3, #4
 4902 09b4 C7F8E030 		str	r3, [r7, #224]
1506:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 4903              		.loc 1 1506 19
 4904 09b8 D7F8E030 		ldr	r3, [r7, #224]
 4905              		.loc 1 1506 5
 4906 09bc 1B68     		ldr	r3, [r3]
 4907 09be 1846     		mov	r0, r3
 4908 09c0 FFF7FEFF 		bl	CRYP_DataIn
1507:./Lib/Src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
 4909              		.loc 1 1507 11
 4910 09c4 D7F8E030 		ldr	r3, [r7, #224]
 4911 09c8 0433     		adds	r3, r3, #4
 4912 09ca C7F8E030 		str	r3, [r7, #224]
1508:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 4913              		.loc 1 1508 19
 4914 09ce D7F8E030 		ldr	r3, [r7, #224]
 4915              		.loc 1 1508 5
 4916 09d2 1B68     		ldr	r3, [r3]
 4917 09d4 1846     		mov	r0, r3
 4918 09d6 FFF7FEFF 		bl	CRYP_DataIn
1509:./Lib/Src/stm32f4xx_cryp_aes.c ****     b0addr+=4;
 4919              		.loc 1 1509 11
 4920 09da D7F8E030 		ldr	r3, [r7, #224]
 4921 09de 0433     		adds	r3, r3, #4
 4922 09e0 C7F8E030 		str	r3, [r7, #224]
1510:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn((*(uint32_t*)(b0addr)));
 4923              		.loc 1 1510 19
 4924 09e4 D7F8E030 		ldr	r3, [r7, #224]
 4925              		.loc 1 1510 5
 4926 09e8 1B68     		ldr	r3, [r3]
 4927 09ea 1846     		mov	r0, r3
 4928 09ec FFF7FEFF 		bl	CRYP_DataIn
1511:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1512:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1513:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 4929              		.loc 1 1513 5
 4930 09f0 0120     		movs	r0, #1
 4931 09f2 FFF7FEFF 		bl	CRYP_Cmd
1514:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1515:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Wait for CRYPEN bit to be 0 */
1516:./Lib/Src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetCmdStatus() == ENABLE)
 4932              		.loc 1 1516 10
 4933 09f6 00BF     		nop
 4934              	.L275:
 4935              		.loc 1 1516 11 discriminator 1
ARM GAS  /tmp/cc2lf3as.s 			page 130


 4936 09f8 FFF7FEFF 		bl	CRYP_GetCmdStatus
 4937 09fc 0346     		mov	r3, r0
 4938              		.loc 1 1516 31 discriminator 1
 4939 09fe 012B     		cmp	r3, #1
 4940 0a00 FAD0     		beq	.L275
1517:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1518:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1519:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1520:./Lib/Src/stm32f4xx_cryp_aes.c ****     /***************************** header phase *******************************/
1521:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(headersize != 0)
 4941              		.loc 1 1521 7
 4942 0a02 D7F8FC30 		ldr	r3, [r7, #252]
 4943 0a06 002B     		cmp	r3, #0
 4944 0a08 69D0     		beq	.L276
1522:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1523:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Select header phase */
1524:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Header);
 4945              		.loc 1 1524 7
 4946 0a0a 4FF48030 		mov	r0, #65536
 4947 0a0e FFF7FEFF 		bl	CRYP_PhaseConfig
1525:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1526:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1527:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 4948              		.loc 1 1527 7
 4949 0a12 0120     		movs	r0, #1
 4950 0a14 FFF7FEFF 		bl	CRYP_Cmd
1528:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1529:./Lib/Src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 4951              		.loc 1 1529 10
 4952 0a18 FFF7FEFF 		bl	CRYP_GetCmdStatus
 4953 0a1c 0346     		mov	r3, r0
 4954              		.loc 1 1529 9
 4955 0a1e 002B     		cmp	r3, #0
 4956 0a20 01D1     		bne	.L277
1530:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1531:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embed 
1532:./Lib/Src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
1533:./Lib/Src/stm32f4xx_cryp_aes.c ****         return(ERROR);
 4957              		.loc 1 1533 15
 4958 0a22 0023     		movs	r3, #0
 4959 0a24 75E1     		b	.L297
 4960              	.L277:
1534:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1535:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1536:./Lib/Src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; (loopcounter < headersize); loopcounter+=16)
 4961              		.loc 1 1536 23
 4962 0a26 0023     		movs	r3, #0
 4963 0a28 C7F8F830 		str	r3, [r7, #248]
 4964              		.loc 1 1536 7
 4965 0a2c 37E0     		b	.L278
 4966              	.L280:
1537:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1538:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1539:./Lib/Src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 4967              		.loc 1 1539 14
 4968 0a2e 00BF     		nop
 4969              	.L279:
ARM GAS  /tmp/cc2lf3as.s 			page 131


 4970              		.loc 1 1539 15 discriminator 1
 4971 0a30 0120     		movs	r0, #1
 4972 0a32 FFF7FEFF 		bl	CRYP_GetFlagStatus
 4973 0a36 0346     		mov	r3, r0
 4974              		.loc 1 1539 50 discriminator 1
 4975 0a38 002B     		cmp	r3, #0
 4976 0a3a F9D0     		beq	.L279
1540:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1541:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
1542:./Lib/Src/stm32f4xx_cryp_aes.c ****         
1543:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1544:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 4977              		.loc 1 1544 22 discriminator 2
 4978 0a3c D7F80031 		ldr	r3, [r7, #256]
 4979              		.loc 1 1544 9 discriminator 2
 4980 0a40 1B68     		ldr	r3, [r3]
 4981 0a42 1846     		mov	r0, r3
 4982 0a44 FFF7FEFF 		bl	CRYP_DataIn
1545:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 4983              		.loc 1 1545 19 discriminator 2
 4984 0a48 D7F80031 		ldr	r3, [r7, #256]
 4985 0a4c 0433     		adds	r3, r3, #4
 4986 0a4e C7F80031 		str	r3, [r7, #256]
1546:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 4987              		.loc 1 1546 22 discriminator 2
 4988 0a52 D7F80031 		ldr	r3, [r7, #256]
 4989              		.loc 1 1546 9 discriminator 2
 4990 0a56 1B68     		ldr	r3, [r3]
 4991 0a58 1846     		mov	r0, r3
 4992 0a5a FFF7FEFF 		bl	CRYP_DataIn
1547:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 4993              		.loc 1 1547 19 discriminator 2
 4994 0a5e D7F80031 		ldr	r3, [r7, #256]
 4995 0a62 0433     		adds	r3, r3, #4
 4996 0a64 C7F80031 		str	r3, [r7, #256]
1548:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 4997              		.loc 1 1548 22 discriminator 2
 4998 0a68 D7F80031 		ldr	r3, [r7, #256]
 4999              		.loc 1 1548 9 discriminator 2
 5000 0a6c 1B68     		ldr	r3, [r3]
 5001 0a6e 1846     		mov	r0, r3
 5002 0a70 FFF7FEFF 		bl	CRYP_DataIn
1549:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 5003              		.loc 1 1549 19 discriminator 2
 5004 0a74 D7F80031 		ldr	r3, [r7, #256]
 5005 0a78 0433     		adds	r3, r3, #4
 5006 0a7a C7F80031 		str	r3, [r7, #256]
1550:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(headeraddr));
 5007              		.loc 1 1550 22 discriminator 2
 5008 0a7e D7F80031 		ldr	r3, [r7, #256]
 5009              		.loc 1 1550 9 discriminator 2
 5010 0a82 1B68     		ldr	r3, [r3]
 5011 0a84 1846     		mov	r0, r3
 5012 0a86 FFF7FEFF 		bl	CRYP_DataIn
1551:./Lib/Src/stm32f4xx_cryp_aes.c ****         headeraddr+=4;
 5013              		.loc 1 1551 19 discriminator 2
 5014 0a8a D7F80031 		ldr	r3, [r7, #256]
ARM GAS  /tmp/cc2lf3as.s 			page 132


 5015 0a8e 0433     		adds	r3, r3, #4
 5016 0a90 C7F80031 		str	r3, [r7, #256]
1536:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 5017              		.loc 1 1536 67 discriminator 2
 5018 0a94 D7F8F830 		ldr	r3, [r7, #248]
 5019 0a98 1033     		adds	r3, r3, #16
 5020 0a9a C7F8F830 		str	r3, [r7, #248]
 5021              	.L278:
1536:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 5022              		.loc 1 1536 41 discriminator 1
 5023 0a9e D7F8F820 		ldr	r2, [r7, #248]
 5024 0aa2 D7F8FC30 		ldr	r3, [r7, #252]
 5025 0aa6 9A42     		cmp	r2, r3
 5026 0aa8 C1D3     		bcc	.L280
1552:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1553:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1554:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Wait until the complete message has been processed */
1555:./Lib/Src/stm32f4xx_cryp_aes.c ****       counter = 0;
 5027              		.loc 1 1555 15
 5028 0aaa 0023     		movs	r3, #0
 5029 0aac 7B64     		str	r3, [r7, #68]
 5030              	.L282:
1556:./Lib/Src/stm32f4xx_cryp_aes.c ****       do
1557:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1558:./Lib/Src/stm32f4xx_cryp_aes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 5031              		.loc 1 1558 22 discriminator 2
 5032 0aae 1020     		movs	r0, #16
 5033 0ab0 FFF7FEFF 		bl	CRYP_GetFlagStatus
 5034 0ab4 0346     		mov	r3, r0
 5035              		.loc 1 1558 20 discriminator 2
 5036 0ab6 C7F8F030 		str	r3, [r7, #240]
1559:./Lib/Src/stm32f4xx_cryp_aes.c ****         counter++;
 5037              		.loc 1 1559 16 discriminator 2
 5038 0aba 7B6C     		ldr	r3, [r7, #68]
 5039 0abc 0133     		adds	r3, r3, #1
 5040 0abe 7B64     		str	r3, [r7, #68]
1560:./Lib/Src/stm32f4xx_cryp_aes.c ****       }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 5041              		.loc 1 1560 24 discriminator 2
 5042 0ac0 7B6C     		ldr	r3, [r7, #68]
 5043              		.loc 1 1560 44 discriminator 2
 5044 0ac2 B3F5803F 		cmp	r3, #65536
 5045 0ac6 03D0     		beq	.L281
 5046              		.loc 1 1560 44 is_stmt 0 discriminator 1
 5047 0ac8 D7F8F030 		ldr	r3, [r7, #240]
 5048 0acc 002B     		cmp	r3, #0
 5049 0ace EED1     		bne	.L282
 5050              	.L281:
1561:./Lib/Src/stm32f4xx_cryp_aes.c **** 
1562:./Lib/Src/stm32f4xx_cryp_aes.c ****       if (busystatus != RESET)
 5051              		.loc 1 1562 10 is_stmt 1
 5052 0ad0 D7F8F030 		ldr	r3, [r7, #240]
 5053 0ad4 002B     		cmp	r3, #0
 5054 0ad6 02D0     		beq	.L276
1563:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1564:./Lib/Src/stm32f4xx_cryp_aes.c ****         status = ERROR;
 5055              		.loc 1 1564 16
 5056 0ad8 0023     		movs	r3, #0
ARM GAS  /tmp/cc2lf3as.s 			page 133


 5057 0ada 87F80F31 		strb	r3, [r7, #271]
 5058              	.L276:
1565:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1566:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1567:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1568:./Lib/Src/stm32f4xx_cryp_aes.c ****     /**************************** payload phase *******************************/
1569:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(ILength != 0)
 5059              		.loc 1 1569 7
 5060 0ade D7F82831 		ldr	r3, [r7, #296]
 5061 0ae2 002B     		cmp	r3, #0
 5062 0ae4 00F0A380 		beq	.L283
1570:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1571:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Select payload phase */
1572:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_PhaseConfig(CRYP_Phase_Payload);
 5063              		.loc 1 1572 7
 5064 0ae8 4FF40030 		mov	r0, #131072
 5065 0aec FFF7FEFF 		bl	CRYP_PhaseConfig
1573:./Lib/Src/stm32f4xx_cryp_aes.c **** 
1574:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* Enable Crypto processor */
1575:./Lib/Src/stm32f4xx_cryp_aes.c ****       CRYP_Cmd(ENABLE);
 5066              		.loc 1 1575 7
 5067 0af0 0120     		movs	r0, #1
 5068 0af2 FFF7FEFF 		bl	CRYP_Cmd
1576:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1577:./Lib/Src/stm32f4xx_cryp_aes.c ****       if(CRYP_GetCmdStatus() == DISABLE)
 5069              		.loc 1 1577 10
 5070 0af6 FFF7FEFF 		bl	CRYP_GetCmdStatus
 5071 0afa 0346     		mov	r3, r0
 5072              		.loc 1 1577 9
 5073 0afc 002B     		cmp	r3, #0
 5074 0afe 01D1     		bne	.L284
1578:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1579:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* The CRYP peripheral clock is not enabled or the device doesn't embed 
1580:./Lib/Src/stm32f4xx_cryp_aes.c ****            the CRYP peripheral (please check the device sales type. */
1581:./Lib/Src/stm32f4xx_cryp_aes.c ****         return(ERROR);
 5075              		.loc 1 1581 15
 5076 0b00 0023     		movs	r3, #0
 5077 0b02 06E1     		b	.L297
 5078              	.L284:
1582:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1583:./Lib/Src/stm32f4xx_cryp_aes.c ****       
1584:./Lib/Src/stm32f4xx_cryp_aes.c ****       for(loopcounter = 0; ((loopcounter < ILength) && (status != ERROR)); loopcounter+=16)
 5079              		.loc 1 1584 23
 5080 0b04 0023     		movs	r3, #0
 5081 0b06 C7F8F830 		str	r3, [r7, #248]
 5082              		.loc 1 1584 7
 5083 0b0a 85E0     		b	.L285
 5084              	.L292:
1585:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
1586:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Wait until the IFEM flag is reset */
1587:./Lib/Src/stm32f4xx_cryp_aes.c ****         while(CRYP_GetFlagStatus(CRYP_FLAG_IFEM) == RESET)
 5085              		.loc 1 1587 14
 5086 0b0c 00BF     		nop
 5087              	.L286:
 5088              		.loc 1 1587 15 discriminator 1
 5089 0b0e 0120     		movs	r0, #1
 5090 0b10 FFF7FEFF 		bl	CRYP_GetFlagStatus
ARM GAS  /tmp/cc2lf3as.s 			page 134


 5091 0b14 0346     		mov	r3, r0
 5092              		.loc 1 1587 50 discriminator 1
 5093 0b16 002B     		cmp	r3, #0
 5094 0b18 F9D0     		beq	.L286
1588:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1589:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
1590:./Lib/Src/stm32f4xx_cryp_aes.c ****         
1591:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Write the Input block in the IN FIFO */
1592:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 5095              		.loc 1 1592 22
 5096 0b1a D7F80831 		ldr	r3, [r7, #264]
 5097              		.loc 1 1592 9
 5098 0b1e 1B68     		ldr	r3, [r3]
 5099 0b20 1846     		mov	r0, r3
 5100 0b22 FFF7FEFF 		bl	CRYP_DataIn
1593:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 5101              		.loc 1 1593 18
 5102 0b26 D7F80831 		ldr	r3, [r7, #264]
 5103 0b2a 0433     		adds	r3, r3, #4
 5104 0b2c C7F80831 		str	r3, [r7, #264]
1594:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 5105              		.loc 1 1594 22
 5106 0b30 D7F80831 		ldr	r3, [r7, #264]
 5107              		.loc 1 1594 9
 5108 0b34 1B68     		ldr	r3, [r3]
 5109 0b36 1846     		mov	r0, r3
 5110 0b38 FFF7FEFF 		bl	CRYP_DataIn
1595:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 5111              		.loc 1 1595 18
 5112 0b3c D7F80831 		ldr	r3, [r7, #264]
 5113 0b40 0433     		adds	r3, r3, #4
 5114 0b42 C7F80831 		str	r3, [r7, #264]
1596:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 5115              		.loc 1 1596 22
 5116 0b46 D7F80831 		ldr	r3, [r7, #264]
 5117              		.loc 1 1596 9
 5118 0b4a 1B68     		ldr	r3, [r3]
 5119 0b4c 1846     		mov	r0, r3
 5120 0b4e FFF7FEFF 		bl	CRYP_DataIn
1597:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 5121              		.loc 1 1597 18
 5122 0b52 D7F80831 		ldr	r3, [r7, #264]
 5123 0b56 0433     		adds	r3, r3, #4
 5124 0b58 C7F80831 		str	r3, [r7, #264]
1598:./Lib/Src/stm32f4xx_cryp_aes.c ****         CRYP_DataIn(*(uint32_t*)(inputaddr));
 5125              		.loc 1 1598 22
 5126 0b5c D7F80831 		ldr	r3, [r7, #264]
 5127              		.loc 1 1598 9
 5128 0b60 1B68     		ldr	r3, [r3]
 5129 0b62 1846     		mov	r0, r3
 5130 0b64 FFF7FEFF 		bl	CRYP_DataIn
1599:./Lib/Src/stm32f4xx_cryp_aes.c ****         inputaddr+=4;
 5131              		.loc 1 1599 18
 5132 0b68 D7F80831 		ldr	r3, [r7, #264]
 5133 0b6c 0433     		adds	r3, r3, #4
 5134 0b6e C7F80831 		str	r3, [r7, #264]
1600:./Lib/Src/stm32f4xx_cryp_aes.c ****         
ARM GAS  /tmp/cc2lf3as.s 			page 135


1601:./Lib/Src/stm32f4xx_cryp_aes.c ****         /* Wait until the complete message has been processed */
1602:./Lib/Src/stm32f4xx_cryp_aes.c ****         counter = 0;
 5135              		.loc 1 1602 17
 5136 0b72 0023     		movs	r3, #0
 5137 0b74 7B64     		str	r3, [r7, #68]
 5138              	.L288:
1603:./Lib/Src/stm32f4xx_cryp_aes.c ****         do
1604:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1605:./Lib/Src/stm32f4xx_cryp_aes.c ****           busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 5139              		.loc 1 1605 24 discriminator 2
 5140 0b76 1020     		movs	r0, #16
 5141 0b78 FFF7FEFF 		bl	CRYP_GetFlagStatus
 5142 0b7c 0346     		mov	r3, r0
 5143              		.loc 1 1605 22 discriminator 2
 5144 0b7e C7F8F030 		str	r3, [r7, #240]
1606:./Lib/Src/stm32f4xx_cryp_aes.c ****           counter++;
 5145              		.loc 1 1606 18 discriminator 2
 5146 0b82 7B6C     		ldr	r3, [r7, #68]
 5147 0b84 0133     		adds	r3, r3, #1
 5148 0b86 7B64     		str	r3, [r7, #68]
1607:./Lib/Src/stm32f4xx_cryp_aes.c ****         }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 5149              		.loc 1 1607 26 discriminator 2
 5150 0b88 7B6C     		ldr	r3, [r7, #68]
 5151              		.loc 1 1607 46 discriminator 2
 5152 0b8a B3F5803F 		cmp	r3, #65536
 5153 0b8e 03D0     		beq	.L287
 5154              		.loc 1 1607 46 is_stmt 0 discriminator 1
 5155 0b90 D7F8F030 		ldr	r3, [r7, #240]
 5156 0b94 002B     		cmp	r3, #0
 5157 0b96 EED1     		bne	.L288
 5158              	.L287:
1608:./Lib/Src/stm32f4xx_cryp_aes.c **** 
1609:./Lib/Src/stm32f4xx_cryp_aes.c ****         if (busystatus != RESET)
 5159              		.loc 1 1609 12 is_stmt 1
 5160 0b98 D7F8F030 		ldr	r3, [r7, #240]
 5161 0b9c 002B     		cmp	r3, #0
 5162 0b9e 03D0     		beq	.L300
1610:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1611:./Lib/Src/stm32f4xx_cryp_aes.c ****           status = ERROR;
 5163              		.loc 1 1611 18
 5164 0ba0 0023     		movs	r3, #0
 5165 0ba2 87F80F31 		strb	r3, [r7, #271]
 5166 0ba6 32E0     		b	.L290
 5167              	.L300:
1612:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
1613:./Lib/Src/stm32f4xx_cryp_aes.c ****         else
1614:./Lib/Src/stm32f4xx_cryp_aes.c ****         {
1615:./Lib/Src/stm32f4xx_cryp_aes.c ****           /* Wait until the OFNE flag is reset */
1616:./Lib/Src/stm32f4xx_cryp_aes.c ****           while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 5168              		.loc 1 1616 16
 5169 0ba8 00BF     		nop
 5170              	.L291:
 5171              		.loc 1 1616 17 discriminator 1
 5172 0baa 0420     		movs	r0, #4
 5173 0bac FFF7FEFF 		bl	CRYP_GetFlagStatus
 5174 0bb0 0346     		mov	r3, r0
 5175              		.loc 1 1616 52 discriminator 1
ARM GAS  /tmp/cc2lf3as.s 			page 136


 5176 0bb2 002B     		cmp	r3, #0
 5177 0bb4 F9D0     		beq	.L291
1617:./Lib/Src/stm32f4xx_cryp_aes.c ****           {
1618:./Lib/Src/stm32f4xx_cryp_aes.c ****           }
1619:./Lib/Src/stm32f4xx_cryp_aes.c ****           
1620:./Lib/Src/stm32f4xx_cryp_aes.c ****           /* Read the Output block from the Output FIFO */
1621:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 5178              		.loc 1 1621 12
 5179 0bb6 D7F80441 		ldr	r4, [r7, #260]
 5180              		.loc 1 1621 38
 5181 0bba FFF7FEFF 		bl	CRYP_DataOut
 5182 0bbe 0346     		mov	r3, r0
 5183              		.loc 1 1621 36
 5184 0bc0 2360     		str	r3, [r4]
1622:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 5185              		.loc 1 1622 21
 5186 0bc2 D7F80431 		ldr	r3, [r7, #260]
 5187 0bc6 0433     		adds	r3, r3, #4
 5188 0bc8 C7F80431 		str	r3, [r7, #260]
1623:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 5189              		.loc 1 1623 12
 5190 0bcc D7F80441 		ldr	r4, [r7, #260]
 5191              		.loc 1 1623 38
 5192 0bd0 FFF7FEFF 		bl	CRYP_DataOut
 5193 0bd4 0346     		mov	r3, r0
 5194              		.loc 1 1623 36
 5195 0bd6 2360     		str	r3, [r4]
1624:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 5196              		.loc 1 1624 21
 5197 0bd8 D7F80431 		ldr	r3, [r7, #260]
 5198 0bdc 0433     		adds	r3, r3, #4
 5199 0bde C7F80431 		str	r3, [r7, #260]
1625:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 5200              		.loc 1 1625 12
 5201 0be2 D7F80441 		ldr	r4, [r7, #260]
 5202              		.loc 1 1625 38
 5203 0be6 FFF7FEFF 		bl	CRYP_DataOut
 5204 0bea 0346     		mov	r3, r0
 5205              		.loc 1 1625 36
 5206 0bec 2360     		str	r3, [r4]
1626:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 5207              		.loc 1 1626 21
 5208 0bee D7F80431 		ldr	r3, [r7, #260]
 5209 0bf2 0433     		adds	r3, r3, #4
 5210 0bf4 C7F80431 		str	r3, [r7, #260]
1627:./Lib/Src/stm32f4xx_cryp_aes.c ****           *(uint32_t*)(outputaddr) = CRYP_DataOut();
 5211              		.loc 1 1627 12
 5212 0bf8 D7F80441 		ldr	r4, [r7, #260]
 5213              		.loc 1 1627 38
 5214 0bfc FFF7FEFF 		bl	CRYP_DataOut
 5215 0c00 0346     		mov	r3, r0
 5216              		.loc 1 1627 36
 5217 0c02 2360     		str	r3, [r4]
1628:./Lib/Src/stm32f4xx_cryp_aes.c ****           outputaddr+=4;
 5218              		.loc 1 1628 21
 5219 0c04 D7F80431 		ldr	r3, [r7, #260]
 5220 0c08 0433     		adds	r3, r3, #4
ARM GAS  /tmp/cc2lf3as.s 			page 137


 5221 0c0a C7F80431 		str	r3, [r7, #260]
 5222              	.L290:
1584:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 5223              		.loc 1 1584 87 discriminator 2
 5224 0c0e D7F8F830 		ldr	r3, [r7, #248]
 5225 0c12 1033     		adds	r3, r3, #16
 5226 0c14 C7F8F830 		str	r3, [r7, #248]
 5227              	.L285:
1584:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 5228              		.loc 1 1584 53 discriminator 1
 5229 0c18 D7F8F820 		ldr	r2, [r7, #248]
 5230 0c1c D7F82831 		ldr	r3, [r7, #296]
 5231 0c20 9A42     		cmp	r2, r3
 5232 0c22 04D2     		bcs	.L283
1584:./Lib/Src/stm32f4xx_cryp_aes.c ****       {
 5233              		.loc 1 1584 53 is_stmt 0 discriminator 3
 5234 0c24 97F80F31 		ldrb	r3, [r7, #271]	@ zero_extendqisi2
 5235 0c28 002B     		cmp	r3, #0
 5236 0c2a 7FF46FAF 		bne	.L292
 5237              	.L283:
1629:./Lib/Src/stm32f4xx_cryp_aes.c ****         }
1630:./Lib/Src/stm32f4xx_cryp_aes.c ****       }
1631:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1632:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1633:./Lib/Src/stm32f4xx_cryp_aes.c ****     /***************************** final phase ********************************/
1634:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Select final phase */
1635:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_PhaseConfig(CRYP_Phase_Final);
 5238              		.loc 1 1635 5 is_stmt 1
 5239 0c2e 4FF44030 		mov	r0, #196608
 5240 0c32 FFF7FEFF 		bl	CRYP_PhaseConfig
1636:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1637:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
1638:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 5241              		.loc 1 1638 5
 5242 0c36 0120     		movs	r0, #1
 5243 0c38 FFF7FEFF 		bl	CRYP_Cmd
1639:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1640:./Lib/Src/stm32f4xx_cryp_aes.c ****     if(CRYP_GetCmdStatus() == DISABLE)
 5244              		.loc 1 1640 8
 5245 0c3c FFF7FEFF 		bl	CRYP_GetCmdStatus
 5246 0c40 0346     		mov	r3, r0
 5247              		.loc 1 1640 7
 5248 0c42 002B     		cmp	r3, #0
 5249 0c44 01D1     		bne	.L293
1641:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1642:./Lib/Src/stm32f4xx_cryp_aes.c ****       /* The CRYP peripheral clock is not enabled or the device doesn't embed 
1643:./Lib/Src/stm32f4xx_cryp_aes.c ****          the CRYP peripheral (please check the device sales type. */
1644:./Lib/Src/stm32f4xx_cryp_aes.c ****       return(ERROR);
 5250              		.loc 1 1644 13
 5251 0c46 0023     		movs	r3, #0
 5252 0c48 63E0     		b	.L297
 5253              	.L293:
1645:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1646:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1647:./Lib/Src/stm32f4xx_cryp_aes.c ****     ctraddr = (uint32_t)ctr;
 5254              		.loc 1 1647 13
 5255 0c4a 07F12403 		add	r3, r7, #36
ARM GAS  /tmp/cc2lf3as.s 			page 138


 5256 0c4e C7F8E430 		str	r3, [r7, #228]
1648:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Write the counter block in the IN FIFO */
1649:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
 5257              		.loc 1 1649 18
 5258 0c52 D7F8E430 		ldr	r3, [r7, #228]
 5259              		.loc 1 1649 5
 5260 0c56 1B68     		ldr	r3, [r3]
 5261 0c58 1846     		mov	r0, r3
 5262 0c5a FFF7FEFF 		bl	CRYP_DataIn
1650:./Lib/Src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 5263              		.loc 1 1650 12
 5264 0c5e D7F8E430 		ldr	r3, [r7, #228]
 5265 0c62 0433     		adds	r3, r3, #4
 5266 0c64 C7F8E430 		str	r3, [r7, #228]
1651:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
 5267              		.loc 1 1651 18
 5268 0c68 D7F8E430 		ldr	r3, [r7, #228]
 5269              		.loc 1 1651 5
 5270 0c6c 1B68     		ldr	r3, [r3]
 5271 0c6e 1846     		mov	r0, r3
 5272 0c70 FFF7FEFF 		bl	CRYP_DataIn
1652:./Lib/Src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 5273              		.loc 1 1652 12
 5274 0c74 D7F8E430 		ldr	r3, [r7, #228]
 5275 0c78 0433     		adds	r3, r3, #4
 5276 0c7a C7F8E430 		str	r3, [r7, #228]
1653:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr));
 5277              		.loc 1 1653 18
 5278 0c7e D7F8E430 		ldr	r3, [r7, #228]
 5279              		.loc 1 1653 5
 5280 0c82 1B68     		ldr	r3, [r3]
 5281 0c84 1846     		mov	r0, r3
 5282 0c86 FFF7FEFF 		bl	CRYP_DataIn
1654:./Lib/Src/stm32f4xx_cryp_aes.c ****     ctraddr+=4;
 5283              		.loc 1 1654 12
 5284 0c8a D7F8E430 		ldr	r3, [r7, #228]
 5285 0c8e 0433     		adds	r3, r3, #4
 5286 0c90 C7F8E430 		str	r3, [r7, #228]
1655:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Reset bit 0 (after 8-bit swap) is equivalent to reset bit 24 (before 8-bit swap) */
1656:./Lib/Src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(ctraddr) & 0xfeffffff);
 5287              		.loc 1 1656 18
 5288 0c94 D7F8E430 		ldr	r3, [r7, #228]
 5289              		.loc 1 1656 17
 5290 0c98 1B68     		ldr	r3, [r3]
 5291              		.loc 1 1656 5
 5292 0c9a 23F08073 		bic	r3, r3, #16777216
 5293 0c9e 1846     		mov	r0, r3
 5294 0ca0 FFF7FEFF 		bl	CRYP_DataIn
1657:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1658:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Wait until the OFNE flag is reset */
1659:./Lib/Src/stm32f4xx_cryp_aes.c ****     while(CRYP_GetFlagStatus(CRYP_FLAG_OFNE) == RESET)
 5295              		.loc 1 1659 10
 5296 0ca4 00BF     		nop
 5297              	.L294:
 5298              		.loc 1 1659 11 discriminator 1
 5299 0ca6 0420     		movs	r0, #4
 5300 0ca8 FFF7FEFF 		bl	CRYP_GetFlagStatus
ARM GAS  /tmp/cc2lf3as.s 			page 139


 5301 0cac 0346     		mov	r3, r0
 5302              		.loc 1 1659 46 discriminator 1
 5303 0cae 002B     		cmp	r3, #0
 5304 0cb0 F9D0     		beq	.L294
1660:./Lib/Src/stm32f4xx_cryp_aes.c ****     {
1661:./Lib/Src/stm32f4xx_cryp_aes.c ****     }
1662:./Lib/Src/stm32f4xx_cryp_aes.c ****     
1663:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Read the Authentification TAG (MAC) in the IN FIFO */
1664:./Lib/Src/stm32f4xx_cryp_aes.c ****     temptag[0] = CRYP_DataOut();
 5305              		.loc 1 1664 18
 5306 0cb2 FFF7FEFF 		bl	CRYP_DataOut
 5307 0cb6 0346     		mov	r3, r0
 5308              		.loc 1 1664 16
 5309 0cb8 7B61     		str	r3, [r7, #20]
1665:./Lib/Src/stm32f4xx_cryp_aes.c ****     temptag[1] = CRYP_DataOut();
 5310              		.loc 1 1665 18
 5311 0cba FFF7FEFF 		bl	CRYP_DataOut
 5312 0cbe 0346     		mov	r3, r0
 5313              		.loc 1 1665 16
 5314 0cc0 BB61     		str	r3, [r7, #24]
1666:./Lib/Src/stm32f4xx_cryp_aes.c ****     temptag[2] = CRYP_DataOut();
 5315              		.loc 1 1666 18
 5316 0cc2 FFF7FEFF 		bl	CRYP_DataOut
 5317 0cc6 0346     		mov	r3, r0
 5318              		.loc 1 1666 16
 5319 0cc8 FB61     		str	r3, [r7, #28]
1667:./Lib/Src/stm32f4xx_cryp_aes.c ****     temptag[3] = CRYP_DataOut();
 5320              		.loc 1 1667 18
 5321 0cca FFF7FEFF 		bl	CRYP_DataOut
 5322 0cce 0346     		mov	r3, r0
 5323              		.loc 1 1667 16
 5324 0cd0 3B62     		str	r3, [r7, #32]
 5325              	.L274:
1668:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
1669:./Lib/Src/stm32f4xx_cryp_aes.c ****   
1670:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Copy temporary authentication TAG in user TAG buffer */
1671:./Lib/Src/stm32f4xx_cryp_aes.c ****   for(loopcounter = 0; (loopcounter < TAGSize); loopcounter++)
 5326              		.loc 1 1671 19
 5327 0cd2 0023     		movs	r3, #0
 5328 0cd4 C7F8F830 		str	r3, [r7, #248]
 5329              		.loc 1 1671 3
 5330 0cd8 10E0     		b	.L295
 5331              	.L296:
1672:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
1673:./Lib/Src/stm32f4xx_cryp_aes.c ****     /* Set the authentication TAG buffer */
1674:./Lib/Src/stm32f4xx_cryp_aes.c ****     *((uint8_t*)tagaddr+loopcounter) = *((uint8_t*)temptag+loopcounter);
 5332              		.loc 1 1674 59 discriminator 3
 5333 0cda 07F11402 		add	r2, r7, #20
 5334 0cde D7F8F830 		ldr	r3, [r7, #248]
 5335 0ce2 1344     		add	r3, r3, r2
 5336              		.loc 1 1674 24 discriminator 3
 5337 0ce4 D7F8F810 		ldr	r1, [r7, #248]
 5338 0ce8 D7F8E820 		ldr	r2, [r7, #232]
 5339 0cec 0A44     		add	r2, r2, r1
 5340              		.loc 1 1674 40 discriminator 3
 5341 0cee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5342              		.loc 1 1674 38 discriminator 3
ARM GAS  /tmp/cc2lf3as.s 			page 140


 5343 0cf0 1370     		strb	r3, [r2]
1671:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 5344              		.loc 1 1671 60 discriminator 3
 5345 0cf2 D7F8F830 		ldr	r3, [r7, #248]
 5346 0cf6 0133     		adds	r3, r3, #1
 5347 0cf8 C7F8F830 		str	r3, [r7, #248]
 5348              	.L295:
1671:./Lib/Src/stm32f4xx_cryp_aes.c ****   {
 5349              		.loc 1 1671 37 discriminator 1
 5350 0cfc D7F8F820 		ldr	r2, [r7, #248]
 5351 0d00 D7F84031 		ldr	r3, [r7, #320]
 5352 0d04 9A42     		cmp	r2, r3
 5353 0d06 E8D3     		bcc	.L296
1675:./Lib/Src/stm32f4xx_cryp_aes.c ****   }
1676:./Lib/Src/stm32f4xx_cryp_aes.c ****   
1677:./Lib/Src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
1678:./Lib/Src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 5354              		.loc 1 1678 3
 5355 0d08 0020     		movs	r0, #0
 5356 0d0a FFF7FEFF 		bl	CRYP_Cmd
1679:./Lib/Src/stm32f4xx_cryp_aes.c **** 
1680:./Lib/Src/stm32f4xx_cryp_aes.c ****   return status;
 5357              		.loc 1 1680 10
 5358 0d0e 97F80F31 		ldrb	r3, [r7, #271]	@ zero_extendqisi2
 5359              	.L297:
1681:./Lib/Src/stm32f4xx_cryp_aes.c **** }
 5360              		.loc 1 1681 1 discriminator 1
 5361 0d12 1846     		mov	r0, r3
 5362 0d14 07F58A77 		add	r7, r7, #276
 5363              		.cfi_def_cfa_offset 12
 5364 0d18 BD46     		mov	sp, r7
 5365              		.cfi_def_cfa_register 13
 5366              		@ sp needed
 5367 0d1a 90BD     		pop	{r4, r7, pc}
 5368              		.cfi_endproc
 5369              	.LFE127:
 5371              		.text
 5372              	.Letext0:
 5373              		.file 3 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 5374              		.file 4 "./Start/stm32f4xx.h"
 5375              		.file 5 "./Lib/inc/stm32f4xx_cryp.h"
ARM GAS  /tmp/cc2lf3as.s 			page 141


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_cryp_aes.c
     /tmp/cc2lf3as.s:21     .text.CRYP_AES_ECB:0000000000000000 $t
     /tmp/cc2lf3as.s:27     .text.CRYP_AES_ECB:0000000000000000 CRYP_AES_ECB
     /tmp/cc2lf3as.s:671    .text.CRYP_AES_CBC:0000000000000000 $t
     /tmp/cc2lf3as.s:677    .text.CRYP_AES_CBC:0000000000000000 CRYP_AES_CBC
     /tmp/cc2lf3as.s:1396   .text.CRYP_AES_CTR:0000000000000000 $t
     /tmp/cc2lf3as.s:1402   .text.CRYP_AES_CTR:0000000000000000 CRYP_AES_CTR
     /tmp/cc2lf3as.s:2069   .text.CRYP_AES_GCM:0000000000000000 $t
     /tmp/cc2lf3as.s:2075   .text.CRYP_AES_GCM:0000000000000000 CRYP_AES_GCM
     /tmp/cc2lf3as.s:3543   .text.CRYP_AES_CCM:0000000000000000 $t
     /tmp/cc2lf3as.s:3549   .text.CRYP_AES_CCM:0000000000000000 CRYP_AES_CCM

UNDEFINED SYMBOLS
CRYP_KeyStructInit
CRYP_FIFOFlush
CRYP_Init
CRYP_KeyInit
CRYP_Cmd
CRYP_GetFlagStatus
CRYP_GetCmdStatus
CRYP_DataIn
CRYP_DataOut
CRYP_IVInit
CRYP_PhaseConfig
