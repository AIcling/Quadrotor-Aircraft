ARM GAS  /tmp/ccUbNYzC.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_gpio.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Lib/Src/stm32f4xx_gpio.c"
  20              		.section	.text.GPIO_DeInit,"ax",%progbits
  21              		.align	1
  22              		.global	GPIO_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	GPIO_DeInit:
  28              	.LFB123:
   1:./Lib/Src/stm32f4xx_gpio.c **** /**
   2:./Lib/Src/stm32f4xx_gpio.c ****   ******************************************************************************
   3:./Lib/Src/stm32f4xx_gpio.c ****   * @file    stm32f4xx_gpio.c
   4:./Lib/Src/stm32f4xx_gpio.c ****   * @author  MCD Application Team
   5:./Lib/Src/stm32f4xx_gpio.c ****   * @version V1.8.1
   6:./Lib/Src/stm32f4xx_gpio.c ****   * @date    27-January-2022
   7:./Lib/Src/stm32f4xx_gpio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Lib/Src/stm32f4xx_gpio.c ****   *          functionalities of the GPIO peripheral:           
   9:./Lib/Src/stm32f4xx_gpio.c ****   *           + Initialization and Configuration
  10:./Lib/Src/stm32f4xx_gpio.c ****   *           + GPIO Read and Write
  11:./Lib/Src/stm32f4xx_gpio.c ****   *           + GPIO Alternate functions configuration
  12:./Lib/Src/stm32f4xx_gpio.c ****   * 
  13:./Lib/Src/stm32f4xx_gpio.c **** @verbatim  
  14:./Lib/Src/stm32f4xx_gpio.c ****  ===============================================================================
  15:./Lib/Src/stm32f4xx_gpio.c ****                       ##### How to use this driver #####
  16:./Lib/Src/stm32f4xx_gpio.c ****  ===============================================================================       
  17:./Lib/Src/stm32f4xx_gpio.c ****  [..]             
  18:./Lib/Src/stm32f4xx_gpio.c ****    (#) Enable the GPIO AHB clock using the following function
  19:./Lib/Src/stm32f4xx_gpio.c ****        RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  20:./Lib/Src/stm32f4xx_gpio.c ****                
  21:./Lib/Src/stm32f4xx_gpio.c ****    (#) Configure the GPIO pin(s) using GPIO_Init()
  22:./Lib/Src/stm32f4xx_gpio.c ****        Four possible configuration are available for each pin:
  23:./Lib/Src/stm32f4xx_gpio.c ****        (++) Input: Floating, Pull-up, Pull-down.
  24:./Lib/Src/stm32f4xx_gpio.c ****        (++) Output: Push-Pull (Pull-up, Pull-down or no Pull)
  25:./Lib/Src/stm32f4xx_gpio.c ****             Open Drain (Pull-up, Pull-down or no Pull). In output mode, the speed 
  26:./Lib/Src/stm32f4xx_gpio.c ****             is configurable: 2 MHz, 25 MHz, 50 MHz or 100 MHz.
  27:./Lib/Src/stm32f4xx_gpio.c ****        (++) Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull) Open 
  28:./Lib/Src/stm32f4xx_gpio.c ****             Drain (Pull-up, Pull-down or no Pull).
  29:./Lib/Src/stm32f4xx_gpio.c ****        (++) Analog: required mode when a pin is to be used as ADC channel or DAC 
  30:./Lib/Src/stm32f4xx_gpio.c ****             output.
ARM GAS  /tmp/ccUbNYzC.s 			page 2


  31:./Lib/Src/stm32f4xx_gpio.c ****    
  32:./Lib/Src/stm32f4xx_gpio.c ****    (#) Peripherals alternate function:
  33:./Lib/Src/stm32f4xx_gpio.c ****        (++) For ADC and DAC, configure the desired pin in analog mode using 
  34:./Lib/Src/stm32f4xx_gpio.c ****             GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN;
  35:./Lib/Src/stm32f4xx_gpio.c ****             (+++) For other peripherals (TIM, USART...):
  36:./Lib/Src/stm32f4xx_gpio.c ****             (+++) Connect the pin to the desired peripherals' Alternate 
  37:./Lib/Src/stm32f4xx_gpio.c ****                      Function (AF) using GPIO_PinAFConfig() function
  38:./Lib/Src/stm32f4xx_gpio.c ****             (+++) Configure the desired pin in alternate function mode using
  39:./Lib/Src/stm32f4xx_gpio.c ****                      GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  40:./Lib/Src/stm32f4xx_gpio.c ****             (+++) Select the type, pull-up/pull-down and output speed via 
  41:./Lib/Src/stm32f4xx_gpio.c ****                      GPIO_PuPd, GPIO_OType and GPIO_Speed members
  42:./Lib/Src/stm32f4xx_gpio.c ****             (+++) Call GPIO_Init() function
  43:./Lib/Src/stm32f4xx_gpio.c ****           
  44:./Lib/Src/stm32f4xx_gpio.c ****    (#) To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
  45:./Lib/Src/stm32f4xx_gpio.c ****             
  46:./Lib/Src/stm32f4xx_gpio.c ****    (#) To set/reset the level of a pin configured in output mode use 
  47:./Lib/Src/stm32f4xx_gpio.c ****        GPIO_SetBits()/GPIO_ResetBits()
  48:./Lib/Src/stm32f4xx_gpio.c ****                  
  49:./Lib/Src/stm32f4xx_gpio.c ****    (#) During and just after reset, the alternate functions are not 
  50:./Lib/Src/stm32f4xx_gpio.c ****        active and the GPIO pins are configured in input floating mode (except JTAG
  51:./Lib/Src/stm32f4xx_gpio.c ****        pins).
  52:./Lib/Src/stm32f4xx_gpio.c ****   
  53:./Lib/Src/stm32f4xx_gpio.c ****    (#) The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as general purpose 
  54:./Lib/Src/stm32f4xx_gpio.c ****        (PC14 and PC15, respectively) when the LSE oscillator is off. The LSE has 
  55:./Lib/Src/stm32f4xx_gpio.c ****        priority over the GPIO function.
  56:./Lib/Src/stm32f4xx_gpio.c ****   
  57:./Lib/Src/stm32f4xx_gpio.c ****    (#) The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
  58:./Lib/Src/stm32f4xx_gpio.c ****        general purpose PH0 and PH1, respectively, when the HSE oscillator is off. 
  59:./Lib/Src/stm32f4xx_gpio.c ****        The HSE has priority over the GPIO function.
  60:./Lib/Src/stm32f4xx_gpio.c ****                
  61:./Lib/Src/stm32f4xx_gpio.c **** @endverbatim        
  62:./Lib/Src/stm32f4xx_gpio.c ****   *
  63:./Lib/Src/stm32f4xx_gpio.c ****   ******************************************************************************
  64:./Lib/Src/stm32f4xx_gpio.c ****   * @attention
  65:./Lib/Src/stm32f4xx_gpio.c ****   *
  66:./Lib/Src/stm32f4xx_gpio.c ****   * Copyright (c) 2016 STMicroelectronics.
  67:./Lib/Src/stm32f4xx_gpio.c ****   * All rights reserved.
  68:./Lib/Src/stm32f4xx_gpio.c ****   *
  69:./Lib/Src/stm32f4xx_gpio.c ****   * This software is licensed under terms that can be found in the LICENSE file
  70:./Lib/Src/stm32f4xx_gpio.c ****   * in the root directory of this software component.
  71:./Lib/Src/stm32f4xx_gpio.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  72:./Lib/Src/stm32f4xx_gpio.c ****   *
  73:./Lib/Src/stm32f4xx_gpio.c ****   ******************************************************************************
  74:./Lib/Src/stm32f4xx_gpio.c ****   */
  75:./Lib/Src/stm32f4xx_gpio.c **** 
  76:./Lib/Src/stm32f4xx_gpio.c **** /* Includes ------------------------------------------------------------------*/
  77:./Lib/Src/stm32f4xx_gpio.c **** #include "stm32f4xx_gpio.h"
  78:./Lib/Src/stm32f4xx_gpio.c **** #include "stm32f4xx_rcc.h"
  79:./Lib/Src/stm32f4xx_gpio.c **** 
  80:./Lib/Src/stm32f4xx_gpio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  81:./Lib/Src/stm32f4xx_gpio.c ****   * @{
  82:./Lib/Src/stm32f4xx_gpio.c ****   */
  83:./Lib/Src/stm32f4xx_gpio.c **** 
  84:./Lib/Src/stm32f4xx_gpio.c **** /** @defgroup GPIO 
  85:./Lib/Src/stm32f4xx_gpio.c ****   * @brief GPIO driver modules
  86:./Lib/Src/stm32f4xx_gpio.c ****   * @{
  87:./Lib/Src/stm32f4xx_gpio.c ****   */ 
ARM GAS  /tmp/ccUbNYzC.s 			page 3


  88:./Lib/Src/stm32f4xx_gpio.c **** 
  89:./Lib/Src/stm32f4xx_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  90:./Lib/Src/stm32f4xx_gpio.c **** /* Private define ------------------------------------------------------------*/
  91:./Lib/Src/stm32f4xx_gpio.c **** /* Private macro -------------------------------------------------------------*/
  92:./Lib/Src/stm32f4xx_gpio.c **** /* Private variables ---------------------------------------------------------*/
  93:./Lib/Src/stm32f4xx_gpio.c **** /* Private function prototypes -----------------------------------------------*/
  94:./Lib/Src/stm32f4xx_gpio.c **** /* Private functions ---------------------------------------------------------*/
  95:./Lib/Src/stm32f4xx_gpio.c **** 
  96:./Lib/Src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Private_Functions
  97:./Lib/Src/stm32f4xx_gpio.c ****   * @{
  98:./Lib/Src/stm32f4xx_gpio.c ****   */ 
  99:./Lib/Src/stm32f4xx_gpio.c **** 
 100:./Lib/Src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group1 Initialization and Configuration
 101:./Lib/Src/stm32f4xx_gpio.c ****  *  @brief   Initialization and Configuration
 102:./Lib/Src/stm32f4xx_gpio.c ****  *
 103:./Lib/Src/stm32f4xx_gpio.c **** @verbatim   
 104:./Lib/Src/stm32f4xx_gpio.c ****  ===============================================================================
 105:./Lib/Src/stm32f4xx_gpio.c ****                  ##### Initialization and Configuration #####
 106:./Lib/Src/stm32f4xx_gpio.c ****  ===============================================================================  
 107:./Lib/Src/stm32f4xx_gpio.c **** 
 108:./Lib/Src/stm32f4xx_gpio.c **** @endverbatim
 109:./Lib/Src/stm32f4xx_gpio.c ****   * @{
 110:./Lib/Src/stm32f4xx_gpio.c ****   */
 111:./Lib/Src/stm32f4xx_gpio.c **** 
 112:./Lib/Src/stm32f4xx_gpio.c **** /**
 113:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  De-initializes the GPIOx peripheral registers to their default reset values.
 114:./Lib/Src/stm32f4xx_gpio.c ****   * @note   By default, The GPIO pins are configured in input floating mode (except JTAG pins).
 115:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 116:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 117:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 118:./Lib/Src/stm32f4xx_gpio.c ****   * @retval None
 119:./Lib/Src/stm32f4xx_gpio.c ****   */
 120:./Lib/Src/stm32f4xx_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 121:./Lib/Src/stm32f4xx_gpio.c **** {
  29              		.loc 1 121 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
 122:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 123:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 124:./Lib/Src/stm32f4xx_gpio.c **** 
 125:./Lib/Src/stm32f4xx_gpio.c ****   if (GPIOx == GPIOA)
  42              		.loc 1 125 6
  43 0008 7B68     		ldr	r3, [r7, #4]
  44 000a 4B4A     		ldr	r2, .L14
  45 000c 9342     		cmp	r3, r2
  46 000e 08D1     		bne	.L2
 126:./Lib/Src/stm32f4xx_gpio.c ****   {
ARM GAS  /tmp/ccUbNYzC.s 			page 4


 127:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
  47              		.loc 1 127 5
  48 0010 0121     		movs	r1, #1
  49 0012 0120     		movs	r0, #1
  50 0014 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 128:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
  51              		.loc 1 128 5
  52 0018 0021     		movs	r1, #0
  53 001a 0120     		movs	r0, #1
  54 001c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 129:./Lib/Src/stm32f4xx_gpio.c ****   }
 130:./Lib/Src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOB)
 131:./Lib/Src/stm32f4xx_gpio.c ****   {
 132:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
 133:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
 134:./Lib/Src/stm32f4xx_gpio.c ****   }
 135:./Lib/Src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOC)
 136:./Lib/Src/stm32f4xx_gpio.c ****   {
 137:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 138:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
 139:./Lib/Src/stm32f4xx_gpio.c ****   }
 140:./Lib/Src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOD)
 141:./Lib/Src/stm32f4xx_gpio.c ****   {
 142:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
 143:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
 144:./Lib/Src/stm32f4xx_gpio.c ****   }
 145:./Lib/Src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOE)
 146:./Lib/Src/stm32f4xx_gpio.c ****   {
 147:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
 148:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 149:./Lib/Src/stm32f4xx_gpio.c ****   }
 150:./Lib/Src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOF)
 151:./Lib/Src/stm32f4xx_gpio.c ****   {
 152:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
 153:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 154:./Lib/Src/stm32f4xx_gpio.c ****   }
 155:./Lib/Src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOG)
 156:./Lib/Src/stm32f4xx_gpio.c ****   {
 157:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
 158:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 159:./Lib/Src/stm32f4xx_gpio.c ****   }
 160:./Lib/Src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOH)
 161:./Lib/Src/stm32f4xx_gpio.c ****   {
 162:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
 163:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 164:./Lib/Src/stm32f4xx_gpio.c ****   }
 165:./Lib/Src/stm32f4xx_gpio.c **** 
 166:./Lib/Src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOI)
 167:./Lib/Src/stm32f4xx_gpio.c ****   {
 168:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, ENABLE);
 169:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 170:./Lib/Src/stm32f4xx_gpio.c ****   }
 171:./Lib/Src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOJ)
 172:./Lib/Src/stm32f4xx_gpio.c ****   {
 173:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOJ, ENABLE);
 174:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOJ, DISABLE);
 175:./Lib/Src/stm32f4xx_gpio.c ****   }
ARM GAS  /tmp/ccUbNYzC.s 			page 5


 176:./Lib/Src/stm32f4xx_gpio.c ****   else
 177:./Lib/Src/stm32f4xx_gpio.c ****   {
 178:./Lib/Src/stm32f4xx_gpio.c ****     if (GPIOx == GPIOK)
 179:./Lib/Src/stm32f4xx_gpio.c ****     {
 180:./Lib/Src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOK, ENABLE);
 181:./Lib/Src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOK, DISABLE);
 182:./Lib/Src/stm32f4xx_gpio.c ****     }
 183:./Lib/Src/stm32f4xx_gpio.c ****   }
 184:./Lib/Src/stm32f4xx_gpio.c **** }
  55              		.loc 1 184 1
  56 0020 86E0     		b	.L13
  57              	.L2:
 130:./Lib/Src/stm32f4xx_gpio.c ****   {
  58              		.loc 1 130 11
  59 0022 7B68     		ldr	r3, [r7, #4]
  60 0024 454A     		ldr	r2, .L14+4
  61 0026 9342     		cmp	r3, r2
  62 0028 08D1     		bne	.L4
 132:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
  63              		.loc 1 132 5
  64 002a 0121     		movs	r1, #1
  65 002c 0220     		movs	r0, #2
  66 002e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 133:./Lib/Src/stm32f4xx_gpio.c ****   }
  67              		.loc 1 133 5
  68 0032 0021     		movs	r1, #0
  69 0034 0220     		movs	r0, #2
  70 0036 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  71              		.loc 1 184 1
  72 003a 79E0     		b	.L13
  73              	.L4:
 135:./Lib/Src/stm32f4xx_gpio.c ****   {
  74              		.loc 1 135 11
  75 003c 7B68     		ldr	r3, [r7, #4]
  76 003e 404A     		ldr	r2, .L14+8
  77 0040 9342     		cmp	r3, r2
  78 0042 08D1     		bne	.L5
 137:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
  79              		.loc 1 137 5
  80 0044 0121     		movs	r1, #1
  81 0046 0420     		movs	r0, #4
  82 0048 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 138:./Lib/Src/stm32f4xx_gpio.c ****   }
  83              		.loc 1 138 5
  84 004c 0021     		movs	r1, #0
  85 004e 0420     		movs	r0, #4
  86 0050 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  87              		.loc 1 184 1
  88 0054 6CE0     		b	.L13
  89              	.L5:
 140:./Lib/Src/stm32f4xx_gpio.c ****   {
  90              		.loc 1 140 11
  91 0056 7B68     		ldr	r3, [r7, #4]
  92 0058 3A4A     		ldr	r2, .L14+12
  93 005a 9342     		cmp	r3, r2
  94 005c 08D1     		bne	.L6
 142:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
ARM GAS  /tmp/ccUbNYzC.s 			page 6


  95              		.loc 1 142 5
  96 005e 0121     		movs	r1, #1
  97 0060 0820     		movs	r0, #8
  98 0062 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 143:./Lib/Src/stm32f4xx_gpio.c ****   }
  99              		.loc 1 143 5
 100 0066 0021     		movs	r1, #0
 101 0068 0820     		movs	r0, #8
 102 006a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 103              		.loc 1 184 1
 104 006e 5FE0     		b	.L13
 105              	.L6:
 145:./Lib/Src/stm32f4xx_gpio.c ****   {
 106              		.loc 1 145 11
 107 0070 7B68     		ldr	r3, [r7, #4]
 108 0072 354A     		ldr	r2, .L14+16
 109 0074 9342     		cmp	r3, r2
 110 0076 08D1     		bne	.L7
 147:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 111              		.loc 1 147 5
 112 0078 0121     		movs	r1, #1
 113 007a 1020     		movs	r0, #16
 114 007c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 148:./Lib/Src/stm32f4xx_gpio.c ****   }
 115              		.loc 1 148 5
 116 0080 0021     		movs	r1, #0
 117 0082 1020     		movs	r0, #16
 118 0084 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 119              		.loc 1 184 1
 120 0088 52E0     		b	.L13
 121              	.L7:
 150:./Lib/Src/stm32f4xx_gpio.c ****   {
 122              		.loc 1 150 11
 123 008a 7B68     		ldr	r3, [r7, #4]
 124 008c 2F4A     		ldr	r2, .L14+20
 125 008e 9342     		cmp	r3, r2
 126 0090 08D1     		bne	.L8
 152:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 127              		.loc 1 152 5
 128 0092 0121     		movs	r1, #1
 129 0094 2020     		movs	r0, #32
 130 0096 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 153:./Lib/Src/stm32f4xx_gpio.c ****   }
 131              		.loc 1 153 5
 132 009a 0021     		movs	r1, #0
 133 009c 2020     		movs	r0, #32
 134 009e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 135              		.loc 1 184 1
 136 00a2 45E0     		b	.L13
 137              	.L8:
 155:./Lib/Src/stm32f4xx_gpio.c ****   {
 138              		.loc 1 155 11
 139 00a4 7B68     		ldr	r3, [r7, #4]
 140 00a6 2A4A     		ldr	r2, .L14+24
 141 00a8 9342     		cmp	r3, r2
 142 00aa 08D1     		bne	.L9
 157:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
ARM GAS  /tmp/ccUbNYzC.s 			page 7


 143              		.loc 1 157 5
 144 00ac 0121     		movs	r1, #1
 145 00ae 4020     		movs	r0, #64
 146 00b0 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 158:./Lib/Src/stm32f4xx_gpio.c ****   }
 147              		.loc 1 158 5
 148 00b4 0021     		movs	r1, #0
 149 00b6 4020     		movs	r0, #64
 150 00b8 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 151              		.loc 1 184 1
 152 00bc 38E0     		b	.L13
 153              	.L9:
 160:./Lib/Src/stm32f4xx_gpio.c ****   {
 154              		.loc 1 160 11
 155 00be 7B68     		ldr	r3, [r7, #4]
 156 00c0 244A     		ldr	r2, .L14+28
 157 00c2 9342     		cmp	r3, r2
 158 00c4 08D1     		bne	.L10
 162:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 159              		.loc 1 162 5
 160 00c6 0121     		movs	r1, #1
 161 00c8 8020     		movs	r0, #128
 162 00ca FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 163:./Lib/Src/stm32f4xx_gpio.c ****   }
 163              		.loc 1 163 5
 164 00ce 0021     		movs	r1, #0
 165 00d0 8020     		movs	r0, #128
 166 00d2 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 167              		.loc 1 184 1
 168 00d6 2BE0     		b	.L13
 169              	.L10:
 166:./Lib/Src/stm32f4xx_gpio.c ****   {
 170              		.loc 1 166 11
 171 00d8 7B68     		ldr	r3, [r7, #4]
 172 00da 1F4A     		ldr	r2, .L14+32
 173 00dc 9342     		cmp	r3, r2
 174 00de 0AD1     		bne	.L11
 168:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 175              		.loc 1 168 5
 176 00e0 0121     		movs	r1, #1
 177 00e2 4FF48070 		mov	r0, #256
 178 00e6 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 169:./Lib/Src/stm32f4xx_gpio.c ****   }
 179              		.loc 1 169 5
 180 00ea 0021     		movs	r1, #0
 181 00ec 4FF48070 		mov	r0, #256
 182 00f0 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 183              		.loc 1 184 1
 184 00f4 1CE0     		b	.L13
 185              	.L11:
 171:./Lib/Src/stm32f4xx_gpio.c ****   {
 186              		.loc 1 171 11
 187 00f6 7B68     		ldr	r3, [r7, #4]
 188 00f8 184A     		ldr	r2, .L14+36
 189 00fa 9342     		cmp	r3, r2
 190 00fc 0AD1     		bne	.L12
 173:./Lib/Src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOJ, DISABLE);
ARM GAS  /tmp/ccUbNYzC.s 			page 8


 191              		.loc 1 173 5
 192 00fe 0121     		movs	r1, #1
 193 0100 4FF40070 		mov	r0, #512
 194 0104 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 174:./Lib/Src/stm32f4xx_gpio.c ****   }
 195              		.loc 1 174 5
 196 0108 0021     		movs	r1, #0
 197 010a 4FF40070 		mov	r0, #512
 198 010e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 199              		.loc 1 184 1
 200 0112 0DE0     		b	.L13
 201              	.L12:
 178:./Lib/Src/stm32f4xx_gpio.c ****     {
 202              		.loc 1 178 8
 203 0114 7B68     		ldr	r3, [r7, #4]
 204 0116 124A     		ldr	r2, .L14+40
 205 0118 9342     		cmp	r3, r2
 206 011a 09D1     		bne	.L13
 180:./Lib/Src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOK, DISABLE);
 207              		.loc 1 180 7
 208 011c 0121     		movs	r1, #1
 209 011e 4FF48060 		mov	r0, #1024
 210 0122 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 181:./Lib/Src/stm32f4xx_gpio.c ****     }
 211              		.loc 1 181 7
 212 0126 0021     		movs	r1, #0
 213 0128 4FF48060 		mov	r0, #1024
 214 012c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 215              	.L13:
 216              		.loc 1 184 1
 217 0130 00BF     		nop
 218 0132 0837     		adds	r7, r7, #8
 219              		.cfi_def_cfa_offset 8
 220 0134 BD46     		mov	sp, r7
 221              		.cfi_def_cfa_register 13
 222              		@ sp needed
 223 0136 80BD     		pop	{r7, pc}
 224              	.L15:
 225              		.align	2
 226              	.L14:
 227 0138 00000240 		.word	1073872896
 228 013c 00040240 		.word	1073873920
 229 0140 00080240 		.word	1073874944
 230 0144 000C0240 		.word	1073875968
 231 0148 00100240 		.word	1073876992
 232 014c 00140240 		.word	1073878016
 233 0150 00180240 		.word	1073879040
 234 0154 001C0240 		.word	1073880064
 235 0158 00200240 		.word	1073881088
 236 015c 00240240 		.word	1073882112
 237 0160 00280240 		.word	1073883136
 238              		.cfi_endproc
 239              	.LFE123:
 241              		.section	.text.GPIO_Init,"ax",%progbits
 242              		.align	1
 243              		.global	GPIO_Init
 244              		.syntax unified
ARM GAS  /tmp/ccUbNYzC.s 			page 9


 245              		.thumb
 246              		.thumb_func
 248              	GPIO_Init:
 249              	.LFB124:
 185:./Lib/Src/stm32f4xx_gpio.c **** 
 186:./Lib/Src/stm32f4xx_gpio.c **** /**
 187:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 188:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 189:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 190:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 191:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
 192:./Lib/Src/stm32f4xx_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 193:./Lib/Src/stm32f4xx_gpio.c ****   * @retval None
 194:./Lib/Src/stm32f4xx_gpio.c ****   */
 195:./Lib/Src/stm32f4xx_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 196:./Lib/Src/stm32f4xx_gpio.c **** {
 250              		.loc 1 196 1
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 24
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255 0000 80B4     		push	{r7}
 256              		.cfi_def_cfa_offset 4
 257              		.cfi_offset 7, -4
 258 0002 87B0     		sub	sp, sp, #28
 259              		.cfi_def_cfa_offset 32
 260 0004 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 262 0006 7860     		str	r0, [r7, #4]
 263 0008 3960     		str	r1, [r7]
 197:./Lib/Src/stm32f4xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 264              		.loc 1 197 12
 265 000a 0023     		movs	r3, #0
 266 000c 7B61     		str	r3, [r7, #20]
 267              		.loc 1 197 27
 268 000e 0023     		movs	r3, #0
 269 0010 3B61     		str	r3, [r7, #16]
 270              		.loc 1 197 40
 271 0012 0023     		movs	r3, #0
 272 0014 FB60     		str	r3, [r7, #12]
 198:./Lib/Src/stm32f4xx_gpio.c **** 
 199:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 200:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 201:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
 202:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 203:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
 204:./Lib/Src/stm32f4xx_gpio.c **** 
 205:./Lib/Src/stm32f4xx_gpio.c ****   /* ------------------------- Configure the port pins ---------------- */
 206:./Lib/Src/stm32f4xx_gpio.c ****   /*-- GPIO Mode Configuration --*/
 207:./Lib/Src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 273              		.loc 1 207 15
 274 0016 0023     		movs	r3, #0
 275 0018 7B61     		str	r3, [r7, #20]
 276              		.loc 1 207 3
 277 001a 76E0     		b	.L17
 278              	.L21:
 208:./Lib/Src/stm32f4xx_gpio.c ****   {
ARM GAS  /tmp/ccUbNYzC.s 			page 10


 209:./Lib/Src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 279              		.loc 1 209 9
 280 001c 0122     		movs	r2, #1
 281 001e 7B69     		ldr	r3, [r7, #20]
 282 0020 02FA03F3 		lsl	r3, r2, r3
 283 0024 3B61     		str	r3, [r7, #16]
 210:./Lib/Src/stm32f4xx_gpio.c ****     /* Get the port pins position */
 211:./Lib/Src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 284              		.loc 1 211 34
 285 0026 3B68     		ldr	r3, [r7]
 286 0028 1B68     		ldr	r3, [r3]
 287              		.loc 1 211 16
 288 002a 3A69     		ldr	r2, [r7, #16]
 289 002c 1340     		ands	r3, r3, r2
 290 002e FB60     		str	r3, [r7, #12]
 212:./Lib/Src/stm32f4xx_gpio.c **** 
 213:./Lib/Src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 291              		.loc 1 213 8
 292 0030 FA68     		ldr	r2, [r7, #12]
 293 0032 3B69     		ldr	r3, [r7, #16]
 294 0034 9A42     		cmp	r2, r3
 295 0036 65D1     		bne	.L18
 214:./Lib/Src/stm32f4xx_gpio.c ****     {
 215:./Lib/Src/stm32f4xx_gpio.c ****       GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 296              		.loc 1 215 12
 297 0038 7B68     		ldr	r3, [r7, #4]
 298 003a 1A68     		ldr	r2, [r3]
 299              		.loc 1 215 55
 300 003c 7B69     		ldr	r3, [r7, #20]
 301 003e 5B00     		lsls	r3, r3, #1
 302              		.loc 1 215 44
 303 0040 0321     		movs	r1, #3
 304 0042 01FA03F3 		lsl	r3, r1, r3
 305              		.loc 1 215 24
 306 0046 DB43     		mvns	r3, r3
 307              		.loc 1 215 21
 308 0048 1A40     		ands	r2, r2, r3
 309 004a 7B68     		ldr	r3, [r7, #4]
 310 004c 1A60     		str	r2, [r3]
 216:./Lib/Src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 311              		.loc 1 216 12
 312 004e 7B68     		ldr	r3, [r7, #4]
 313 0050 1A68     		ldr	r2, [r3]
 314              		.loc 1 216 50
 315 0052 3B68     		ldr	r3, [r7]
 316 0054 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 317              		.loc 1 216 25
 318 0056 1946     		mov	r1, r3
 319              		.loc 1 216 74
 320 0058 7B69     		ldr	r3, [r7, #20]
 321 005a 5B00     		lsls	r3, r3, #1
 322              		.loc 1 216 63
 323 005c 01FA03F3 		lsl	r3, r1, r3
 324              		.loc 1 216 20
 325 0060 1A43     		orrs	r2, r2, r3
 326 0062 7B68     		ldr	r3, [r7, #4]
 327 0064 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccUbNYzC.s 			page 11


 217:./Lib/Src/stm32f4xx_gpio.c **** 
 218:./Lib/Src/stm32f4xx_gpio.c ****       if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode
 328              		.loc 1 218 27
 329 0066 3B68     		ldr	r3, [r7]
 330 0068 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 331              		.loc 1 218 10
 332 006a 012B     		cmp	r3, #1
 333 006c 03D0     		beq	.L19
 334              		.loc 1 218 76 discriminator 1
 335 006e 3B68     		ldr	r3, [r7]
 336 0070 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 337              		.loc 1 218 57 discriminator 1
 338 0072 022B     		cmp	r3, #2
 339 0074 2ED1     		bne	.L20
 340              	.L19:
 219:./Lib/Src/stm32f4xx_gpio.c ****       {
 220:./Lib/Src/stm32f4xx_gpio.c ****         /* Check Speed mode parameters */
 221:./Lib/Src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 222:./Lib/Src/stm32f4xx_gpio.c **** 
 223:./Lib/Src/stm32f4xx_gpio.c ****         /* Speed mode configuration */
 224:./Lib/Src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 341              		.loc 1 224 14
 342 0076 7B68     		ldr	r3, [r7, #4]
 343 0078 9A68     		ldr	r2, [r3, #8]
 344              		.loc 1 224 63
 345 007a 7B69     		ldr	r3, [r7, #20]
 346 007c 5B00     		lsls	r3, r3, #1
 347              		.loc 1 224 52
 348 007e 0321     		movs	r1, #3
 349 0080 01FA03F3 		lsl	r3, r1, r3
 350              		.loc 1 224 27
 351 0084 DB43     		mvns	r3, r3
 352              		.loc 1 224 24
 353 0086 1A40     		ands	r2, r2, r3
 354 0088 7B68     		ldr	r3, [r7, #4]
 355 008a 9A60     		str	r2, [r3, #8]
 225:./Lib/Src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 356              		.loc 1 225 14
 357 008c 7B68     		ldr	r3, [r7, #4]
 358 008e 9A68     		ldr	r2, [r3, #8]
 359              		.loc 1 225 54
 360 0090 3B68     		ldr	r3, [r7]
 361 0092 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 362              		.loc 1 225 28
 363 0094 1946     		mov	r1, r3
 364              		.loc 1 225 79
 365 0096 7B69     		ldr	r3, [r7, #20]
 366 0098 5B00     		lsls	r3, r3, #1
 367              		.loc 1 225 68
 368 009a 01FA03F3 		lsl	r3, r1, r3
 369              		.loc 1 225 24
 370 009e 1A43     		orrs	r2, r2, r3
 371 00a0 7B68     		ldr	r3, [r7, #4]
 372 00a2 9A60     		str	r2, [r3, #8]
 226:./Lib/Src/stm32f4xx_gpio.c **** 
 227:./Lib/Src/stm32f4xx_gpio.c ****         /* Check Output mode parameters */
 228:./Lib/Src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
ARM GAS  /tmp/ccUbNYzC.s 			page 12


 229:./Lib/Src/stm32f4xx_gpio.c **** 
 230:./Lib/Src/stm32f4xx_gpio.c ****         /* Output mode configuration*/
 231:./Lib/Src/stm32f4xx_gpio.c ****         GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 373              		.loc 1 231 14
 374 00a4 7B68     		ldr	r3, [r7, #4]
 375 00a6 5A68     		ldr	r2, [r3, #4]
 376              		.loc 1 231 52
 377 00a8 7B69     		ldr	r3, [r7, #20]
 378 00aa 9BB2     		uxth	r3, r3
 379 00ac 1946     		mov	r1, r3
 380              		.loc 1 231 48
 381 00ae 0123     		movs	r3, #1
 382 00b0 8B40     		lsls	r3, r3, r1
 383              		.loc 1 231 27
 384 00b2 DB43     		mvns	r3, r3
 385              		.loc 1 231 24
 386 00b4 1A40     		ands	r2, r2, r3
 387 00b6 7B68     		ldr	r3, [r7, #4]
 388 00b8 5A60     		str	r2, [r3, #4]
 232:./Lib/Src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 389              		.loc 1 232 14
 390 00ba 7B68     		ldr	r3, [r7, #4]
 391 00bc 5B68     		ldr	r3, [r3, #4]
 392              		.loc 1 232 63
 393 00be 3A68     		ldr	r2, [r7]
 394 00c0 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 395              		.loc 1 232 38
 396 00c2 1146     		mov	r1, r2
 397              		.loc 1 232 81
 398 00c4 7A69     		ldr	r2, [r7, #20]
 399 00c6 92B2     		uxth	r2, r2
 400              		.loc 1 232 77
 401 00c8 01FA02F2 		lsl	r2, r1, r2
 402              		.loc 1 232 26
 403 00cc 92B2     		uxth	r2, r2
 404              		.loc 1 232 23
 405 00ce 1A43     		orrs	r2, r2, r3
 406 00d0 7B68     		ldr	r3, [r7, #4]
 407 00d2 5A60     		str	r2, [r3, #4]
 408              	.L20:
 233:./Lib/Src/stm32f4xx_gpio.c ****       }
 234:./Lib/Src/stm32f4xx_gpio.c **** 
 235:./Lib/Src/stm32f4xx_gpio.c ****       /* Pull-up Pull down resistor configuration*/
 236:./Lib/Src/stm32f4xx_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 409              		.loc 1 236 12
 410 00d4 7B68     		ldr	r3, [r7, #4]
 411 00d6 DA68     		ldr	r2, [r3, #12]
 412              		.loc 1 236 47
 413 00d8 7B69     		ldr	r3, [r7, #20]
 414 00da 9BB2     		uxth	r3, r3
 415              		.loc 1 236 64
 416 00dc 5B00     		lsls	r3, r3, #1
 417              		.loc 1 236 43
 418 00de 0321     		movs	r1, #3
 419 00e0 01FA03F3 		lsl	r3, r1, r3
 420              		.loc 1 236 23
 421 00e4 DB43     		mvns	r3, r3
ARM GAS  /tmp/ccUbNYzC.s 			page 13


 422              		.loc 1 236 20
 423 00e6 1A40     		ands	r2, r2, r3
 424 00e8 7B68     		ldr	r3, [r7, #4]
 425 00ea DA60     		str	r2, [r3, #12]
 237:./Lib/Src/stm32f4xx_gpio.c ****       GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 426              		.loc 1 237 12
 427 00ec 7B68     		ldr	r3, [r7, #4]
 428 00ee DA68     		ldr	r2, [r3, #12]
 429              		.loc 1 237 50
 430 00f0 3B68     		ldr	r3, [r7]
 431 00f2 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 432              		.loc 1 237 25
 433 00f4 1946     		mov	r1, r3
 434              		.loc 1 237 74
 435 00f6 7B69     		ldr	r3, [r7, #20]
 436 00f8 5B00     		lsls	r3, r3, #1
 437              		.loc 1 237 63
 438 00fa 01FA03F3 		lsl	r3, r1, r3
 439              		.loc 1 237 20
 440 00fe 1A43     		orrs	r2, r2, r3
 441 0100 7B68     		ldr	r3, [r7, #4]
 442 0102 DA60     		str	r2, [r3, #12]
 443              	.L18:
 207:./Lib/Src/stm32f4xx_gpio.c ****   {
 444              		.loc 1 207 44 discriminator 2
 445 0104 7B69     		ldr	r3, [r7, #20]
 446 0106 0133     		adds	r3, r3, #1
 447 0108 7B61     		str	r3, [r7, #20]
 448              	.L17:
 207:./Lib/Src/stm32f4xx_gpio.c ****   {
 449              		.loc 1 207 30 discriminator 1
 450 010a 7B69     		ldr	r3, [r7, #20]
 451 010c 0F2B     		cmp	r3, #15
 452 010e 85D9     		bls	.L21
 238:./Lib/Src/stm32f4xx_gpio.c ****     }
 239:./Lib/Src/stm32f4xx_gpio.c ****   }
 240:./Lib/Src/stm32f4xx_gpio.c **** }
 453              		.loc 1 240 1
 454 0110 00BF     		nop
 455 0112 00BF     		nop
 456 0114 1C37     		adds	r7, r7, #28
 457              		.cfi_def_cfa_offset 4
 458 0116 BD46     		mov	sp, r7
 459              		.cfi_def_cfa_register 13
 460              		@ sp needed
 461 0118 5DF8047B 		ldr	r7, [sp], #4
 462              		.cfi_restore 7
 463              		.cfi_def_cfa_offset 0
 464 011c 7047     		bx	lr
 465              		.cfi_endproc
 466              	.LFE124:
 468              		.section	.text.GPIO_StructInit,"ax",%progbits
 469              		.align	1
 470              		.global	GPIO_StructInit
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
ARM GAS  /tmp/ccUbNYzC.s 			page 14


 475              	GPIO_StructInit:
 476              	.LFB125:
 241:./Lib/Src/stm32f4xx_gpio.c **** 
 242:./Lib/Src/stm32f4xx_gpio.c **** /**
 243:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 244:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will be initialized.
 245:./Lib/Src/stm32f4xx_gpio.c ****   * @retval None
 246:./Lib/Src/stm32f4xx_gpio.c ****   */
 247:./Lib/Src/stm32f4xx_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 248:./Lib/Src/stm32f4xx_gpio.c **** {
 477              		.loc 1 248 1
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 8
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482 0000 80B4     		push	{r7}
 483              		.cfi_def_cfa_offset 4
 484              		.cfi_offset 7, -4
 485 0002 83B0     		sub	sp, sp, #12
 486              		.cfi_def_cfa_offset 16
 487 0004 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 489 0006 7860     		str	r0, [r7, #4]
 249:./Lib/Src/stm32f4xx_gpio.c ****   /* Reset GPIO init structure parameters values */
 250:./Lib/Src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 490              		.loc 1 250 30
 491 0008 7B68     		ldr	r3, [r7, #4]
 492 000a 4FF6FF72 		movw	r2, #65535
 493 000e 1A60     		str	r2, [r3]
 251:./Lib/Src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 494              		.loc 1 251 30
 495 0010 7B68     		ldr	r3, [r7, #4]
 496 0012 0022     		movs	r2, #0
 497 0014 1A71     		strb	r2, [r3, #4]
 252:./Lib/Src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 498              		.loc 1 252 31
 499 0016 7B68     		ldr	r3, [r7, #4]
 500 0018 0022     		movs	r2, #0
 501 001a 5A71     		strb	r2, [r3, #5]
 253:./Lib/Src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 502              		.loc 1 253 31
 503 001c 7B68     		ldr	r3, [r7, #4]
 504 001e 0022     		movs	r2, #0
 505 0020 9A71     		strb	r2, [r3, #6]
 254:./Lib/Src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 506              		.loc 1 254 30
 507 0022 7B68     		ldr	r3, [r7, #4]
 508 0024 0022     		movs	r2, #0
 509 0026 DA71     		strb	r2, [r3, #7]
 255:./Lib/Src/stm32f4xx_gpio.c **** }
 510              		.loc 1 255 1
 511 0028 00BF     		nop
 512 002a 0C37     		adds	r7, r7, #12
 513              		.cfi_def_cfa_offset 4
 514 002c BD46     		mov	sp, r7
 515              		.cfi_def_cfa_register 13
 516              		@ sp needed
ARM GAS  /tmp/ccUbNYzC.s 			page 15


 517 002e 5DF8047B 		ldr	r7, [sp], #4
 518              		.cfi_restore 7
 519              		.cfi_def_cfa_offset 0
 520 0032 7047     		bx	lr
 521              		.cfi_endproc
 522              	.LFE125:
 524              		.section	.text.GPIO_PinLockConfig,"ax",%progbits
 525              		.align	1
 526              		.global	GPIO_PinLockConfig
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 531              	GPIO_PinLockConfig:
 532              	.LFB126:
 256:./Lib/Src/stm32f4xx_gpio.c **** 
 257:./Lib/Src/stm32f4xx_gpio.c **** /**
 258:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 259:./Lib/Src/stm32f4xx_gpio.c ****   * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 260:./Lib/Src/stm32f4xx_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 261:./Lib/Src/stm32f4xx_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 262:./Lib/Src/stm32f4xx_gpio.c ****   *         until the next reset.
 263:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 264:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 265:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 266:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be locked.
 267:./Lib/Src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 268:./Lib/Src/stm32f4xx_gpio.c ****   * @retval None
 269:./Lib/Src/stm32f4xx_gpio.c ****   */
 270:./Lib/Src/stm32f4xx_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 271:./Lib/Src/stm32f4xx_gpio.c **** {
 533              		.loc 1 271 1
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 16
 536              		@ frame_needed = 1, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538 0000 80B4     		push	{r7}
 539              		.cfi_def_cfa_offset 4
 540              		.cfi_offset 7, -4
 541 0002 85B0     		sub	sp, sp, #20
 542              		.cfi_def_cfa_offset 24
 543 0004 00AF     		add	r7, sp, #0
 544              		.cfi_def_cfa_register 7
 545 0006 7860     		str	r0, [r7, #4]
 546 0008 0B46     		mov	r3, r1
 547 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 272:./Lib/Src/stm32f4xx_gpio.c ****   __IO uint32_t tmp = 0x00010000;
 548              		.loc 1 272 17
 549 000c 4FF48033 		mov	r3, #65536
 550 0010 FB60     		str	r3, [r7, #12]
 273:./Lib/Src/stm32f4xx_gpio.c **** 
 274:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 275:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 276:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 277:./Lib/Src/stm32f4xx_gpio.c **** 
 278:./Lib/Src/stm32f4xx_gpio.c ****   tmp |= GPIO_Pin;
 551              		.loc 1 278 7
 552 0012 7A88     		ldrh	r2, [r7, #2]
ARM GAS  /tmp/ccUbNYzC.s 			page 16


 553 0014 FB68     		ldr	r3, [r7, #12]
 554 0016 1343     		orrs	r3, r3, r2
 555 0018 FB60     		str	r3, [r7, #12]
 279:./Lib/Src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 280:./Lib/Src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 556              		.loc 1 280 15
 557 001a FA68     		ldr	r2, [r7, #12]
 558 001c 7B68     		ldr	r3, [r7, #4]
 559 001e DA61     		str	r2, [r3, #28]
 281:./Lib/Src/stm32f4xx_gpio.c ****   /* Reset LCKK bit */
 282:./Lib/Src/stm32f4xx_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 560              		.loc 1 282 15
 561 0020 7A88     		ldrh	r2, [r7, #2]
 562 0022 7B68     		ldr	r3, [r7, #4]
 563 0024 DA61     		str	r2, [r3, #28]
 283:./Lib/Src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 284:./Lib/Src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 564              		.loc 1 284 15
 565 0026 FA68     		ldr	r2, [r7, #12]
 566 0028 7B68     		ldr	r3, [r7, #4]
 567 002a DA61     		str	r2, [r3, #28]
 285:./Lib/Src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 286:./Lib/Src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 568              		.loc 1 286 14
 569 002c 7B68     		ldr	r3, [r7, #4]
 570 002e DB69     		ldr	r3, [r3, #28]
 571              		.loc 1 286 7
 572 0030 FB60     		str	r3, [r7, #12]
 287:./Lib/Src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 288:./Lib/Src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 573              		.loc 1 288 14
 574 0032 7B68     		ldr	r3, [r7, #4]
 575 0034 DB69     		ldr	r3, [r3, #28]
 576              		.loc 1 288 7
 577 0036 FB60     		str	r3, [r7, #12]
 289:./Lib/Src/stm32f4xx_gpio.c **** }
 578              		.loc 1 289 1
 579 0038 00BF     		nop
 580 003a 1437     		adds	r7, r7, #20
 581              		.cfi_def_cfa_offset 4
 582 003c BD46     		mov	sp, r7
 583              		.cfi_def_cfa_register 13
 584              		@ sp needed
 585 003e 5DF8047B 		ldr	r7, [sp], #4
 586              		.cfi_restore 7
 587              		.cfi_def_cfa_offset 0
 588 0042 7047     		bx	lr
 589              		.cfi_endproc
 590              	.LFE126:
 592              		.section	.text.GPIO_ReadInputDataBit,"ax",%progbits
 593              		.align	1
 594              		.global	GPIO_ReadInputDataBit
 595              		.syntax unified
 596              		.thumb
 597              		.thumb_func
 599              	GPIO_ReadInputDataBit:
 600              	.LFB127:
ARM GAS  /tmp/ccUbNYzC.s 			page 17


 290:./Lib/Src/stm32f4xx_gpio.c **** 
 291:./Lib/Src/stm32f4xx_gpio.c **** /**
 292:./Lib/Src/stm32f4xx_gpio.c ****   * @}
 293:./Lib/Src/stm32f4xx_gpio.c ****   */
 294:./Lib/Src/stm32f4xx_gpio.c **** 
 295:./Lib/Src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group2 GPIO Read and Write
 296:./Lib/Src/stm32f4xx_gpio.c ****  *  @brief   GPIO Read and Write
 297:./Lib/Src/stm32f4xx_gpio.c ****  *
 298:./Lib/Src/stm32f4xx_gpio.c **** @verbatim   
 299:./Lib/Src/stm32f4xx_gpio.c ****  ===============================================================================
 300:./Lib/Src/stm32f4xx_gpio.c ****                          ##### GPIO Read and Write #####
 301:./Lib/Src/stm32f4xx_gpio.c ****  ===============================================================================  
 302:./Lib/Src/stm32f4xx_gpio.c **** 
 303:./Lib/Src/stm32f4xx_gpio.c **** @endverbatim
 304:./Lib/Src/stm32f4xx_gpio.c ****   * @{
 305:./Lib/Src/stm32f4xx_gpio.c ****   */
 306:./Lib/Src/stm32f4xx_gpio.c **** 
 307:./Lib/Src/stm32f4xx_gpio.c **** /**
 308:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Reads the specified input port pin.
 309:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 310:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 311:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 312:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 313:./Lib/Src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_Pin_x where x can be (0..15).
 314:./Lib/Src/stm32f4xx_gpio.c ****   * @retval The input port pin value.
 315:./Lib/Src/stm32f4xx_gpio.c ****   */
 316:./Lib/Src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 317:./Lib/Src/stm32f4xx_gpio.c **** {
 601              		.loc 1 317 1
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 16
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 606 0000 80B4     		push	{r7}
 607              		.cfi_def_cfa_offset 4
 608              		.cfi_offset 7, -4
 609 0002 85B0     		sub	sp, sp, #20
 610              		.cfi_def_cfa_offset 24
 611 0004 00AF     		add	r7, sp, #0
 612              		.cfi_def_cfa_register 7
 613 0006 7860     		str	r0, [r7, #4]
 614 0008 0B46     		mov	r3, r1
 615 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 318:./Lib/Src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 616              		.loc 1 318 11
 617 000c 0023     		movs	r3, #0
 618 000e FB73     		strb	r3, [r7, #15]
 319:./Lib/Src/stm32f4xx_gpio.c **** 
 320:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 321:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 322:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 323:./Lib/Src/stm32f4xx_gpio.c **** 
 324:./Lib/Src/stm32f4xx_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 619              		.loc 1 324 13
 620 0010 7B68     		ldr	r3, [r7, #4]
 621 0012 1A69     		ldr	r2, [r3, #16]
 622              		.loc 1 324 19
ARM GAS  /tmp/ccUbNYzC.s 			page 18


 623 0014 7B88     		ldrh	r3, [r7, #2]
 624 0016 1340     		ands	r3, r3, r2
 625              		.loc 1 324 6
 626 0018 002B     		cmp	r3, #0
 627 001a 02D0     		beq	.L25
 325:./Lib/Src/stm32f4xx_gpio.c ****   {
 326:./Lib/Src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 628              		.loc 1 326 15
 629 001c 0123     		movs	r3, #1
 630 001e FB73     		strb	r3, [r7, #15]
 631 0020 01E0     		b	.L26
 632              	.L25:
 327:./Lib/Src/stm32f4xx_gpio.c ****   }
 328:./Lib/Src/stm32f4xx_gpio.c ****   else
 329:./Lib/Src/stm32f4xx_gpio.c ****   {
 330:./Lib/Src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 633              		.loc 1 330 15
 634 0022 0023     		movs	r3, #0
 635 0024 FB73     		strb	r3, [r7, #15]
 636              	.L26:
 331:./Lib/Src/stm32f4xx_gpio.c ****   }
 332:./Lib/Src/stm32f4xx_gpio.c ****   return bitstatus;
 637              		.loc 1 332 10
 638 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 333:./Lib/Src/stm32f4xx_gpio.c **** }
 639              		.loc 1 333 1
 640 0028 1846     		mov	r0, r3
 641 002a 1437     		adds	r7, r7, #20
 642              		.cfi_def_cfa_offset 4
 643 002c BD46     		mov	sp, r7
 644              		.cfi_def_cfa_register 13
 645              		@ sp needed
 646 002e 5DF8047B 		ldr	r7, [sp], #4
 647              		.cfi_restore 7
 648              		.cfi_def_cfa_offset 0
 649 0032 7047     		bx	lr
 650              		.cfi_endproc
 651              	.LFE127:
 653              		.section	.text.GPIO_ReadInputData,"ax",%progbits
 654              		.align	1
 655              		.global	GPIO_ReadInputData
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 660              	GPIO_ReadInputData:
 661              	.LFB128:
 334:./Lib/Src/stm32f4xx_gpio.c **** 
 335:./Lib/Src/stm32f4xx_gpio.c **** /**
 336:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO input data port.
 337:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 338:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 339:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 340:./Lib/Src/stm32f4xx_gpio.c ****   * @retval GPIO input data port value.
 341:./Lib/Src/stm32f4xx_gpio.c ****   */
 342:./Lib/Src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 343:./Lib/Src/stm32f4xx_gpio.c **** {
 662              		.loc 1 343 1
ARM GAS  /tmp/ccUbNYzC.s 			page 19


 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 8
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667 0000 80B4     		push	{r7}
 668              		.cfi_def_cfa_offset 4
 669              		.cfi_offset 7, -4
 670 0002 83B0     		sub	sp, sp, #12
 671              		.cfi_def_cfa_offset 16
 672 0004 00AF     		add	r7, sp, #0
 673              		.cfi_def_cfa_register 7
 674 0006 7860     		str	r0, [r7, #4]
 344:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 345:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 346:./Lib/Src/stm32f4xx_gpio.c **** 
 347:./Lib/Src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 675              		.loc 1 347 26
 676 0008 7B68     		ldr	r3, [r7, #4]
 677 000a 1B69     		ldr	r3, [r3, #16]
 678              		.loc 1 347 11
 679 000c 9BB2     		uxth	r3, r3
 348:./Lib/Src/stm32f4xx_gpio.c **** }
 680              		.loc 1 348 1
 681 000e 1846     		mov	r0, r3
 682 0010 0C37     		adds	r7, r7, #12
 683              		.cfi_def_cfa_offset 4
 684 0012 BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 0014 5DF8047B 		ldr	r7, [sp], #4
 688              		.cfi_restore 7
 689              		.cfi_def_cfa_offset 0
 690 0018 7047     		bx	lr
 691              		.cfi_endproc
 692              	.LFE128:
 694              		.section	.text.GPIO_ReadOutputDataBit,"ax",%progbits
 695              		.align	1
 696              		.global	GPIO_ReadOutputDataBit
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 701              	GPIO_ReadOutputDataBit:
 702              	.LFB129:
 349:./Lib/Src/stm32f4xx_gpio.c **** 
 350:./Lib/Src/stm32f4xx_gpio.c **** /**
 351:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Reads the specified output data port bit.
 352:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 353:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 354:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 355:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 356:./Lib/Src/stm32f4xx_gpio.c ****   *          This parameter can be GPIO_Pin_x where x can be (0..15).
 357:./Lib/Src/stm32f4xx_gpio.c ****   * @retval The output port pin value.
 358:./Lib/Src/stm32f4xx_gpio.c ****   */
 359:./Lib/Src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 360:./Lib/Src/stm32f4xx_gpio.c **** {
 703              		.loc 1 360 1
 704              		.cfi_startproc
ARM GAS  /tmp/ccUbNYzC.s 			page 20


 705              		@ args = 0, pretend = 0, frame = 16
 706              		@ frame_needed = 1, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 708 0000 80B4     		push	{r7}
 709              		.cfi_def_cfa_offset 4
 710              		.cfi_offset 7, -4
 711 0002 85B0     		sub	sp, sp, #20
 712              		.cfi_def_cfa_offset 24
 713 0004 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 715 0006 7860     		str	r0, [r7, #4]
 716 0008 0B46     		mov	r3, r1
 717 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 361:./Lib/Src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 718              		.loc 1 361 11
 719 000c 0023     		movs	r3, #0
 720 000e FB73     		strb	r3, [r7, #15]
 362:./Lib/Src/stm32f4xx_gpio.c **** 
 363:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 364:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 365:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 366:./Lib/Src/stm32f4xx_gpio.c **** 
 367:./Lib/Src/stm32f4xx_gpio.c ****   if (((GPIOx->ODR) & GPIO_Pin) != (uint32_t)Bit_RESET)
 721              		.loc 1 367 14
 722 0010 7B68     		ldr	r3, [r7, #4]
 723 0012 5A69     		ldr	r2, [r3, #20]
 724              		.loc 1 367 21
 725 0014 7B88     		ldrh	r3, [r7, #2]
 726 0016 1340     		ands	r3, r3, r2
 727              		.loc 1 367 6
 728 0018 002B     		cmp	r3, #0
 729 001a 02D0     		beq	.L31
 368:./Lib/Src/stm32f4xx_gpio.c ****   {
 369:./Lib/Src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 730              		.loc 1 369 15
 731 001c 0123     		movs	r3, #1
 732 001e FB73     		strb	r3, [r7, #15]
 733 0020 01E0     		b	.L32
 734              	.L31:
 370:./Lib/Src/stm32f4xx_gpio.c ****   }
 371:./Lib/Src/stm32f4xx_gpio.c ****   else
 372:./Lib/Src/stm32f4xx_gpio.c ****   {
 373:./Lib/Src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 735              		.loc 1 373 15
 736 0022 0023     		movs	r3, #0
 737 0024 FB73     		strb	r3, [r7, #15]
 738              	.L32:
 374:./Lib/Src/stm32f4xx_gpio.c ****   }
 375:./Lib/Src/stm32f4xx_gpio.c ****   return bitstatus;
 739              		.loc 1 375 10
 740 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 376:./Lib/Src/stm32f4xx_gpio.c **** }
 741              		.loc 1 376 1
 742 0028 1846     		mov	r0, r3
 743 002a 1437     		adds	r7, r7, #20
 744              		.cfi_def_cfa_offset 4
 745 002c BD46     		mov	sp, r7
ARM GAS  /tmp/ccUbNYzC.s 			page 21


 746              		.cfi_def_cfa_register 13
 747              		@ sp needed
 748 002e 5DF8047B 		ldr	r7, [sp], #4
 749              		.cfi_restore 7
 750              		.cfi_def_cfa_offset 0
 751 0032 7047     		bx	lr
 752              		.cfi_endproc
 753              	.LFE129:
 755              		.section	.text.GPIO_ReadOutputData,"ax",%progbits
 756              		.align	1
 757              		.global	GPIO_ReadOutputData
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 762              	GPIO_ReadOutputData:
 763              	.LFB130:
 377:./Lib/Src/stm32f4xx_gpio.c **** 
 378:./Lib/Src/stm32f4xx_gpio.c **** /**
 379:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 380:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 381:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 382:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 383:./Lib/Src/stm32f4xx_gpio.c ****   * @retval GPIO output data port value.
 384:./Lib/Src/stm32f4xx_gpio.c ****   */
 385:./Lib/Src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 386:./Lib/Src/stm32f4xx_gpio.c **** {
 764              		.loc 1 386 1
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 8
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768              		@ link register save eliminated.
 769 0000 80B4     		push	{r7}
 770              		.cfi_def_cfa_offset 4
 771              		.cfi_offset 7, -4
 772 0002 83B0     		sub	sp, sp, #12
 773              		.cfi_def_cfa_offset 16
 774 0004 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 776 0006 7860     		str	r0, [r7, #4]
 387:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 388:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 389:./Lib/Src/stm32f4xx_gpio.c **** 
 390:./Lib/Src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 777              		.loc 1 390 26
 778 0008 7B68     		ldr	r3, [r7, #4]
 779 000a 5B69     		ldr	r3, [r3, #20]
 780              		.loc 1 390 11
 781 000c 9BB2     		uxth	r3, r3
 391:./Lib/Src/stm32f4xx_gpio.c **** }
 782              		.loc 1 391 1
 783 000e 1846     		mov	r0, r3
 784 0010 0C37     		adds	r7, r7, #12
 785              		.cfi_def_cfa_offset 4
 786 0012 BD46     		mov	sp, r7
 787              		.cfi_def_cfa_register 13
 788              		@ sp needed
 789 0014 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccUbNYzC.s 			page 22


 790              		.cfi_restore 7
 791              		.cfi_def_cfa_offset 0
 792 0018 7047     		bx	lr
 793              		.cfi_endproc
 794              	.LFE130:
 796              		.section	.text.GPIO_SetBits,"ax",%progbits
 797              		.align	1
 798              		.global	GPIO_SetBits
 799              		.syntax unified
 800              		.thumb
 801              		.thumb_func
 803              	GPIO_SetBits:
 804              	.LFB131:
 392:./Lib/Src/stm32f4xx_gpio.c **** 
 393:./Lib/Src/stm32f4xx_gpio.c **** /**
 394:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Sets the selected data port bits.
 395:./Lib/Src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 396:./Lib/Src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 397:./Lib/Src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 398:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 399:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 400:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 401:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 402:./Lib/Src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 403:./Lib/Src/stm32f4xx_gpio.c ****   * @retval None
 404:./Lib/Src/stm32f4xx_gpio.c ****   */
 405:./Lib/Src/stm32f4xx_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 406:./Lib/Src/stm32f4xx_gpio.c **** {
 805              		.loc 1 406 1
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 8
 808              		@ frame_needed = 1, uses_anonymous_args = 0
 809              		@ link register save eliminated.
 810 0000 80B4     		push	{r7}
 811              		.cfi_def_cfa_offset 4
 812              		.cfi_offset 7, -4
 813 0002 83B0     		sub	sp, sp, #12
 814              		.cfi_def_cfa_offset 16
 815 0004 00AF     		add	r7, sp, #0
 816              		.cfi_def_cfa_register 7
 817 0006 7860     		str	r0, [r7, #4]
 818 0008 0B46     		mov	r3, r1
 819 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 407:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 408:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 409:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 410:./Lib/Src/stm32f4xx_gpio.c **** 
 411:./Lib/Src/stm32f4xx_gpio.c ****   GPIOx->BSRR = GPIO_Pin;
 820              		.loc 1 411 15
 821 000c 7A88     		ldrh	r2, [r7, #2]
 822 000e 7B68     		ldr	r3, [r7, #4]
 823 0010 9A61     		str	r2, [r3, #24]
 412:./Lib/Src/stm32f4xx_gpio.c **** }
 824              		.loc 1 412 1
 825 0012 00BF     		nop
 826 0014 0C37     		adds	r7, r7, #12
 827              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccUbNYzC.s 			page 23


 828 0016 BD46     		mov	sp, r7
 829              		.cfi_def_cfa_register 13
 830              		@ sp needed
 831 0018 5DF8047B 		ldr	r7, [sp], #4
 832              		.cfi_restore 7
 833              		.cfi_def_cfa_offset 0
 834 001c 7047     		bx	lr
 835              		.cfi_endproc
 836              	.LFE131:
 838              		.section	.text.GPIO_ResetBits,"ax",%progbits
 839              		.align	1
 840              		.global	GPIO_ResetBits
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 845              	GPIO_ResetBits:
 846              	.LFB132:
 413:./Lib/Src/stm32f4xx_gpio.c **** 
 414:./Lib/Src/stm32f4xx_gpio.c **** /**
 415:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Clears the selected data port bits.
 416:./Lib/Src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 417:./Lib/Src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 418:./Lib/Src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 419:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 420:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 421:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 422:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 423:./Lib/Src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 424:./Lib/Src/stm32f4xx_gpio.c ****   * @retval None
 425:./Lib/Src/stm32f4xx_gpio.c ****   */
 426:./Lib/Src/stm32f4xx_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 427:./Lib/Src/stm32f4xx_gpio.c **** {
 847              		.loc 1 427 1
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 8
 850              		@ frame_needed = 1, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852 0000 80B4     		push	{r7}
 853              		.cfi_def_cfa_offset 4
 854              		.cfi_offset 7, -4
 855 0002 83B0     		sub	sp, sp, #12
 856              		.cfi_def_cfa_offset 16
 857 0004 00AF     		add	r7, sp, #0
 858              		.cfi_def_cfa_register 7
 859 0006 7860     		str	r0, [r7, #4]
 860 0008 0B46     		mov	r3, r1
 861 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 428:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 429:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 430:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 431:./Lib/Src/stm32f4xx_gpio.c **** 
 432:./Lib/Src/stm32f4xx_gpio.c ****   GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 862              		.loc 1 432 17
 863 000c 7B88     		ldrh	r3, [r7, #2]
 864              		.loc 1 432 36
 865 000e 1A04     		lsls	r2, r3, #16
 866              		.loc 1 432 15
ARM GAS  /tmp/ccUbNYzC.s 			page 24


 867 0010 7B68     		ldr	r3, [r7, #4]
 868 0012 9A61     		str	r2, [r3, #24]
 433:./Lib/Src/stm32f4xx_gpio.c **** }
 869              		.loc 1 433 1
 870 0014 00BF     		nop
 871 0016 0C37     		adds	r7, r7, #12
 872              		.cfi_def_cfa_offset 4
 873 0018 BD46     		mov	sp, r7
 874              		.cfi_def_cfa_register 13
 875              		@ sp needed
 876 001a 5DF8047B 		ldr	r7, [sp], #4
 877              		.cfi_restore 7
 878              		.cfi_def_cfa_offset 0
 879 001e 7047     		bx	lr
 880              		.cfi_endproc
 881              	.LFE132:
 883              		.section	.text.GPIO_WriteBit,"ax",%progbits
 884              		.align	1
 885              		.global	GPIO_WriteBit
 886              		.syntax unified
 887              		.thumb
 888              		.thumb_func
 890              	GPIO_WriteBit:
 891              	.LFB133:
 434:./Lib/Src/stm32f4xx_gpio.c **** 
 435:./Lib/Src/stm32f4xx_gpio.c **** /**
 436:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 437:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 438:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 439:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 440:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 441:./Lib/Src/stm32f4xx_gpio.c ****   *          This parameter can be one of GPIO_Pin_x where x can be (0..15).
 442:./Lib/Src/stm32f4xx_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 443:./Lib/Src/stm32f4xx_gpio.c ****   *          This parameter can be one of the BitAction enum values:
 444:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg Bit_RESET: to clear the port pin
 445:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg Bit_SET: to set the port pin
 446:./Lib/Src/stm32f4xx_gpio.c ****   * @retval None
 447:./Lib/Src/stm32f4xx_gpio.c ****   */
 448:./Lib/Src/stm32f4xx_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 449:./Lib/Src/stm32f4xx_gpio.c **** {
 892              		.loc 1 449 1
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 8
 895              		@ frame_needed = 1, uses_anonymous_args = 0
 896              		@ link register save eliminated.
 897 0000 80B4     		push	{r7}
 898              		.cfi_def_cfa_offset 4
 899              		.cfi_offset 7, -4
 900 0002 83B0     		sub	sp, sp, #12
 901              		.cfi_def_cfa_offset 16
 902 0004 00AF     		add	r7, sp, #0
 903              		.cfi_def_cfa_register 7
 904 0006 7860     		str	r0, [r7, #4]
 905 0008 0B46     		mov	r3, r1
 906 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 907 000c 1346     		mov	r3, r2
 908 000e 7B70     		strb	r3, [r7, #1]
ARM GAS  /tmp/ccUbNYzC.s 			page 25


 450:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 451:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 452:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 453:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal));
 454:./Lib/Src/stm32f4xx_gpio.c **** 
 455:./Lib/Src/stm32f4xx_gpio.c ****   if (BitVal != Bit_RESET)
 909              		.loc 1 455 6
 910 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 911 0012 002B     		cmp	r3, #0
 912 0014 03D0     		beq	.L39
 456:./Lib/Src/stm32f4xx_gpio.c ****   {
 457:./Lib/Src/stm32f4xx_gpio.c ****     GPIOx->BSRR = GPIO_Pin;
 913              		.loc 1 457 17
 914 0016 7A88     		ldrh	r2, [r7, #2]
 915 0018 7B68     		ldr	r3, [r7, #4]
 916 001a 9A61     		str	r2, [r3, #24]
 458:./Lib/Src/stm32f4xx_gpio.c ****   }
 459:./Lib/Src/stm32f4xx_gpio.c ****   else
 460:./Lib/Src/stm32f4xx_gpio.c ****   {
 461:./Lib/Src/stm32f4xx_gpio.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 462:./Lib/Src/stm32f4xx_gpio.c ****   }
 463:./Lib/Src/stm32f4xx_gpio.c **** }
 917              		.loc 1 463 1
 918 001c 03E0     		b	.L41
 919              	.L39:
 461:./Lib/Src/stm32f4xx_gpio.c ****   }
 920              		.loc 1 461 19
 921 001e 7B88     		ldrh	r3, [r7, #2]
 461:./Lib/Src/stm32f4xx_gpio.c ****   }
 922              		.loc 1 461 38
 923 0020 1A04     		lsls	r2, r3, #16
 461:./Lib/Src/stm32f4xx_gpio.c ****   }
 924              		.loc 1 461 17
 925 0022 7B68     		ldr	r3, [r7, #4]
 926 0024 9A61     		str	r2, [r3, #24]
 927              	.L41:
 928              		.loc 1 463 1
 929 0026 00BF     		nop
 930 0028 0C37     		adds	r7, r7, #12
 931              		.cfi_def_cfa_offset 4
 932 002a BD46     		mov	sp, r7
 933              		.cfi_def_cfa_register 13
 934              		@ sp needed
 935 002c 5DF8047B 		ldr	r7, [sp], #4
 936              		.cfi_restore 7
 937              		.cfi_def_cfa_offset 0
 938 0030 7047     		bx	lr
 939              		.cfi_endproc
 940              	.LFE133:
 942              		.section	.text.GPIO_Write,"ax",%progbits
 943              		.align	1
 944              		.global	GPIO_Write
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 949              	GPIO_Write:
 950              	.LFB134:
ARM GAS  /tmp/ccUbNYzC.s 			page 26


 464:./Lib/Src/stm32f4xx_gpio.c **** 
 465:./Lib/Src/stm32f4xx_gpio.c **** /**
 466:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 467:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 468:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 469:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 470:./Lib/Src/stm32f4xx_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data register.
 471:./Lib/Src/stm32f4xx_gpio.c ****   * @retval None
 472:./Lib/Src/stm32f4xx_gpio.c ****   */
 473:./Lib/Src/stm32f4xx_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 474:./Lib/Src/stm32f4xx_gpio.c **** {
 951              		.loc 1 474 1
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 8
 954              		@ frame_needed = 1, uses_anonymous_args = 0
 955              		@ link register save eliminated.
 956 0000 80B4     		push	{r7}
 957              		.cfi_def_cfa_offset 4
 958              		.cfi_offset 7, -4
 959 0002 83B0     		sub	sp, sp, #12
 960              		.cfi_def_cfa_offset 16
 961 0004 00AF     		add	r7, sp, #0
 962              		.cfi_def_cfa_register 7
 963 0006 7860     		str	r0, [r7, #4]
 964 0008 0B46     		mov	r3, r1
 965 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 475:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 476:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 477:./Lib/Src/stm32f4xx_gpio.c **** 
 478:./Lib/Src/stm32f4xx_gpio.c ****   GPIOx->ODR = PortVal;
 966              		.loc 1 478 14
 967 000c 7A88     		ldrh	r2, [r7, #2]
 968 000e 7B68     		ldr	r3, [r7, #4]
 969 0010 5A61     		str	r2, [r3, #20]
 479:./Lib/Src/stm32f4xx_gpio.c **** }
 970              		.loc 1 479 1
 971 0012 00BF     		nop
 972 0014 0C37     		adds	r7, r7, #12
 973              		.cfi_def_cfa_offset 4
 974 0016 BD46     		mov	sp, r7
 975              		.cfi_def_cfa_register 13
 976              		@ sp needed
 977 0018 5DF8047B 		ldr	r7, [sp], #4
 978              		.cfi_restore 7
 979              		.cfi_def_cfa_offset 0
 980 001c 7047     		bx	lr
 981              		.cfi_endproc
 982              	.LFE134:
 984              		.section	.text.GPIO_ToggleBits,"ax",%progbits
 985              		.align	1
 986              		.global	GPIO_ToggleBits
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 991              	GPIO_ToggleBits:
 992              	.LFB135:
 480:./Lib/Src/stm32f4xx_gpio.c **** 
ARM GAS  /tmp/ccUbNYzC.s 			page 27


 481:./Lib/Src/stm32f4xx_gpio.c **** /**
 482:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Toggles the specified GPIO pins..
 483:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 484:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 485:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 486:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: Specifies the pins to be toggled.
 487:./Lib/Src/stm32f4xx_gpio.c ****   * @retval None
 488:./Lib/Src/stm32f4xx_gpio.c ****   */
 489:./Lib/Src/stm32f4xx_gpio.c **** void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 490:./Lib/Src/stm32f4xx_gpio.c **** {
 993              		.loc 1 490 1
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 8
 996              		@ frame_needed = 1, uses_anonymous_args = 0
 997              		@ link register save eliminated.
 998 0000 80B4     		push	{r7}
 999              		.cfi_def_cfa_offset 4
 1000              		.cfi_offset 7, -4
 1001 0002 83B0     		sub	sp, sp, #12
 1002              		.cfi_def_cfa_offset 16
 1003 0004 00AF     		add	r7, sp, #0
 1004              		.cfi_def_cfa_register 7
 1005 0006 7860     		str	r0, [r7, #4]
 1006 0008 0B46     		mov	r3, r1
 1007 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 491:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 492:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 493:./Lib/Src/stm32f4xx_gpio.c **** 
 494:./Lib/Src/stm32f4xx_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 1008              		.loc 1 494 8
 1009 000c 7B68     		ldr	r3, [r7, #4]
 1010 000e 5A69     		ldr	r2, [r3, #20]
 1011              		.loc 1 494 14
 1012 0010 7B88     		ldrh	r3, [r7, #2]
 1013 0012 5A40     		eors	r2, r2, r3
 1014 0014 7B68     		ldr	r3, [r7, #4]
 1015 0016 5A61     		str	r2, [r3, #20]
 495:./Lib/Src/stm32f4xx_gpio.c **** }
 1016              		.loc 1 495 1
 1017 0018 00BF     		nop
 1018 001a 0C37     		adds	r7, r7, #12
 1019              		.cfi_def_cfa_offset 4
 1020 001c BD46     		mov	sp, r7
 1021              		.cfi_def_cfa_register 13
 1022              		@ sp needed
 1023 001e 5DF8047B 		ldr	r7, [sp], #4
 1024              		.cfi_restore 7
 1025              		.cfi_def_cfa_offset 0
 1026 0022 7047     		bx	lr
 1027              		.cfi_endproc
 1028              	.LFE135:
 1030              		.section	.text.GPIO_PinAFConfig,"ax",%progbits
 1031              		.align	1
 1032              		.global	GPIO_PinAFConfig
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
ARM GAS  /tmp/ccUbNYzC.s 			page 28


 1037              	GPIO_PinAFConfig:
 1038              	.LFB136:
 496:./Lib/Src/stm32f4xx_gpio.c **** 
 497:./Lib/Src/stm32f4xx_gpio.c **** /**
 498:./Lib/Src/stm32f4xx_gpio.c ****   * @}
 499:./Lib/Src/stm32f4xx_gpio.c ****   */
 500:./Lib/Src/stm32f4xx_gpio.c **** 
 501:./Lib/Src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group3 GPIO Alternate functions configuration function
 502:./Lib/Src/stm32f4xx_gpio.c ****  *  @brief   GPIO Alternate functions configuration function
 503:./Lib/Src/stm32f4xx_gpio.c ****  *
 504:./Lib/Src/stm32f4xx_gpio.c **** @verbatim   
 505:./Lib/Src/stm32f4xx_gpio.c ****  ===============================================================================
 506:./Lib/Src/stm32f4xx_gpio.c ****            ##### GPIO Alternate functions configuration function #####
 507:./Lib/Src/stm32f4xx_gpio.c ****  ===============================================================================  
 508:./Lib/Src/stm32f4xx_gpio.c **** 
 509:./Lib/Src/stm32f4xx_gpio.c **** @endverbatim
 510:./Lib/Src/stm32f4xx_gpio.c ****   * @{
 511:./Lib/Src/stm32f4xx_gpio.c ****   */
 512:./Lib/Src/stm32f4xx_gpio.c **** 
 513:./Lib/Src/stm32f4xx_gpio.c **** /**
 514:./Lib/Src/stm32f4xx_gpio.c ****   * @brief  Changes the mapping of the specified pin.
 515:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..K) to select the GPIO peripheral for STM32F405xx/407xx and ST
 516:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A..I) to select the GPIO peripheral for STM32F42xxx/43xxx device
 517:./Lib/Src/stm32f4xx_gpio.c ****   *                      x can be (A, B, C, D and H) to select the GPIO peripheral for STM32F401xx 
 518:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Alternate function.
 519:./Lib/Src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_PinSourcex where x can be (0..15).
 520:./Lib/Src/stm32f4xx_gpio.c ****   * @param  GPIO_AFSelection: selects the pin to used as Alternate function.
 521:./Lib/Src/stm32f4xx_gpio.c ****   *          This parameter can be one of the following values:
 522:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_RTC_50Hz: Connect RTC_50Hz pin to AF0 (default after reset) 
 523:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_MCO: Connect MCO pin (MCO1 and MCO2) to AF0 (default after reset) 
 524:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TAMPER: Connect TAMPER pins (TAMPER_1 and TAMPER_2) to AF0 (default aft
 525:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SWJ: Connect SWJ pins (SWD and JTAG)to AF0 (default after reset) 
 526:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TRACE: Connect TRACE pins to AF0 (default after reset)
 527:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM1: Connect TIM1 pins to AF1
 528:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM2: Connect TIM2 pins to AF1
 529:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM3: Connect TIM3 pins to AF2
 530:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM4: Connect TIM4 pins to AF2
 531:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM5: Connect TIM5 pins to AF2
 532:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM8: Connect TIM8 pins to AF3
 533:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM9: Connect TIM9 pins to AF3
 534:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM10: Connect TIM10 pins to AF3
 535:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM11: Connect TIM11 pins to AF3
 536:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C1: Connect I2C1 pins to AF4
 537:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C2: Connect I2C2 pins to AF4
 538:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C3: Connect I2C3 pins to AF4
 539:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI1: Connect SPI1 pins to AF5
 540:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI2: Connect SPI2/I2S2 pins to AF5
 541:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI4: Connect SPI4 pins to AF5 
 542:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI5: Connect SPI5 pins to AF5 
 543:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI6: Connect SPI6 pins to AF5
 544:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SAI1: Connect SAI1 pins to AF6 for STM32F42xxx/43xxx devices.       
 545:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI3: Connect SPI3/I2S3 pins to AF6
 546:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2S3ext: Connect I2S3ext pins to AF7
 547:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART1: Connect USART1 pins to AF7
 548:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART2: Connect USART2 pins to AF7
 549:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART3: Connect USART3 pins to AF7
 550:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART4: Connect UART4 pins to AF8
ARM GAS  /tmp/ccUbNYzC.s 			page 29


 551:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART5: Connect UART5 pins to AF8
 552:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART6: Connect USART6 pins to AF8
 553:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART7: Connect UART7 pins to AF8
 554:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART8: Connect UART8 pins to AF8
 555:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN1: Connect CAN1 pins to AF9
 556:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN2: Connect CAN2 pins to AF9
 557:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM12: Connect TIM12 pins to AF9
 558:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM13: Connect TIM13 pins to AF9
 559:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM14: Connect TIM14 pins to AF9
 560:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_FS: Connect OTG_FS pins to AF10
 561:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS: Connect OTG_HS pins to AF10
 562:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_ETH: Connect ETHERNET pins to AF11
 563:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FSMC: Connect FSMC pins to AF12 
 564:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FMC: Connect FMC pins to AF12 for STM32F42xxx/43xxx devices.   
 565:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS_FS: Connect OTG HS (configured in FS) pins to AF12
 566:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SDIO: Connect SDIO pins to AF12
 567:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_DCMI: Connect DCMI pins to AF13
 568:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_LTDC: Connect LTDC pins to AF14 for STM32F429xx/439xx devices. 
 569:./Lib/Src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
 570:./Lib/Src/stm32f4xx_gpio.c ****   * @retval None
 571:./Lib/Src/stm32f4xx_gpio.c ****   */
 572:./Lib/Src/stm32f4xx_gpio.c **** void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
 573:./Lib/Src/stm32f4xx_gpio.c **** {
 1039              		.loc 1 573 1
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 16
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044 0000 80B4     		push	{r7}
 1045              		.cfi_def_cfa_offset 4
 1046              		.cfi_offset 7, -4
 1047 0002 85B0     		sub	sp, sp, #20
 1048              		.cfi_def_cfa_offset 24
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 1051 0006 7860     		str	r0, [r7, #4]
 1052 0008 0B46     		mov	r3, r1
 1053 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 1054 000c 1346     		mov	r3, r2
 1055 000e 7B70     		strb	r3, [r7, #1]
 574:./Lib/Src/stm32f4xx_gpio.c ****   uint32_t temp = 0x00;
 1056              		.loc 1 574 12
 1057 0010 0023     		movs	r3, #0
 1058 0012 FB60     		str	r3, [r7, #12]
 575:./Lib/Src/stm32f4xx_gpio.c ****   uint32_t temp_2 = 0x00;
 1059              		.loc 1 575 12
 1060 0014 0023     		movs	r3, #0
 1061 0016 BB60     		str	r3, [r7, #8]
 576:./Lib/Src/stm32f4xx_gpio.c ****   
 577:./Lib/Src/stm32f4xx_gpio.c ****   /* Check the parameters */
 578:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 579:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 580:./Lib/Src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_AF(GPIO_AF));
 581:./Lib/Src/stm32f4xx_gpio.c ****   
 582:./Lib/Src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 1062              		.loc 1 582 11
 1063 0018 7A78     		ldrb	r2, [r7, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccUbNYzC.s 			page 30


 1064              		.loc 1 582 35
 1065 001a 7B88     		ldrh	r3, [r7, #2]
 1066 001c 03F00703 		and	r3, r3, #7
 1067              		.loc 1 582 89
 1068 0020 9B00     		lsls	r3, r3, #2
 1069              		.loc 1 582 8
 1070 0022 02FA03F3 		lsl	r3, r2, r3
 1071 0026 FB60     		str	r3, [r7, #12]
 583:./Lib/Src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 1072              		.loc 1 583 13
 1073 0028 7B88     		ldrh	r3, [r7, #2]
 1074 002a DB08     		lsrs	r3, r3, #3
 1075 002c 9BB2     		uxth	r3, r3
 1076 002e 1A46     		mov	r2, r3
 1077 0030 7B68     		ldr	r3, [r7, #4]
 1078 0032 0832     		adds	r2, r2, #8
 1079 0034 53F82220 		ldr	r2, [r3, r2, lsl #2]
 1080              		.loc 1 583 61
 1081 0038 7B88     		ldrh	r3, [r7, #2]
 1082 003a 03F00703 		and	r3, r3, #7
 1083              		.loc 1 583 115
 1084 003e 9B00     		lsls	r3, r3, #2
 1085              		.loc 1 583 57
 1086 0040 0F21     		movs	r1, #15
 1087 0042 01FA03F3 		lsl	r3, r1, r3
 1088              		.loc 1 583 41
 1089 0046 DB43     		mvns	r3, r3
 1090              		.loc 1 583 13
 1091 0048 7988     		ldrh	r1, [r7, #2]
 1092 004a C908     		lsrs	r1, r1, #3
 1093 004c 89B2     		uxth	r1, r1
 1094 004e 0846     		mov	r0, r1
 1095              		.loc 1 583 38
 1096 0050 02EA0301 		and	r1, r2, r3
 1097 0054 7B68     		ldr	r3, [r7, #4]
 1098 0056 00F10802 		add	r2, r0, #8
 1099 005a 43F82210 		str	r1, [r3, r2, lsl #2]
 584:./Lib/Src/stm32f4xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 1100              		.loc 1 584 38
 1101 005e 7B88     		ldrh	r3, [r7, #2]
 1102 0060 DB08     		lsrs	r3, r3, #3
 1103 0062 9BB2     		uxth	r3, r3
 1104 0064 1A46     		mov	r2, r3
 1105              		.loc 1 584 22
 1106 0066 7B68     		ldr	r3, [r7, #4]
 1107 0068 0832     		adds	r2, r2, #8
 1108 006a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1109              		.loc 1 584 10
 1110 006e FA68     		ldr	r2, [r7, #12]
 1111 0070 1343     		orrs	r3, r3, r2
 1112 0072 BB60     		str	r3, [r7, #8]
 585:./Lib/Src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 1113              		.loc 1 585 29
 1114 0074 7B88     		ldrh	r3, [r7, #2]
 1115 0076 DB08     		lsrs	r3, r3, #3
 1116 0078 9BB2     		uxth	r3, r3
 1117 007a 1A46     		mov	r2, r3
ARM GAS  /tmp/ccUbNYzC.s 			page 31


 1118              		.loc 1 585 38
 1119 007c 7B68     		ldr	r3, [r7, #4]
 1120 007e 0832     		adds	r2, r2, #8
 1121 0080 B968     		ldr	r1, [r7, #8]
 1122 0082 43F82210 		str	r1, [r3, r2, lsl #2]
 586:./Lib/Src/stm32f4xx_gpio.c **** }
 1123              		.loc 1 586 1
 1124 0086 00BF     		nop
 1125 0088 1437     		adds	r7, r7, #20
 1126              		.cfi_def_cfa_offset 4
 1127 008a BD46     		mov	sp, r7
 1128              		.cfi_def_cfa_register 13
 1129              		@ sp needed
 1130 008c 5DF8047B 		ldr	r7, [sp], #4
 1131              		.cfi_restore 7
 1132              		.cfi_def_cfa_offset 0
 1133 0090 7047     		bx	lr
 1134              		.cfi_endproc
 1135              	.LFE136:
 1137              		.text
 1138              	.Letext0:
 1139              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 1140              		.file 3 "./Start/stm32f4xx.h"
 1141              		.file 4 "./Lib/inc/stm32f4xx_gpio.h"
 1142              		.file 5 "./Lib/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccUbNYzC.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_gpio.c
     /tmp/ccUbNYzC.s:21     .text.GPIO_DeInit:0000000000000000 $t
     /tmp/ccUbNYzC.s:27     .text.GPIO_DeInit:0000000000000000 GPIO_DeInit
     /tmp/ccUbNYzC.s:227    .text.GPIO_DeInit:0000000000000138 $d
     /tmp/ccUbNYzC.s:242    .text.GPIO_Init:0000000000000000 $t
     /tmp/ccUbNYzC.s:248    .text.GPIO_Init:0000000000000000 GPIO_Init
     /tmp/ccUbNYzC.s:469    .text.GPIO_StructInit:0000000000000000 $t
     /tmp/ccUbNYzC.s:475    .text.GPIO_StructInit:0000000000000000 GPIO_StructInit
     /tmp/ccUbNYzC.s:525    .text.GPIO_PinLockConfig:0000000000000000 $t
     /tmp/ccUbNYzC.s:531    .text.GPIO_PinLockConfig:0000000000000000 GPIO_PinLockConfig
     /tmp/ccUbNYzC.s:593    .text.GPIO_ReadInputDataBit:0000000000000000 $t
     /tmp/ccUbNYzC.s:599    .text.GPIO_ReadInputDataBit:0000000000000000 GPIO_ReadInputDataBit
     /tmp/ccUbNYzC.s:654    .text.GPIO_ReadInputData:0000000000000000 $t
     /tmp/ccUbNYzC.s:660    .text.GPIO_ReadInputData:0000000000000000 GPIO_ReadInputData
     /tmp/ccUbNYzC.s:695    .text.GPIO_ReadOutputDataBit:0000000000000000 $t
     /tmp/ccUbNYzC.s:701    .text.GPIO_ReadOutputDataBit:0000000000000000 GPIO_ReadOutputDataBit
     /tmp/ccUbNYzC.s:756    .text.GPIO_ReadOutputData:0000000000000000 $t
     /tmp/ccUbNYzC.s:762    .text.GPIO_ReadOutputData:0000000000000000 GPIO_ReadOutputData
     /tmp/ccUbNYzC.s:797    .text.GPIO_SetBits:0000000000000000 $t
     /tmp/ccUbNYzC.s:803    .text.GPIO_SetBits:0000000000000000 GPIO_SetBits
     /tmp/ccUbNYzC.s:839    .text.GPIO_ResetBits:0000000000000000 $t
     /tmp/ccUbNYzC.s:845    .text.GPIO_ResetBits:0000000000000000 GPIO_ResetBits
     /tmp/ccUbNYzC.s:884    .text.GPIO_WriteBit:0000000000000000 $t
     /tmp/ccUbNYzC.s:890    .text.GPIO_WriteBit:0000000000000000 GPIO_WriteBit
     /tmp/ccUbNYzC.s:943    .text.GPIO_Write:0000000000000000 $t
     /tmp/ccUbNYzC.s:949    .text.GPIO_Write:0000000000000000 GPIO_Write
     /tmp/ccUbNYzC.s:985    .text.GPIO_ToggleBits:0000000000000000 $t
     /tmp/ccUbNYzC.s:991    .text.GPIO_ToggleBits:0000000000000000 GPIO_ToggleBits
     /tmp/ccUbNYzC.s:1031   .text.GPIO_PinAFConfig:0000000000000000 $t
     /tmp/ccUbNYzC.s:1037   .text.GPIO_PinAFConfig:0000000000000000 GPIO_PinAFConfig

UNDEFINED SYMBOLS
RCC_AHB1PeriphResetCmd
