ARM GAS  /tmp/ccCThe4V.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_dcmi.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Lib/Src/stm32f4xx_dcmi.c"
  20              		.section	.text.DCMI_DeInit,"ax",%progbits
  21              		.align	1
  22              		.global	DCMI_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	DCMI_DeInit:
  28              	.LFB123:
   1:./Lib/Src/stm32f4xx_dcmi.c **** /**
   2:./Lib/Src/stm32f4xx_dcmi.c ****   ******************************************************************************
   3:./Lib/Src/stm32f4xx_dcmi.c ****   * @file    stm32f4xx_dcmi.c
   4:./Lib/Src/stm32f4xx_dcmi.c ****   * @author  MCD Application Team
   5:./Lib/Src/stm32f4xx_dcmi.c ****   * @version V1.8.1
   6:./Lib/Src/stm32f4xx_dcmi.c ****   * @date    27-January-2022
   7:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Lib/Src/stm32f4xx_dcmi.c ****   *          functionalities of the DCMI peripheral:           
   9:./Lib/Src/stm32f4xx_dcmi.c ****   *           + Initialization and Configuration
  10:./Lib/Src/stm32f4xx_dcmi.c ****   *           + Image capture functions  
  11:./Lib/Src/stm32f4xx_dcmi.c ****   *           + Interrupts and flags management
  12:./Lib/Src/stm32f4xx_dcmi.c ****   *
  13:./Lib/Src/stm32f4xx_dcmi.c ****  @verbatim          
  14:./Lib/Src/stm32f4xx_dcmi.c ****  ===============================================================================
  15:./Lib/Src/stm32f4xx_dcmi.c ****                         ##### How to use this driver #####
  16:./Lib/Src/stm32f4xx_dcmi.c ****  ===============================================================================  
  17:./Lib/Src/stm32f4xx_dcmi.c ****     [..]       
  18:./Lib/Src/stm32f4xx_dcmi.c ****       The sequence below describes how to use this driver to capture image
  19:./Lib/Src/stm32f4xx_dcmi.c ****       from a camera module connected to the DCMI Interface.
  20:./Lib/Src/stm32f4xx_dcmi.c ****       This sequence does not take into account the configuration of the  
  21:./Lib/Src/stm32f4xx_dcmi.c ****       camera module, which should be made before to configure and enable
  22:./Lib/Src/stm32f4xx_dcmi.c ****       the DCMI to capture images.
  23:./Lib/Src/stm32f4xx_dcmi.c ****              
  24:./Lib/Src/stm32f4xx_dcmi.c ****       (#) Enable the clock for the DCMI and associated GPIOs using the following 
  25:./Lib/Src/stm32f4xx_dcmi.c ****           functions:
  26:./Lib/Src/stm32f4xx_dcmi.c ****           RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_DCMI, ENABLE);
  27:./Lib/Src/stm32f4xx_dcmi.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  28:./Lib/Src/stm32f4xx_dcmi.c ****   
  29:./Lib/Src/stm32f4xx_dcmi.c ****       (#) DCMI pins configuration 
  30:./Lib/Src/stm32f4xx_dcmi.c ****         (++) Connect the involved DCMI pins to AF13 using the following function 
ARM GAS  /tmp/ccCThe4V.s 			page 2


  31:./Lib/Src/stm32f4xx_dcmi.c ****             GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_DCMI); 
  32:./Lib/Src/stm32f4xx_dcmi.c ****         (++) Configure these DCMI pins in alternate function mode by calling 
  33:./Lib/Src/stm32f4xx_dcmi.c ****             the function GPIO_Init();
  34:./Lib/Src/stm32f4xx_dcmi.c ****       
  35:./Lib/Src/stm32f4xx_dcmi.c ****       (#) Declare a DCMI_InitTypeDef structure, for example:
  36:./Lib/Src/stm32f4xx_dcmi.c ****           DCMI_InitTypeDef  DCMI_InitStructure;
  37:./Lib/Src/stm32f4xx_dcmi.c ****           and fill the DCMI_InitStructure variable with the allowed values
  38:./Lib/Src/stm32f4xx_dcmi.c ****           of the structure member.
  39:./Lib/Src/stm32f4xx_dcmi.c ****     
  40:./Lib/Src/stm32f4xx_dcmi.c ****       (#) Initialize the DCMI interface by calling the function
  41:./Lib/Src/stm32f4xx_dcmi.c ****           DCMI_Init(&DCMI_InitStructure); 
  42:./Lib/Src/stm32f4xx_dcmi.c ****     
  43:./Lib/Src/stm32f4xx_dcmi.c ****       (#) Configure the DMA2_Stream1 channel1 to transfer Data from DCMI DR
  44:./Lib/Src/stm32f4xx_dcmi.c ****           register to the destination memory buffer.
  45:./Lib/Src/stm32f4xx_dcmi.c ****     
  46:./Lib/Src/stm32f4xx_dcmi.c ****       (#) Enable DCMI interface using the function
  47:./Lib/Src/stm32f4xx_dcmi.c ****           DCMI_Cmd(ENABLE);
  48:./Lib/Src/stm32f4xx_dcmi.c ****                    
  49:./Lib/Src/stm32f4xx_dcmi.c ****       (#) Start the image capture using the function
  50:./Lib/Src/stm32f4xx_dcmi.c ****           DCMI_CaptureCmd(ENABLE);
  51:./Lib/Src/stm32f4xx_dcmi.c ****                    
  52:./Lib/Src/stm32f4xx_dcmi.c ****       (#) At this stage the DCMI interface waits for the first start of frame,
  53:./Lib/Src/stm32f4xx_dcmi.c ****           then a DMA request is generated continuously/once (depending on the
  54:./Lib/Src/stm32f4xx_dcmi.c ****           mode used, Continuous/Snapshot) to transfer the received data into
  55:./Lib/Src/stm32f4xx_dcmi.c ****           the destination memory. 
  56:./Lib/Src/stm32f4xx_dcmi.c ****      
  57:./Lib/Src/stm32f4xx_dcmi.c ****       -@-  If you need to capture only a rectangular window from the received
  58:./Lib/Src/stm32f4xx_dcmi.c ****            image, you have to use the DCMI_CROPConfig() function to configure 
  59:./Lib/Src/stm32f4xx_dcmi.c ****            the coordinates and size of the window to be captured, then enable 
  60:./Lib/Src/stm32f4xx_dcmi.c ****            the Crop feature using DCMI_CROPCmd(ENABLE);  
  61:./Lib/Src/stm32f4xx_dcmi.c ****            In this case, the Crop configuration should be made before to enable
  62:./Lib/Src/stm32f4xx_dcmi.c ****            and start the DCMI interface. 
  63:./Lib/Src/stm32f4xx_dcmi.c **** 
  64:./Lib/Src/stm32f4xx_dcmi.c ****  @endverbatim     
  65:./Lib/Src/stm32f4xx_dcmi.c ****   ******************************************************************************
  66:./Lib/Src/stm32f4xx_dcmi.c ****   * @attention
  67:./Lib/Src/stm32f4xx_dcmi.c ****   *
  68:./Lib/Src/stm32f4xx_dcmi.c ****   * Copyright (c) 2016 STMicroelectronics.
  69:./Lib/Src/stm32f4xx_dcmi.c ****   * All rights reserved.
  70:./Lib/Src/stm32f4xx_dcmi.c ****   *
  71:./Lib/Src/stm32f4xx_dcmi.c ****   * This software is licensed under terms that can be found in the LICENSE file
  72:./Lib/Src/stm32f4xx_dcmi.c ****   * in the root directory of this software component.
  73:./Lib/Src/stm32f4xx_dcmi.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  74:./Lib/Src/stm32f4xx_dcmi.c ****   *
  75:./Lib/Src/stm32f4xx_dcmi.c ****   ******************************************************************************
  76:./Lib/Src/stm32f4xx_dcmi.c ****   */
  77:./Lib/Src/stm32f4xx_dcmi.c **** 
  78:./Lib/Src/stm32f4xx_dcmi.c **** /* Includes ------------------------------------------------------------------*/
  79:./Lib/Src/stm32f4xx_dcmi.c **** #include "stm32f4xx_dcmi.h"
  80:./Lib/Src/stm32f4xx_dcmi.c **** #include "stm32f4xx_rcc.h"
  81:./Lib/Src/stm32f4xx_dcmi.c **** 
  82:./Lib/Src/stm32f4xx_dcmi.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  83:./Lib/Src/stm32f4xx_dcmi.c ****   * @{
  84:./Lib/Src/stm32f4xx_dcmi.c ****   */
  85:./Lib/Src/stm32f4xx_dcmi.c **** 
  86:./Lib/Src/stm32f4xx_dcmi.c **** /** @defgroup DCMI 
  87:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief DCMI driver modules
ARM GAS  /tmp/ccCThe4V.s 			page 3


  88:./Lib/Src/stm32f4xx_dcmi.c ****   * @{
  89:./Lib/Src/stm32f4xx_dcmi.c ****   */ 
  90:./Lib/Src/stm32f4xx_dcmi.c **** 
  91:./Lib/Src/stm32f4xx_dcmi.c **** /* Private typedef -----------------------------------------------------------*/
  92:./Lib/Src/stm32f4xx_dcmi.c **** /* Private define ------------------------------------------------------------*/
  93:./Lib/Src/stm32f4xx_dcmi.c **** /* Private macro -------------------------------------------------------------*/
  94:./Lib/Src/stm32f4xx_dcmi.c **** /* Private variables ---------------------------------------------------------*/
  95:./Lib/Src/stm32f4xx_dcmi.c **** /* Private function prototypes -----------------------------------------------*/
  96:./Lib/Src/stm32f4xx_dcmi.c **** /* Private functions ---------------------------------------------------------*/
  97:./Lib/Src/stm32f4xx_dcmi.c **** 
  98:./Lib/Src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Private_Functions
  99:./Lib/Src/stm32f4xx_dcmi.c ****   * @{
 100:./Lib/Src/stm32f4xx_dcmi.c ****   */ 
 101:./Lib/Src/stm32f4xx_dcmi.c **** 
 102:./Lib/Src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Group1 Initialization and Configuration functions
 103:./Lib/Src/stm32f4xx_dcmi.c ****  *  @brief   Initialization and Configuration functions 
 104:./Lib/Src/stm32f4xx_dcmi.c ****  *
 105:./Lib/Src/stm32f4xx_dcmi.c **** @verbatim   
 106:./Lib/Src/stm32f4xx_dcmi.c ****  ===============================================================================
 107:./Lib/Src/stm32f4xx_dcmi.c ****               ##### Initialization and Configuration functions #####
 108:./Lib/Src/stm32f4xx_dcmi.c ****  ===============================================================================  
 109:./Lib/Src/stm32f4xx_dcmi.c **** 
 110:./Lib/Src/stm32f4xx_dcmi.c **** @endverbatim
 111:./Lib/Src/stm32f4xx_dcmi.c ****   * @{
 112:./Lib/Src/stm32f4xx_dcmi.c ****   */
 113:./Lib/Src/stm32f4xx_dcmi.c **** 
 114:./Lib/Src/stm32f4xx_dcmi.c **** /**
 115:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Deinitializes the DCMI registers to their default reset values.
 116:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  None
 117:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval None
 118:./Lib/Src/stm32f4xx_dcmi.c ****   */
 119:./Lib/Src/stm32f4xx_dcmi.c **** void DCMI_DeInit(void)
 120:./Lib/Src/stm32f4xx_dcmi.c **** {
  29              		.loc 1 120 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
 121:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->CR = 0x0;
  39              		.loc 1 121 7
  40 0004 0C4B     		ldr	r3, .L2
  41              		.loc 1 121 12
  42 0006 0022     		movs	r2, #0
  43 0008 1A60     		str	r2, [r3]
 122:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->IER = 0x0;
  44              		.loc 1 122 7
  45 000a 0B4B     		ldr	r3, .L2
  46              		.loc 1 122 13
  47 000c 0022     		movs	r2, #0
  48 000e DA60     		str	r2, [r3, #12]
 123:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->ICR = 0x1F;
  49              		.loc 1 123 7
ARM GAS  /tmp/ccCThe4V.s 			page 4


  50 0010 094B     		ldr	r3, .L2
  51              		.loc 1 123 13
  52 0012 1F22     		movs	r2, #31
  53 0014 5A61     		str	r2, [r3, #20]
 124:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->ESCR = 0x0;
  54              		.loc 1 124 7
  55 0016 084B     		ldr	r3, .L2
  56              		.loc 1 124 14
  57 0018 0022     		movs	r2, #0
  58 001a 9A61     		str	r2, [r3, #24]
 125:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->ESUR = 0x0;
  59              		.loc 1 125 7
  60 001c 064B     		ldr	r3, .L2
  61              		.loc 1 125 14
  62 001e 0022     		movs	r2, #0
  63 0020 DA61     		str	r2, [r3, #28]
 126:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->CWSTRTR = 0x0;
  64              		.loc 1 126 7
  65 0022 054B     		ldr	r3, .L2
  66              		.loc 1 126 17
  67 0024 0022     		movs	r2, #0
  68 0026 1A62     		str	r2, [r3, #32]
 127:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->CWSIZER = 0x0;
  69              		.loc 1 127 7
  70 0028 034B     		ldr	r3, .L2
  71              		.loc 1 127 17
  72 002a 0022     		movs	r2, #0
  73 002c 5A62     		str	r2, [r3, #36]
 128:./Lib/Src/stm32f4xx_dcmi.c **** }
  74              		.loc 1 128 1
  75 002e 00BF     		nop
  76 0030 BD46     		mov	sp, r7
  77              		.cfi_def_cfa_register 13
  78              		@ sp needed
  79 0032 5DF8047B 		ldr	r7, [sp], #4
  80              		.cfi_restore 7
  81              		.cfi_def_cfa_offset 0
  82 0036 7047     		bx	lr
  83              	.L3:
  84              		.align	2
  85              	.L2:
  86 0038 00000550 		.word	1342504960
  87              		.cfi_endproc
  88              	.LFE123:
  90              		.section	.text.DCMI_Init,"ax",%progbits
  91              		.align	1
  92              		.global	DCMI_Init
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	DCMI_Init:
  98              	.LFB124:
 129:./Lib/Src/stm32f4xx_dcmi.c **** 
 130:./Lib/Src/stm32f4xx_dcmi.c **** /**
 131:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Initializes the DCMI according to the specified parameters in the DCMI_InitStruct.
 132:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  DCMI_InitStruct: pointer to a DCMI_InitTypeDef structure that contains 
 133:./Lib/Src/stm32f4xx_dcmi.c ****   *         the configuration information for the DCMI.
ARM GAS  /tmp/ccCThe4V.s 			page 5


 134:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval None
 135:./Lib/Src/stm32f4xx_dcmi.c ****   */
 136:./Lib/Src/stm32f4xx_dcmi.c **** void DCMI_Init(DCMI_InitTypeDef* DCMI_InitStruct)
 137:./Lib/Src/stm32f4xx_dcmi.c **** {
  99              		.loc 1 137 1
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 16
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104 0000 80B4     		push	{r7}
 105              		.cfi_def_cfa_offset 4
 106              		.cfi_offset 7, -4
 107 0002 85B0     		sub	sp, sp, #20
 108              		.cfi_def_cfa_offset 24
 109 0004 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
 111 0006 7860     		str	r0, [r7, #4]
 138:./Lib/Src/stm32f4xx_dcmi.c ****   uint32_t temp = 0x0;
 112              		.loc 1 138 12
 113 0008 0023     		movs	r3, #0
 114 000a FB60     		str	r3, [r7, #12]
 139:./Lib/Src/stm32f4xx_dcmi.c ****   
 140:./Lib/Src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 141:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CAPTURE_MODE(DCMI_InitStruct->DCMI_CaptureMode));
 142:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_SYNCHRO(DCMI_InitStruct->DCMI_SynchroMode));
 143:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_PCKPOLARITY(DCMI_InitStruct->DCMI_PCKPolarity));
 144:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_VSPOLARITY(DCMI_InitStruct->DCMI_VSPolarity));
 145:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_HSPOLARITY(DCMI_InitStruct->DCMI_HSPolarity));
 146:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CAPTURE_RATE(DCMI_InitStruct->DCMI_CaptureRate));
 147:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_EXTENDED_DATA(DCMI_InitStruct->DCMI_ExtendedDataMode));
 148:./Lib/Src/stm32f4xx_dcmi.c **** 
 149:./Lib/Src/stm32f4xx_dcmi.c ****   /* The DCMI configuration registers should be programmed correctly before 
 150:./Lib/Src/stm32f4xx_dcmi.c ****   enabling the CR_ENABLE Bit and the CR_CAPTURE Bit */
 151:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->CR &= ~(DCMI_CR_ENABLE | DCMI_CR_CAPTURE);
 115              		.loc 1 151 7
 116 000c 1B4B     		ldr	r3, .L5
 117 000e 1B68     		ldr	r3, [r3]
 118 0010 1A4A     		ldr	r2, .L5
 119              		.loc 1 151 12
 120 0012 23F48043 		bic	r3, r3, #16384
 121 0016 23F00103 		bic	r3, r3, #1
 122 001a 1360     		str	r3, [r2]
 152:./Lib/Src/stm32f4xx_dcmi.c ****    
 153:./Lib/Src/stm32f4xx_dcmi.c ****   /* Reset the old DCMI configuration */
 154:./Lib/Src/stm32f4xx_dcmi.c ****   temp = DCMI->CR;
 123              		.loc 1 154 14
 124 001c 174B     		ldr	r3, .L5
 125              		.loc 1 154 8
 126 001e 1B68     		ldr	r3, [r3]
 127 0020 FB60     		str	r3, [r7, #12]
 155:./Lib/Src/stm32f4xx_dcmi.c ****   
 156:./Lib/Src/stm32f4xx_dcmi.c ****   temp &= ~((uint32_t)DCMI_CR_CM     | DCMI_CR_ESS   | DCMI_CR_PCKPOL |
 128              		.loc 1 156 8
 129 0022 FB68     		ldr	r3, [r7, #12]
 130 0024 23F47F63 		bic	r3, r3, #4080
 131 0028 23F00203 		bic	r3, r3, #2
 132 002c FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccCThe4V.s 			page 6


 157:./Lib/Src/stm32f4xx_dcmi.c ****                       DCMI_CR_HSPOL  | DCMI_CR_VSPOL | DCMI_CR_FCRC_0 | 
 158:./Lib/Src/stm32f4xx_dcmi.c ****                       DCMI_CR_FCRC_1 | DCMI_CR_EDM_0 | DCMI_CR_EDM_1); 
 159:./Lib/Src/stm32f4xx_dcmi.c ****                   
 160:./Lib/Src/stm32f4xx_dcmi.c ****   /* Sets the new configuration of the DCMI peripheral */
 161:./Lib/Src/stm32f4xx_dcmi.c ****   temp |= ((uint32_t)DCMI_InitStruct->DCMI_CaptureMode |
 133              		.loc 1 161 37
 134 002e 7B68     		ldr	r3, [r7, #4]
 135 0030 1A88     		ldrh	r2, [r3]
 162:./Lib/Src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_SynchroMode |
 136              		.loc 1 162 37
 137 0032 7B68     		ldr	r3, [r7, #4]
 138 0034 5B88     		ldrh	r3, [r3, #2]
 163:./Lib/Src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_PCKPolarity |
 164:./Lib/Src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_VSPolarity |
 165:./Lib/Src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_HSPolarity |
 166:./Lib/Src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_CaptureRate |
 139              		.loc 1 166 56
 140 0036 1343     		orrs	r3, r3, r2
 141 0038 9AB2     		uxth	r2, r3
 163:./Lib/Src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_PCKPolarity |
 142              		.loc 1 163 37
 143 003a 7B68     		ldr	r3, [r7, #4]
 144 003c 9B88     		ldrh	r3, [r3, #4]
 145              		.loc 1 166 56
 146 003e 1343     		orrs	r3, r3, r2
 147 0040 9AB2     		uxth	r2, r3
 164:./Lib/Src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_HSPolarity |
 148              		.loc 1 164 37
 149 0042 7B68     		ldr	r3, [r7, #4]
 150 0044 DB88     		ldrh	r3, [r3, #6]
 151              		.loc 1 166 56
 152 0046 1343     		orrs	r3, r3, r2
 153 0048 9AB2     		uxth	r2, r3
 165:./Lib/Src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_CaptureRate |
 154              		.loc 1 165 37
 155 004a 7B68     		ldr	r3, [r7, #4]
 156 004c 1B89     		ldrh	r3, [r3, #8]
 157              		.loc 1 166 56
 158 004e 1343     		orrs	r3, r3, r2
 159 0050 9AB2     		uxth	r2, r3
 160              		.loc 1 166 37
 161 0052 7B68     		ldr	r3, [r7, #4]
 162 0054 5B89     		ldrh	r3, [r3, #10]
 163              		.loc 1 166 56
 164 0056 1343     		orrs	r3, r3, r2
 165 0058 9AB2     		uxth	r2, r3
 167:./Lib/Src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_ExtendedDataMode);
 166              		.loc 1 167 37
 167 005a 7B68     		ldr	r3, [r7, #4]
 168 005c 9B89     		ldrh	r3, [r3, #12]
 166:./Lib/Src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_ExtendedDataMode);
 169              		.loc 1 166 56
 170 005e 1343     		orrs	r3, r3, r2
 171 0060 9BB2     		uxth	r3, r3
 172 0062 1A46     		mov	r2, r3
 161:./Lib/Src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_SynchroMode |
 173              		.loc 1 161 8
ARM GAS  /tmp/ccCThe4V.s 			page 7


 174 0064 FB68     		ldr	r3, [r7, #12]
 175 0066 1343     		orrs	r3, r3, r2
 176 0068 FB60     		str	r3, [r7, #12]
 168:./Lib/Src/stm32f4xx_dcmi.c **** 
 169:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->CR = temp;                              
 177              		.loc 1 169 7
 178 006a 044A     		ldr	r2, .L5
 179              		.loc 1 169 12
 180 006c FB68     		ldr	r3, [r7, #12]
 181 006e 1360     		str	r3, [r2]
 170:./Lib/Src/stm32f4xx_dcmi.c **** }
 182              		.loc 1 170 1
 183 0070 00BF     		nop
 184 0072 1437     		adds	r7, r7, #20
 185              		.cfi_def_cfa_offset 4
 186 0074 BD46     		mov	sp, r7
 187              		.cfi_def_cfa_register 13
 188              		@ sp needed
 189 0076 5DF8047B 		ldr	r7, [sp], #4
 190              		.cfi_restore 7
 191              		.cfi_def_cfa_offset 0
 192 007a 7047     		bx	lr
 193              	.L6:
 194              		.align	2
 195              	.L5:
 196 007c 00000550 		.word	1342504960
 197              		.cfi_endproc
 198              	.LFE124:
 200              		.section	.text.DCMI_StructInit,"ax",%progbits
 201              		.align	1
 202              		.global	DCMI_StructInit
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 207              	DCMI_StructInit:
 208              	.LFB125:
 171:./Lib/Src/stm32f4xx_dcmi.c **** 
 172:./Lib/Src/stm32f4xx_dcmi.c **** /**
 173:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Fills each DCMI_InitStruct member with its default value.
 174:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  DCMI_InitStruct : pointer to a DCMI_InitTypeDef structure which will
 175:./Lib/Src/stm32f4xx_dcmi.c ****   *         be initialized.
 176:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval None
 177:./Lib/Src/stm32f4xx_dcmi.c ****   */
 178:./Lib/Src/stm32f4xx_dcmi.c **** void DCMI_StructInit(DCMI_InitTypeDef* DCMI_InitStruct)
 179:./Lib/Src/stm32f4xx_dcmi.c **** {
 209              		.loc 1 179 1
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 8
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214 0000 80B4     		push	{r7}
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 7, -4
 217 0002 83B0     		sub	sp, sp, #12
 218              		.cfi_def_cfa_offset 16
 219 0004 00AF     		add	r7, sp, #0
 220              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccCThe4V.s 			page 8


 221 0006 7860     		str	r0, [r7, #4]
 180:./Lib/Src/stm32f4xx_dcmi.c ****   /* Set the default configuration */
 181:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_CaptureMode = DCMI_CaptureMode_Continuous;
 222              		.loc 1 181 37
 223 0008 7B68     		ldr	r3, [r7, #4]
 224 000a 0022     		movs	r2, #0
 225 000c 1A80     		strh	r2, [r3]	@ movhi
 182:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_SynchroMode = DCMI_SynchroMode_Hardware;
 226              		.loc 1 182 37
 227 000e 7B68     		ldr	r3, [r7, #4]
 228 0010 0022     		movs	r2, #0
 229 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 183:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_PCKPolarity = DCMI_PCKPolarity_Falling;
 230              		.loc 1 183 37
 231 0014 7B68     		ldr	r3, [r7, #4]
 232 0016 0022     		movs	r2, #0
 233 0018 9A80     		strh	r2, [r3, #4]	@ movhi
 184:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_VSPolarity = DCMI_VSPolarity_Low;
 234              		.loc 1 184 36
 235 001a 7B68     		ldr	r3, [r7, #4]
 236 001c 0022     		movs	r2, #0
 237 001e DA80     		strh	r2, [r3, #6]	@ movhi
 185:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_HSPolarity = DCMI_HSPolarity_Low;
 238              		.loc 1 185 36
 239 0020 7B68     		ldr	r3, [r7, #4]
 240 0022 0022     		movs	r2, #0
 241 0024 1A81     		strh	r2, [r3, #8]	@ movhi
 186:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_CaptureRate = DCMI_CaptureRate_All_Frame;
 242              		.loc 1 186 37
 243 0026 7B68     		ldr	r3, [r7, #4]
 244 0028 0022     		movs	r2, #0
 245 002a 5A81     		strh	r2, [r3, #10]	@ movhi
 187:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_ExtendedDataMode = DCMI_ExtendedDataMode_8b;
 246              		.loc 1 187 42
 247 002c 7B68     		ldr	r3, [r7, #4]
 248 002e 0022     		movs	r2, #0
 249 0030 9A81     		strh	r2, [r3, #12]	@ movhi
 188:./Lib/Src/stm32f4xx_dcmi.c **** }
 250              		.loc 1 188 1
 251 0032 00BF     		nop
 252 0034 0C37     		adds	r7, r7, #12
 253              		.cfi_def_cfa_offset 4
 254 0036 BD46     		mov	sp, r7
 255              		.cfi_def_cfa_register 13
 256              		@ sp needed
 257 0038 5DF8047B 		ldr	r7, [sp], #4
 258              		.cfi_restore 7
 259              		.cfi_def_cfa_offset 0
 260 003c 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE125:
 264              		.section	.text.DCMI_CROPConfig,"ax",%progbits
 265              		.align	1
 266              		.global	DCMI_CROPConfig
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
ARM GAS  /tmp/ccCThe4V.s 			page 9


 271              	DCMI_CROPConfig:
 272              	.LFB126:
 189:./Lib/Src/stm32f4xx_dcmi.c **** 
 190:./Lib/Src/stm32f4xx_dcmi.c **** /**
 191:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Initializes the DCMI peripheral CROP mode according to the specified
 192:./Lib/Src/stm32f4xx_dcmi.c ****   *         parameters in the DCMI_CROPInitStruct.
 193:./Lib/Src/stm32f4xx_dcmi.c ****   * @note   This function should be called before to enable and start the DCMI interface.   
 194:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  DCMI_CROPInitStruct:  pointer to a DCMI_CROPInitTypeDef structure that 
 195:./Lib/Src/stm32f4xx_dcmi.c ****   *         contains the configuration information for the DCMI peripheral CROP mode.
 196:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval None
 197:./Lib/Src/stm32f4xx_dcmi.c ****   */
 198:./Lib/Src/stm32f4xx_dcmi.c **** void DCMI_CROPConfig(DCMI_CROPInitTypeDef* DCMI_CROPInitStruct)
 199:./Lib/Src/stm32f4xx_dcmi.c **** {  
 273              		.loc 1 199 1
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 8
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 278 0000 80B4     		push	{r7}
 279              		.cfi_def_cfa_offset 4
 280              		.cfi_offset 7, -4
 281 0002 83B0     		sub	sp, sp, #12
 282              		.cfi_def_cfa_offset 16
 283 0004 00AF     		add	r7, sp, #0
 284              		.cfi_def_cfa_register 7
 285 0006 7860     		str	r0, [r7, #4]
 200:./Lib/Src/stm32f4xx_dcmi.c ****   /* Sets the CROP window coordinates */
 201:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->CWSTRTR = (uint32_t)((uint32_t)DCMI_CROPInitStruct->DCMI_HorizontalOffsetCount |
 286              		.loc 1 201 59
 287 0008 7B68     		ldr	r3, [r7, #4]
 288 000a 5B88     		ldrh	r3, [r3, #2]
 289              		.loc 1 201 30
 290 000c 1946     		mov	r1, r3
 202:./Lib/Src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalStartLine << 16));
 291              		.loc 1 202 49
 292 000e 7B68     		ldr	r3, [r7, #4]
 293 0010 1B88     		ldrh	r3, [r3]
 294              		.loc 1 202 74
 295 0012 1B04     		lsls	r3, r3, #16
 201:./Lib/Src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalStartLine << 16));
 296              		.loc 1 201 7
 297 0014 084A     		ldr	r2, .L9
 201:./Lib/Src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalStartLine << 16));
 298              		.loc 1 201 19
 299 0016 0B43     		orrs	r3, r3, r1
 201:./Lib/Src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalStartLine << 16));
 300              		.loc 1 201 17
 301 0018 1362     		str	r3, [r2, #32]
 203:./Lib/Src/stm32f4xx_dcmi.c **** 
 204:./Lib/Src/stm32f4xx_dcmi.c ****   /* Sets the CROP window size */
 205:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->CWSIZER = (uint32_t)(DCMI_CROPInitStruct->DCMI_CaptureCount |
 302              		.loc 1 205 49
 303 001a 7B68     		ldr	r3, [r7, #4]
 304 001c DB88     		ldrh	r3, [r3, #6]
 305 001e 1946     		mov	r1, r3
 206:./Lib/Src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
 306              		.loc 1 206 49
ARM GAS  /tmp/ccCThe4V.s 			page 10


 307 0020 7B68     		ldr	r3, [r7, #4]
 308 0022 9B88     		ldrh	r3, [r3, #4]
 309              		.loc 1 206 74
 310 0024 1B04     		lsls	r3, r3, #16
 205:./Lib/Src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
 311              		.loc 1 205 7
 312 0026 044A     		ldr	r2, .L9
 205:./Lib/Src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
 313              		.loc 1 205 19
 314 0028 0B43     		orrs	r3, r3, r1
 205:./Lib/Src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
 315              		.loc 1 205 17
 316 002a 5362     		str	r3, [r2, #36]
 207:./Lib/Src/stm32f4xx_dcmi.c **** }
 317              		.loc 1 207 1
 318 002c 00BF     		nop
 319 002e 0C37     		adds	r7, r7, #12
 320              		.cfi_def_cfa_offset 4
 321 0030 BD46     		mov	sp, r7
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 0032 5DF8047B 		ldr	r7, [sp], #4
 325              		.cfi_restore 7
 326              		.cfi_def_cfa_offset 0
 327 0036 7047     		bx	lr
 328              	.L10:
 329              		.align	2
 330              	.L9:
 331 0038 00000550 		.word	1342504960
 332              		.cfi_endproc
 333              	.LFE126:
 335              		.section	.text.DCMI_CROPCmd,"ax",%progbits
 336              		.align	1
 337              		.global	DCMI_CROPCmd
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	DCMI_CROPCmd:
 343              	.LFB127:
 208:./Lib/Src/stm32f4xx_dcmi.c **** 
 209:./Lib/Src/stm32f4xx_dcmi.c **** /**
 210:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI Crop feature.
 211:./Lib/Src/stm32f4xx_dcmi.c ****   * @note   This function should be called before to enable and start the DCMI interface.
 212:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI Crop feature. 
 213:./Lib/Src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 214:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval None
 215:./Lib/Src/stm32f4xx_dcmi.c ****   */
 216:./Lib/Src/stm32f4xx_dcmi.c **** void DCMI_CROPCmd(FunctionalState NewState)
 217:./Lib/Src/stm32f4xx_dcmi.c **** {
 344              		.loc 1 217 1
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 8
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349 0000 80B4     		push	{r7}
 350              		.cfi_def_cfa_offset 4
 351              		.cfi_offset 7, -4
ARM GAS  /tmp/ccCThe4V.s 			page 11


 352 0002 83B0     		sub	sp, sp, #12
 353              		.cfi_def_cfa_offset 16
 354 0004 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 356 0006 0346     		mov	r3, r0
 357 0008 FB71     		strb	r3, [r7, #7]
 218:./Lib/Src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 219:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 220:./Lib/Src/stm32f4xx_dcmi.c ****     
 221:./Lib/Src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 358              		.loc 1 221 6
 359 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 360 000c 002B     		cmp	r3, #0
 361 000e 06D0     		beq	.L12
 222:./Lib/Src/stm32f4xx_dcmi.c ****   {
 223:./Lib/Src/stm32f4xx_dcmi.c ****     /* Enable the DCMI Crop feature */
 224:./Lib/Src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_CROP;
 362              		.loc 1 224 9
 363 0010 094B     		ldr	r3, .L15
 364 0012 1B68     		ldr	r3, [r3]
 365 0014 084A     		ldr	r2, .L15
 366              		.loc 1 224 14
 367 0016 43F00403 		orr	r3, r3, #4
 368 001a 1360     		str	r3, [r2]
 225:./Lib/Src/stm32f4xx_dcmi.c ****   }
 226:./Lib/Src/stm32f4xx_dcmi.c ****   else
 227:./Lib/Src/stm32f4xx_dcmi.c ****   {
 228:./Lib/Src/stm32f4xx_dcmi.c ****     /* Disable the DCMI Crop feature */
 229:./Lib/Src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_CROP;
 230:./Lib/Src/stm32f4xx_dcmi.c ****   }
 231:./Lib/Src/stm32f4xx_dcmi.c **** }
 369              		.loc 1 231 1
 370 001c 05E0     		b	.L14
 371              	.L12:
 229:./Lib/Src/stm32f4xx_dcmi.c ****   }
 372              		.loc 1 229 9
 373 001e 064B     		ldr	r3, .L15
 374 0020 1B68     		ldr	r3, [r3]
 375 0022 054A     		ldr	r2, .L15
 229:./Lib/Src/stm32f4xx_dcmi.c ****   }
 376              		.loc 1 229 14
 377 0024 23F00403 		bic	r3, r3, #4
 378 0028 1360     		str	r3, [r2]
 379              	.L14:
 380              		.loc 1 231 1
 381 002a 00BF     		nop
 382 002c 0C37     		adds	r7, r7, #12
 383              		.cfi_def_cfa_offset 4
 384 002e BD46     		mov	sp, r7
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
 387 0030 5DF8047B 		ldr	r7, [sp], #4
 388              		.cfi_restore 7
 389              		.cfi_def_cfa_offset 0
 390 0034 7047     		bx	lr
 391              	.L16:
 392 0036 00BF     		.align	2
ARM GAS  /tmp/ccCThe4V.s 			page 12


 393              	.L15:
 394 0038 00000550 		.word	1342504960
 395              		.cfi_endproc
 396              	.LFE127:
 398              		.section	.text.DCMI_SetEmbeddedSynchroCodes,"ax",%progbits
 399              		.align	1
 400              		.global	DCMI_SetEmbeddedSynchroCodes
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 405              	DCMI_SetEmbeddedSynchroCodes:
 406              	.LFB128:
 232:./Lib/Src/stm32f4xx_dcmi.c **** 
 233:./Lib/Src/stm32f4xx_dcmi.c **** /**
 234:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Sets the embedded synchronization codes
 235:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  DCMI_CodesInitTypeDef: pointer to a DCMI_CodesInitTypeDef structure that
 236:./Lib/Src/stm32f4xx_dcmi.c ****   *         contains the embedded synchronization codes for the DCMI peripheral.
 237:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval None
 238:./Lib/Src/stm32f4xx_dcmi.c ****   */
 239:./Lib/Src/stm32f4xx_dcmi.c **** void DCMI_SetEmbeddedSynchroCodes(DCMI_CodesInitTypeDef* DCMI_CodesInitStruct)
 240:./Lib/Src/stm32f4xx_dcmi.c **** {
 407              		.loc 1 240 1
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 8
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412 0000 80B4     		push	{r7}
 413              		.cfi_def_cfa_offset 4
 414              		.cfi_offset 7, -4
 415 0002 83B0     		sub	sp, sp, #12
 416              		.cfi_def_cfa_offset 16
 417 0004 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 419 0006 7860     		str	r0, [r7, #4]
 241:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->ESCR = (uint32_t)(DCMI_CodesInitStruct->DCMI_FrameStartCode |
 420              		.loc 1 241 47
 421 0008 7B68     		ldr	r3, [r7, #4]
 422 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 423 000c 1A46     		mov	r2, r3
 242:./Lib/Src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 424              		.loc 1 242 58
 425 000e 7B68     		ldr	r3, [r7, #4]
 426 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 427              		.loc 1 242 79
 428 0012 1B02     		lsls	r3, r3, #8
 241:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->ESCR = (uint32_t)(DCMI_CodesInitStruct->DCMI_FrameStartCode |
 429              		.loc 1 241 69
 430 0014 1A43     		orrs	r2, r2, r3
 243:./Lib/Src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineEndCode << 16)|
 431              		.loc 1 243 58
 432 0016 7B68     		ldr	r3, [r7, #4]
 433 0018 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 434              		.loc 1 243 77
 435 001a 1B04     		lsls	r3, r3, #16
 242:./Lib/Src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 436              		.loc 1 242 84
 437 001c 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/ccCThe4V.s 			page 13


 244:./Lib/Src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_FrameEndCode << 24));
 438              		.loc 1 244 58
 439 001e 7B68     		ldr	r3, [r7, #4]
 440 0020 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 441              		.loc 1 244 78
 442 0022 1B06     		lsls	r3, r3, #24
 241:./Lib/Src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 443              		.loc 1 241 7
 444 0024 0449     		ldr	r1, .L18
 241:./Lib/Src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 445              		.loc 1 241 16
 446 0026 1343     		orrs	r3, r3, r2
 241:./Lib/Src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 447              		.loc 1 241 14
 448 0028 8B61     		str	r3, [r1, #24]
 245:./Lib/Src/stm32f4xx_dcmi.c **** }
 449              		.loc 1 245 1
 450 002a 00BF     		nop
 451 002c 0C37     		adds	r7, r7, #12
 452              		.cfi_def_cfa_offset 4
 453 002e BD46     		mov	sp, r7
 454              		.cfi_def_cfa_register 13
 455              		@ sp needed
 456 0030 5DF8047B 		ldr	r7, [sp], #4
 457              		.cfi_restore 7
 458              		.cfi_def_cfa_offset 0
 459 0034 7047     		bx	lr
 460              	.L19:
 461 0036 00BF     		.align	2
 462              	.L18:
 463 0038 00000550 		.word	1342504960
 464              		.cfi_endproc
 465              	.LFE128:
 467              		.section	.text.DCMI_JPEGCmd,"ax",%progbits
 468              		.align	1
 469              		.global	DCMI_JPEGCmd
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 474              	DCMI_JPEGCmd:
 475              	.LFB129:
 246:./Lib/Src/stm32f4xx_dcmi.c **** 
 247:./Lib/Src/stm32f4xx_dcmi.c **** /**
 248:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI JPEG format.
 249:./Lib/Src/stm32f4xx_dcmi.c ****   * @note   The Crop and Embedded Synchronization features cannot be used in this mode.  
 250:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI JPEG format. 
 251:./Lib/Src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 252:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval None
 253:./Lib/Src/stm32f4xx_dcmi.c ****   */
 254:./Lib/Src/stm32f4xx_dcmi.c **** void DCMI_JPEGCmd(FunctionalState NewState)
 255:./Lib/Src/stm32f4xx_dcmi.c **** {
 476              		.loc 1 255 1
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 8
 479              		@ frame_needed = 1, uses_anonymous_args = 0
 480              		@ link register save eliminated.
 481 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccCThe4V.s 			page 14


 482              		.cfi_def_cfa_offset 4
 483              		.cfi_offset 7, -4
 484 0002 83B0     		sub	sp, sp, #12
 485              		.cfi_def_cfa_offset 16
 486 0004 00AF     		add	r7, sp, #0
 487              		.cfi_def_cfa_register 7
 488 0006 0346     		mov	r3, r0
 489 0008 FB71     		strb	r3, [r7, #7]
 256:./Lib/Src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 257:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 258:./Lib/Src/stm32f4xx_dcmi.c ****  
 259:./Lib/Src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 490              		.loc 1 259 6
 491 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 492 000c 002B     		cmp	r3, #0
 493 000e 06D0     		beq	.L21
 260:./Lib/Src/stm32f4xx_dcmi.c ****   {
 261:./Lib/Src/stm32f4xx_dcmi.c ****     /* Enable the DCMI JPEG format */
 262:./Lib/Src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_JPEG;
 494              		.loc 1 262 9
 495 0010 094B     		ldr	r3, .L24
 496 0012 1B68     		ldr	r3, [r3]
 497 0014 084A     		ldr	r2, .L24
 498              		.loc 1 262 14
 499 0016 43F00803 		orr	r3, r3, #8
 500 001a 1360     		str	r3, [r2]
 263:./Lib/Src/stm32f4xx_dcmi.c ****   }
 264:./Lib/Src/stm32f4xx_dcmi.c ****   else
 265:./Lib/Src/stm32f4xx_dcmi.c ****   {
 266:./Lib/Src/stm32f4xx_dcmi.c ****     /* Disable the DCMI JPEG format */
 267:./Lib/Src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_JPEG;
 268:./Lib/Src/stm32f4xx_dcmi.c ****   }
 269:./Lib/Src/stm32f4xx_dcmi.c **** }
 501              		.loc 1 269 1
 502 001c 05E0     		b	.L23
 503              	.L21:
 267:./Lib/Src/stm32f4xx_dcmi.c ****   }
 504              		.loc 1 267 9
 505 001e 064B     		ldr	r3, .L24
 506 0020 1B68     		ldr	r3, [r3]
 507 0022 054A     		ldr	r2, .L24
 267:./Lib/Src/stm32f4xx_dcmi.c ****   }
 508              		.loc 1 267 14
 509 0024 23F00803 		bic	r3, r3, #8
 510 0028 1360     		str	r3, [r2]
 511              	.L23:
 512              		.loc 1 269 1
 513 002a 00BF     		nop
 514 002c 0C37     		adds	r7, r7, #12
 515              		.cfi_def_cfa_offset 4
 516 002e BD46     		mov	sp, r7
 517              		.cfi_def_cfa_register 13
 518              		@ sp needed
 519 0030 5DF8047B 		ldr	r7, [sp], #4
 520              		.cfi_restore 7
 521              		.cfi_def_cfa_offset 0
 522 0034 7047     		bx	lr
ARM GAS  /tmp/ccCThe4V.s 			page 15


 523              	.L25:
 524 0036 00BF     		.align	2
 525              	.L24:
 526 0038 00000550 		.word	1342504960
 527              		.cfi_endproc
 528              	.LFE129:
 530              		.section	.text.DCMI_Cmd,"ax",%progbits
 531              		.align	1
 532              		.global	DCMI_Cmd
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 537              	DCMI_Cmd:
 538              	.LFB130:
 270:./Lib/Src/stm32f4xx_dcmi.c **** /**
 271:./Lib/Src/stm32f4xx_dcmi.c ****   * @}
 272:./Lib/Src/stm32f4xx_dcmi.c ****   */
 273:./Lib/Src/stm32f4xx_dcmi.c **** 
 274:./Lib/Src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Group2 Image capture functions
 275:./Lib/Src/stm32f4xx_dcmi.c ****  *  @brief   Image capture functions
 276:./Lib/Src/stm32f4xx_dcmi.c ****  *
 277:./Lib/Src/stm32f4xx_dcmi.c **** @verbatim   
 278:./Lib/Src/stm32f4xx_dcmi.c ****  ===============================================================================
 279:./Lib/Src/stm32f4xx_dcmi.c ****                     ##### Image capture functions #####
 280:./Lib/Src/stm32f4xx_dcmi.c ****  ===============================================================================  
 281:./Lib/Src/stm32f4xx_dcmi.c **** 
 282:./Lib/Src/stm32f4xx_dcmi.c **** @endverbatim
 283:./Lib/Src/stm32f4xx_dcmi.c ****   * @{
 284:./Lib/Src/stm32f4xx_dcmi.c ****   */
 285:./Lib/Src/stm32f4xx_dcmi.c ****   
 286:./Lib/Src/stm32f4xx_dcmi.c **** /**
 287:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI interface.
 288:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI interface. 
 289:./Lib/Src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 290:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval None
 291:./Lib/Src/stm32f4xx_dcmi.c ****   */
 292:./Lib/Src/stm32f4xx_dcmi.c **** void DCMI_Cmd(FunctionalState NewState)
 293:./Lib/Src/stm32f4xx_dcmi.c **** {
 539              		.loc 1 293 1
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 8
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544 0000 80B4     		push	{r7}
 545              		.cfi_def_cfa_offset 4
 546              		.cfi_offset 7, -4
 547 0002 83B0     		sub	sp, sp, #12
 548              		.cfi_def_cfa_offset 16
 549 0004 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 551 0006 0346     		mov	r3, r0
 552 0008 FB71     		strb	r3, [r7, #7]
 294:./Lib/Src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 295:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 296:./Lib/Src/stm32f4xx_dcmi.c ****   
 297:./Lib/Src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 553              		.loc 1 297 6
ARM GAS  /tmp/ccCThe4V.s 			page 16


 554 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 555 000c 002B     		cmp	r3, #0
 556 000e 06D0     		beq	.L27
 298:./Lib/Src/stm32f4xx_dcmi.c ****   {
 299:./Lib/Src/stm32f4xx_dcmi.c ****     /* Enable the DCMI by setting ENABLE bit */
 300:./Lib/Src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_ENABLE;
 557              		.loc 1 300 9
 558 0010 094B     		ldr	r3, .L30
 559 0012 1B68     		ldr	r3, [r3]
 560 0014 084A     		ldr	r2, .L30
 561              		.loc 1 300 14
 562 0016 43F48043 		orr	r3, r3, #16384
 563 001a 1360     		str	r3, [r2]
 301:./Lib/Src/stm32f4xx_dcmi.c ****   }
 302:./Lib/Src/stm32f4xx_dcmi.c ****   else
 303:./Lib/Src/stm32f4xx_dcmi.c ****   {
 304:./Lib/Src/stm32f4xx_dcmi.c ****     /* Disable the DCMI by clearing ENABLE bit */
 305:./Lib/Src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_ENABLE;
 306:./Lib/Src/stm32f4xx_dcmi.c ****   }
 307:./Lib/Src/stm32f4xx_dcmi.c **** }
 564              		.loc 1 307 1
 565 001c 05E0     		b	.L29
 566              	.L27:
 305:./Lib/Src/stm32f4xx_dcmi.c ****   }
 567              		.loc 1 305 9
 568 001e 064B     		ldr	r3, .L30
 569 0020 1B68     		ldr	r3, [r3]
 570 0022 054A     		ldr	r2, .L30
 305:./Lib/Src/stm32f4xx_dcmi.c ****   }
 571              		.loc 1 305 14
 572 0024 23F48043 		bic	r3, r3, #16384
 573 0028 1360     		str	r3, [r2]
 574              	.L29:
 575              		.loc 1 307 1
 576 002a 00BF     		nop
 577 002c 0C37     		adds	r7, r7, #12
 578              		.cfi_def_cfa_offset 4
 579 002e BD46     		mov	sp, r7
 580              		.cfi_def_cfa_register 13
 581              		@ sp needed
 582 0030 5DF8047B 		ldr	r7, [sp], #4
 583              		.cfi_restore 7
 584              		.cfi_def_cfa_offset 0
 585 0034 7047     		bx	lr
 586              	.L31:
 587 0036 00BF     		.align	2
 588              	.L30:
 589 0038 00000550 		.word	1342504960
 590              		.cfi_endproc
 591              	.LFE130:
 593              		.section	.text.DCMI_CaptureCmd,"ax",%progbits
 594              		.align	1
 595              		.global	DCMI_CaptureCmd
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 600              	DCMI_CaptureCmd:
ARM GAS  /tmp/ccCThe4V.s 			page 17


 601              	.LFB131:
 308:./Lib/Src/stm32f4xx_dcmi.c **** 
 309:./Lib/Src/stm32f4xx_dcmi.c **** /**
 310:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI Capture.
 311:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI capture. 
 312:./Lib/Src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 313:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval None
 314:./Lib/Src/stm32f4xx_dcmi.c ****   */
 315:./Lib/Src/stm32f4xx_dcmi.c **** void DCMI_CaptureCmd(FunctionalState NewState)
 316:./Lib/Src/stm32f4xx_dcmi.c **** {
 602              		.loc 1 316 1
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 8
 605              		@ frame_needed = 1, uses_anonymous_args = 0
 606              		@ link register save eliminated.
 607 0000 80B4     		push	{r7}
 608              		.cfi_def_cfa_offset 4
 609              		.cfi_offset 7, -4
 610 0002 83B0     		sub	sp, sp, #12
 611              		.cfi_def_cfa_offset 16
 612 0004 00AF     		add	r7, sp, #0
 613              		.cfi_def_cfa_register 7
 614 0006 0346     		mov	r3, r0
 615 0008 FB71     		strb	r3, [r7, #7]
 317:./Lib/Src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 318:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 319:./Lib/Src/stm32f4xx_dcmi.c ****     
 320:./Lib/Src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 616              		.loc 1 320 6
 617 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 618 000c 002B     		cmp	r3, #0
 619 000e 06D0     		beq	.L33
 321:./Lib/Src/stm32f4xx_dcmi.c ****   {
 322:./Lib/Src/stm32f4xx_dcmi.c ****     /* Enable the DCMI Capture */
 323:./Lib/Src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_CAPTURE;
 620              		.loc 1 323 9
 621 0010 094B     		ldr	r3, .L36
 622 0012 1B68     		ldr	r3, [r3]
 623 0014 084A     		ldr	r2, .L36
 624              		.loc 1 323 14
 625 0016 43F00103 		orr	r3, r3, #1
 626 001a 1360     		str	r3, [r2]
 324:./Lib/Src/stm32f4xx_dcmi.c ****   }
 325:./Lib/Src/stm32f4xx_dcmi.c ****   else
 326:./Lib/Src/stm32f4xx_dcmi.c ****   {
 327:./Lib/Src/stm32f4xx_dcmi.c ****     /* Disable the DCMI Capture */
 328:./Lib/Src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_CAPTURE;
 329:./Lib/Src/stm32f4xx_dcmi.c ****   }
 330:./Lib/Src/stm32f4xx_dcmi.c **** }
 627              		.loc 1 330 1
 628 001c 05E0     		b	.L35
 629              	.L33:
 328:./Lib/Src/stm32f4xx_dcmi.c ****   }
 630              		.loc 1 328 9
 631 001e 064B     		ldr	r3, .L36
 632 0020 1B68     		ldr	r3, [r3]
 633 0022 054A     		ldr	r2, .L36
ARM GAS  /tmp/ccCThe4V.s 			page 18


 328:./Lib/Src/stm32f4xx_dcmi.c ****   }
 634              		.loc 1 328 14
 635 0024 23F00103 		bic	r3, r3, #1
 636 0028 1360     		str	r3, [r2]
 637              	.L35:
 638              		.loc 1 330 1
 639 002a 00BF     		nop
 640 002c 0C37     		adds	r7, r7, #12
 641              		.cfi_def_cfa_offset 4
 642 002e BD46     		mov	sp, r7
 643              		.cfi_def_cfa_register 13
 644              		@ sp needed
 645 0030 5DF8047B 		ldr	r7, [sp], #4
 646              		.cfi_restore 7
 647              		.cfi_def_cfa_offset 0
 648 0034 7047     		bx	lr
 649              	.L37:
 650 0036 00BF     		.align	2
 651              	.L36:
 652 0038 00000550 		.word	1342504960
 653              		.cfi_endproc
 654              	.LFE131:
 656              		.section	.text.DCMI_ReadData,"ax",%progbits
 657              		.align	1
 658              		.global	DCMI_ReadData
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 663              	DCMI_ReadData:
 664              	.LFB132:
 331:./Lib/Src/stm32f4xx_dcmi.c **** 
 332:./Lib/Src/stm32f4xx_dcmi.c **** /**
 333:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Reads the data stored in the DR register.
 334:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  None 
 335:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval Data register value
 336:./Lib/Src/stm32f4xx_dcmi.c ****   */
 337:./Lib/Src/stm32f4xx_dcmi.c **** uint32_t DCMI_ReadData(void)
 338:./Lib/Src/stm32f4xx_dcmi.c **** {
 665              		.loc 1 338 1
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 1, uses_anonymous_args = 0
 669              		@ link register save eliminated.
 670 0000 80B4     		push	{r7}
 671              		.cfi_def_cfa_offset 4
 672              		.cfi_offset 7, -4
 673 0002 00AF     		add	r7, sp, #0
 674              		.cfi_def_cfa_register 7
 339:./Lib/Src/stm32f4xx_dcmi.c ****   return DCMI->DR;
 675              		.loc 1 339 14
 676 0004 034B     		ldr	r3, .L40
 677 0006 9B6A     		ldr	r3, [r3, #40]
 340:./Lib/Src/stm32f4xx_dcmi.c **** }
 678              		.loc 1 340 1
 679 0008 1846     		mov	r0, r3
 680 000a BD46     		mov	sp, r7
 681              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccCThe4V.s 			page 19


 682              		@ sp needed
 683 000c 5DF8047B 		ldr	r7, [sp], #4
 684              		.cfi_restore 7
 685              		.cfi_def_cfa_offset 0
 686 0010 7047     		bx	lr
 687              	.L41:
 688 0012 00BF     		.align	2
 689              	.L40:
 690 0014 00000550 		.word	1342504960
 691              		.cfi_endproc
 692              	.LFE132:
 694              		.section	.text.DCMI_ITConfig,"ax",%progbits
 695              		.align	1
 696              		.global	DCMI_ITConfig
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 701              	DCMI_ITConfig:
 702              	.LFB133:
 341:./Lib/Src/stm32f4xx_dcmi.c **** /**
 342:./Lib/Src/stm32f4xx_dcmi.c ****   * @}
 343:./Lib/Src/stm32f4xx_dcmi.c ****   */
 344:./Lib/Src/stm32f4xx_dcmi.c **** 
 345:./Lib/Src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Group3 Interrupts and flags management functions
 346:./Lib/Src/stm32f4xx_dcmi.c ****  *  @brief   Interrupts and flags management functions
 347:./Lib/Src/stm32f4xx_dcmi.c ****  *
 348:./Lib/Src/stm32f4xx_dcmi.c **** @verbatim   
 349:./Lib/Src/stm32f4xx_dcmi.c ****  ===============================================================================
 350:./Lib/Src/stm32f4xx_dcmi.c ****              ##### Interrupts and flags management functions #####
 351:./Lib/Src/stm32f4xx_dcmi.c ****  ===============================================================================  
 352:./Lib/Src/stm32f4xx_dcmi.c **** 
 353:./Lib/Src/stm32f4xx_dcmi.c **** @endverbatim
 354:./Lib/Src/stm32f4xx_dcmi.c ****   * @{
 355:./Lib/Src/stm32f4xx_dcmi.c ****   */
 356:./Lib/Src/stm32f4xx_dcmi.c **** 
 357:./Lib/Src/stm32f4xx_dcmi.c **** /**
 358:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI interface interrupts.
 359:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  DCMI_IT: specifies the DCMI interrupt sources to be enabled or disabled. 
 360:./Lib/Src/stm32f4xx_dcmi.c ****   *          This parameter can be any combination of the following values:
 361:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_FRAME: Frame capture complete interrupt mask
 362:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_OVF: Overflow interrupt mask
 363:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_ERR: Synchronization error interrupt mask
 364:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_VSYNC: VSYNC interrupt mask
 365:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_LINE: Line interrupt mask
 366:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the specified DCMI interrupts.
 367:./Lib/Src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 368:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval None
 369:./Lib/Src/stm32f4xx_dcmi.c ****   */
 370:./Lib/Src/stm32f4xx_dcmi.c **** void DCMI_ITConfig(uint16_t DCMI_IT, FunctionalState NewState)
 371:./Lib/Src/stm32f4xx_dcmi.c **** {
 703              		.loc 1 371 1
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 8
 706              		@ frame_needed = 1, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 708 0000 80B4     		push	{r7}
 709              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccCThe4V.s 			page 20


 710              		.cfi_offset 7, -4
 711 0002 83B0     		sub	sp, sp, #12
 712              		.cfi_def_cfa_offset 16
 713 0004 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 715 0006 0346     		mov	r3, r0
 716 0008 0A46     		mov	r2, r1
 717 000a FB80     		strh	r3, [r7, #6]	@ movhi
 718 000c 1346     		mov	r3, r2
 719 000e 7B71     		strb	r3, [r7, #5]
 372:./Lib/Src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 373:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CONFIG_IT(DCMI_IT));
 374:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 375:./Lib/Src/stm32f4xx_dcmi.c ****   
 376:./Lib/Src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 720              		.loc 1 376 6
 721 0010 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 722 0012 002B     		cmp	r3, #0
 723 0014 06D0     		beq	.L43
 377:./Lib/Src/stm32f4xx_dcmi.c ****   {
 378:./Lib/Src/stm32f4xx_dcmi.c ****     /* Enable the Interrupt sources */
 379:./Lib/Src/stm32f4xx_dcmi.c ****     DCMI->IER |= DCMI_IT;
 724              		.loc 1 379 9
 725 0016 0B4B     		ldr	r3, .L46
 726 0018 DA68     		ldr	r2, [r3, #12]
 727              		.loc 1 379 15
 728 001a FB88     		ldrh	r3, [r7, #6]
 729              		.loc 1 379 9
 730 001c 0949     		ldr	r1, .L46
 731              		.loc 1 379 15
 732 001e 1343     		orrs	r3, r3, r2
 733 0020 CB60     		str	r3, [r1, #12]
 380:./Lib/Src/stm32f4xx_dcmi.c ****   }
 381:./Lib/Src/stm32f4xx_dcmi.c ****   else
 382:./Lib/Src/stm32f4xx_dcmi.c ****   {
 383:./Lib/Src/stm32f4xx_dcmi.c ****     /* Disable the Interrupt sources */
 384:./Lib/Src/stm32f4xx_dcmi.c ****     DCMI->IER &= (uint16_t)(~DCMI_IT);
 385:./Lib/Src/stm32f4xx_dcmi.c ****   }  
 386:./Lib/Src/stm32f4xx_dcmi.c **** }
 734              		.loc 1 386 1
 735 0022 08E0     		b	.L45
 736              	.L43:
 384:./Lib/Src/stm32f4xx_dcmi.c ****   }  
 737              		.loc 1 384 9
 738 0024 074B     		ldr	r3, .L46
 739 0026 DB68     		ldr	r3, [r3, #12]
 384:./Lib/Src/stm32f4xx_dcmi.c ****   }  
 740              		.loc 1 384 18
 741 0028 FA88     		ldrh	r2, [r7, #6]	@ movhi
 742 002a D243     		mvns	r2, r2
 743 002c 92B2     		uxth	r2, r2
 744 002e 1146     		mov	r1, r2
 384:./Lib/Src/stm32f4xx_dcmi.c ****   }  
 745              		.loc 1 384 9
 746 0030 044A     		ldr	r2, .L46
 384:./Lib/Src/stm32f4xx_dcmi.c ****   }  
 747              		.loc 1 384 15
ARM GAS  /tmp/ccCThe4V.s 			page 21


 748 0032 0B40     		ands	r3, r3, r1
 749 0034 D360     		str	r3, [r2, #12]
 750              	.L45:
 751              		.loc 1 386 1
 752 0036 00BF     		nop
 753 0038 0C37     		adds	r7, r7, #12
 754              		.cfi_def_cfa_offset 4
 755 003a BD46     		mov	sp, r7
 756              		.cfi_def_cfa_register 13
 757              		@ sp needed
 758 003c 5DF8047B 		ldr	r7, [sp], #4
 759              		.cfi_restore 7
 760              		.cfi_def_cfa_offset 0
 761 0040 7047     		bx	lr
 762              	.L47:
 763 0042 00BF     		.align	2
 764              	.L46:
 765 0044 00000550 		.word	1342504960
 766              		.cfi_endproc
 767              	.LFE133:
 769              		.section	.text.DCMI_GetFlagStatus,"ax",%progbits
 770              		.align	1
 771              		.global	DCMI_GetFlagStatus
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 776              	DCMI_GetFlagStatus:
 777              	.LFB134:
 387:./Lib/Src/stm32f4xx_dcmi.c **** 
 388:./Lib/Src/stm32f4xx_dcmi.c **** /**
 389:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Checks whether the  DCMI interface flag is set or not.
 390:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  DCMI_FLAG: specifies the flag to check.
 391:./Lib/Src/stm32f4xx_dcmi.c ****   *          This parameter can be one of the following values:
 392:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FRAMERI: Frame capture complete Raw flag mask
 393:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_OVFRI: Overflow Raw flag mask
 394:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_ERRRI: Synchronization error Raw flag mask
 395:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNCRI: VSYNC Raw flag mask
 396:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_LINERI: Line Raw flag mask
 397:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FRAMEMI: Frame capture complete Masked flag mask
 398:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_OVFMI: Overflow Masked flag mask
 399:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_ERRMI: Synchronization error Masked flag mask
 400:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNCMI: VSYNC Masked flag mask
 401:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_LINEMI: Line Masked flag mask
 402:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_HSYNC: HSYNC flag mask
 403:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNC: VSYNC flag mask
 404:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FNE: Fifo not empty flag mask
 405:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval The new state of DCMI_FLAG (SET or RESET).
 406:./Lib/Src/stm32f4xx_dcmi.c ****   */
 407:./Lib/Src/stm32f4xx_dcmi.c **** FlagStatus DCMI_GetFlagStatus(uint16_t DCMI_FLAG)
 408:./Lib/Src/stm32f4xx_dcmi.c **** {
 778              		.loc 1 408 1
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 24
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 783 0000 80B4     		push	{r7}
 784              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccCThe4V.s 			page 22


 785              		.cfi_offset 7, -4
 786 0002 87B0     		sub	sp, sp, #28
 787              		.cfi_def_cfa_offset 32
 788 0004 00AF     		add	r7, sp, #0
 789              		.cfi_def_cfa_register 7
 790 0006 0346     		mov	r3, r0
 791 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 409:./Lib/Src/stm32f4xx_dcmi.c ****   FlagStatus bitstatus = RESET;
 792              		.loc 1 409 14
 793 000a 0023     		movs	r3, #0
 794 000c FB75     		strb	r3, [r7, #23]
 410:./Lib/Src/stm32f4xx_dcmi.c ****   uint32_t dcmireg, tempreg = 0;
 795              		.loc 1 410 21
 796 000e 0023     		movs	r3, #0
 797 0010 3B61     		str	r3, [r7, #16]
 411:./Lib/Src/stm32f4xx_dcmi.c **** 
 412:./Lib/Src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 413:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_GET_FLAG(DCMI_FLAG));
 414:./Lib/Src/stm32f4xx_dcmi.c ****   
 415:./Lib/Src/stm32f4xx_dcmi.c ****   /* Get the DCMI register index */
 416:./Lib/Src/stm32f4xx_dcmi.c ****   dcmireg = (((uint16_t)DCMI_FLAG) >> 12);
 798              		.loc 1 416 36
 799 0012 FB88     		ldrh	r3, [r7, #6]
 800 0014 1B0B     		lsrs	r3, r3, #12
 801 0016 9BB2     		uxth	r3, r3
 802              		.loc 1 416 11
 803 0018 FB60     		str	r3, [r7, #12]
 417:./Lib/Src/stm32f4xx_dcmi.c ****   
 418:./Lib/Src/stm32f4xx_dcmi.c ****   if (dcmireg == 0x00) /* The FLAG is in RISR register */
 804              		.loc 1 418 6
 805 001a FB68     		ldr	r3, [r7, #12]
 806 001c 002B     		cmp	r3, #0
 807 001e 03D1     		bne	.L49
 419:./Lib/Src/stm32f4xx_dcmi.c ****   {
 420:./Lib/Src/stm32f4xx_dcmi.c ****     tempreg= DCMI->RISR;
 808              		.loc 1 420 18
 809 0020 0F4B     		ldr	r3, .L55
 810              		.loc 1 420 12
 811 0022 9B68     		ldr	r3, [r3, #8]
 812 0024 3B61     		str	r3, [r7, #16]
 813 0026 09E0     		b	.L50
 814              	.L49:
 421:./Lib/Src/stm32f4xx_dcmi.c ****   }
 422:./Lib/Src/stm32f4xx_dcmi.c ****   else if (dcmireg == 0x02) /* The FLAG is in SR register */
 815              		.loc 1 422 11
 816 0028 FB68     		ldr	r3, [r7, #12]
 817 002a 022B     		cmp	r3, #2
 818 002c 03D1     		bne	.L51
 423:./Lib/Src/stm32f4xx_dcmi.c ****   {
 424:./Lib/Src/stm32f4xx_dcmi.c ****     tempreg = DCMI->SR;
 819              		.loc 1 424 19
 820 002e 0C4B     		ldr	r3, .L55
 821              		.loc 1 424 13
 822 0030 5B68     		ldr	r3, [r3, #4]
 823 0032 3B61     		str	r3, [r7, #16]
 824 0034 02E0     		b	.L50
 825              	.L51:
ARM GAS  /tmp/ccCThe4V.s 			page 23


 425:./Lib/Src/stm32f4xx_dcmi.c ****   }
 426:./Lib/Src/stm32f4xx_dcmi.c ****   else /* The FLAG is in MISR register */
 427:./Lib/Src/stm32f4xx_dcmi.c ****   {
 428:./Lib/Src/stm32f4xx_dcmi.c ****     tempreg = DCMI->MISR;
 826              		.loc 1 428 19
 827 0036 0A4B     		ldr	r3, .L55
 828              		.loc 1 428 13
 829 0038 1B69     		ldr	r3, [r3, #16]
 830 003a 3B61     		str	r3, [r7, #16]
 831              	.L50:
 429:./Lib/Src/stm32f4xx_dcmi.c ****   }
 430:./Lib/Src/stm32f4xx_dcmi.c ****   
 431:./Lib/Src/stm32f4xx_dcmi.c ****   if ((tempreg & DCMI_FLAG) != (uint16_t)RESET )
 832              		.loc 1 431 16
 833 003c FA88     		ldrh	r2, [r7, #6]
 834 003e 3B69     		ldr	r3, [r7, #16]
 835 0040 1340     		ands	r3, r3, r2
 836              		.loc 1 431 6
 837 0042 002B     		cmp	r3, #0
 838 0044 02D0     		beq	.L52
 432:./Lib/Src/stm32f4xx_dcmi.c ****   {
 433:./Lib/Src/stm32f4xx_dcmi.c ****     bitstatus = SET;
 839              		.loc 1 433 15
 840 0046 0123     		movs	r3, #1
 841 0048 FB75     		strb	r3, [r7, #23]
 842 004a 01E0     		b	.L53
 843              	.L52:
 434:./Lib/Src/stm32f4xx_dcmi.c ****   }
 435:./Lib/Src/stm32f4xx_dcmi.c ****   else
 436:./Lib/Src/stm32f4xx_dcmi.c ****   {
 437:./Lib/Src/stm32f4xx_dcmi.c ****     bitstatus = RESET;
 844              		.loc 1 437 15
 845 004c 0023     		movs	r3, #0
 846 004e FB75     		strb	r3, [r7, #23]
 847              	.L53:
 438:./Lib/Src/stm32f4xx_dcmi.c ****   }
 439:./Lib/Src/stm32f4xx_dcmi.c ****   /* Return the DCMI_FLAG status */
 440:./Lib/Src/stm32f4xx_dcmi.c ****   return  bitstatus;
 848              		.loc 1 440 11
 849 0050 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 441:./Lib/Src/stm32f4xx_dcmi.c **** }
 850              		.loc 1 441 1
 851 0052 1846     		mov	r0, r3
 852 0054 1C37     		adds	r7, r7, #28
 853              		.cfi_def_cfa_offset 4
 854 0056 BD46     		mov	sp, r7
 855              		.cfi_def_cfa_register 13
 856              		@ sp needed
 857 0058 5DF8047B 		ldr	r7, [sp], #4
 858              		.cfi_restore 7
 859              		.cfi_def_cfa_offset 0
 860 005c 7047     		bx	lr
 861              	.L56:
 862 005e 00BF     		.align	2
 863              	.L55:
 864 0060 00000550 		.word	1342504960
 865              		.cfi_endproc
ARM GAS  /tmp/ccCThe4V.s 			page 24


 866              	.LFE134:
 868              		.section	.text.DCMI_ClearFlag,"ax",%progbits
 869              		.align	1
 870              		.global	DCMI_ClearFlag
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 875              	DCMI_ClearFlag:
 876              	.LFB135:
 442:./Lib/Src/stm32f4xx_dcmi.c **** 
 443:./Lib/Src/stm32f4xx_dcmi.c **** /**
 444:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Clears the DCMI's pending flags.
 445:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  DCMI_FLAG: specifies the flag to clear.
 446:./Lib/Src/stm32f4xx_dcmi.c ****   *          This parameter can be any combination of the following values:
 447:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FRAMERI: Frame capture complete Raw flag mask
 448:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_OVFRI: Overflow Raw flag mask
 449:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_ERRRI: Synchronization error Raw flag mask
 450:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNCRI: VSYNC Raw flag mask
 451:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_LINERI: Line Raw flag mask
 452:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval None
 453:./Lib/Src/stm32f4xx_dcmi.c ****   */
 454:./Lib/Src/stm32f4xx_dcmi.c **** void DCMI_ClearFlag(uint16_t DCMI_FLAG)
 455:./Lib/Src/stm32f4xx_dcmi.c **** {
 877              		.loc 1 455 1
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 8
 880              		@ frame_needed = 1, uses_anonymous_args = 0
 881              		@ link register save eliminated.
 882 0000 80B4     		push	{r7}
 883              		.cfi_def_cfa_offset 4
 884              		.cfi_offset 7, -4
 885 0002 83B0     		sub	sp, sp, #12
 886              		.cfi_def_cfa_offset 16
 887 0004 00AF     		add	r7, sp, #0
 888              		.cfi_def_cfa_register 7
 889 0006 0346     		mov	r3, r0
 890 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 456:./Lib/Src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 457:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CLEAR_FLAG(DCMI_FLAG));
 458:./Lib/Src/stm32f4xx_dcmi.c ****   
 459:./Lib/Src/stm32f4xx_dcmi.c ****   /* Clear the flag by writing in the ICR register 1 in the corresponding 
 460:./Lib/Src/stm32f4xx_dcmi.c ****   Flag position*/
 461:./Lib/Src/stm32f4xx_dcmi.c ****   
 462:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->ICR = DCMI_FLAG;
 891              		.loc 1 462 7
 892 000a 044A     		ldr	r2, .L58
 893              		.loc 1 462 13
 894 000c FB88     		ldrh	r3, [r7, #6]
 895 000e 5361     		str	r3, [r2, #20]
 463:./Lib/Src/stm32f4xx_dcmi.c **** }
 896              		.loc 1 463 1
 897 0010 00BF     		nop
 898 0012 0C37     		adds	r7, r7, #12
 899              		.cfi_def_cfa_offset 4
 900 0014 BD46     		mov	sp, r7
 901              		.cfi_def_cfa_register 13
 902              		@ sp needed
ARM GAS  /tmp/ccCThe4V.s 			page 25


 903 0016 5DF8047B 		ldr	r7, [sp], #4
 904              		.cfi_restore 7
 905              		.cfi_def_cfa_offset 0
 906 001a 7047     		bx	lr
 907              	.L59:
 908              		.align	2
 909              	.L58:
 910 001c 00000550 		.word	1342504960
 911              		.cfi_endproc
 912              	.LFE135:
 914              		.section	.text.DCMI_GetITStatus,"ax",%progbits
 915              		.align	1
 916              		.global	DCMI_GetITStatus
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 921              	DCMI_GetITStatus:
 922              	.LFB136:
 464:./Lib/Src/stm32f4xx_dcmi.c **** 
 465:./Lib/Src/stm32f4xx_dcmi.c **** /**
 466:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Checks whether the DCMI interrupt has occurred or not.
 467:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  DCMI_IT: specifies the DCMI interrupt source to check.
 468:./Lib/Src/stm32f4xx_dcmi.c ****   *          This parameter can be one of the following values:
 469:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_FRAME: Frame capture complete interrupt mask
 470:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_OVF: Overflow interrupt mask
 471:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_ERR: Synchronization error interrupt mask
 472:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_VSYNC: VSYNC interrupt mask
 473:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_LINE: Line interrupt mask
 474:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval The new state of DCMI_IT (SET or RESET).
 475:./Lib/Src/stm32f4xx_dcmi.c ****   */
 476:./Lib/Src/stm32f4xx_dcmi.c **** ITStatus DCMI_GetITStatus(uint16_t DCMI_IT)
 477:./Lib/Src/stm32f4xx_dcmi.c **** {
 923              		.loc 1 477 1
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 16
 926              		@ frame_needed = 1, uses_anonymous_args = 0
 927              		@ link register save eliminated.
 928 0000 80B4     		push	{r7}
 929              		.cfi_def_cfa_offset 4
 930              		.cfi_offset 7, -4
 931 0002 85B0     		sub	sp, sp, #20
 932              		.cfi_def_cfa_offset 24
 933 0004 00AF     		add	r7, sp, #0
 934              		.cfi_def_cfa_register 7
 935 0006 0346     		mov	r3, r0
 936 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 478:./Lib/Src/stm32f4xx_dcmi.c ****   ITStatus bitstatus = RESET;
 937              		.loc 1 478 12
 938 000a 0023     		movs	r3, #0
 939 000c FB73     		strb	r3, [r7, #15]
 479:./Lib/Src/stm32f4xx_dcmi.c ****   uint32_t itstatus = 0;
 940              		.loc 1 479 12
 941 000e 0023     		movs	r3, #0
 942 0010 BB60     		str	r3, [r7, #8]
 480:./Lib/Src/stm32f4xx_dcmi.c ****   
 481:./Lib/Src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 482:./Lib/Src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_GET_IT(DCMI_IT));
ARM GAS  /tmp/ccCThe4V.s 			page 26


 483:./Lib/Src/stm32f4xx_dcmi.c ****   
 484:./Lib/Src/stm32f4xx_dcmi.c ****   itstatus = DCMI->MISR & DCMI_IT; /* Only masked interrupts are checked */
 943              		.loc 1 484 18
 944 0012 0A4B     		ldr	r3, .L64
 945 0014 1A69     		ldr	r2, [r3, #16]
 946              		.loc 1 484 25
 947 0016 FB88     		ldrh	r3, [r7, #6]
 948              		.loc 1 484 12
 949 0018 1340     		ands	r3, r3, r2
 950 001a BB60     		str	r3, [r7, #8]
 485:./Lib/Src/stm32f4xx_dcmi.c ****   
 486:./Lib/Src/stm32f4xx_dcmi.c ****   if ((itstatus != (uint16_t)RESET))
 951              		.loc 1 486 6
 952 001c BB68     		ldr	r3, [r7, #8]
 953 001e 002B     		cmp	r3, #0
 954 0020 02D0     		beq	.L61
 487:./Lib/Src/stm32f4xx_dcmi.c ****   {
 488:./Lib/Src/stm32f4xx_dcmi.c ****     bitstatus = SET;
 955              		.loc 1 488 15
 956 0022 0123     		movs	r3, #1
 957 0024 FB73     		strb	r3, [r7, #15]
 958 0026 01E0     		b	.L62
 959              	.L61:
 489:./Lib/Src/stm32f4xx_dcmi.c ****   }
 490:./Lib/Src/stm32f4xx_dcmi.c ****   else
 491:./Lib/Src/stm32f4xx_dcmi.c ****   {
 492:./Lib/Src/stm32f4xx_dcmi.c ****     bitstatus = RESET;
 960              		.loc 1 492 15
 961 0028 0023     		movs	r3, #0
 962 002a FB73     		strb	r3, [r7, #15]
 963              	.L62:
 493:./Lib/Src/stm32f4xx_dcmi.c ****   }
 494:./Lib/Src/stm32f4xx_dcmi.c ****   return bitstatus;
 964              		.loc 1 494 10
 965 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 495:./Lib/Src/stm32f4xx_dcmi.c **** }
 966              		.loc 1 495 1
 967 002e 1846     		mov	r0, r3
 968 0030 1437     		adds	r7, r7, #20
 969              		.cfi_def_cfa_offset 4
 970 0032 BD46     		mov	sp, r7
 971              		.cfi_def_cfa_register 13
 972              		@ sp needed
 973 0034 5DF8047B 		ldr	r7, [sp], #4
 974              		.cfi_restore 7
 975              		.cfi_def_cfa_offset 0
 976 0038 7047     		bx	lr
 977              	.L65:
 978 003a 00BF     		.align	2
 979              	.L64:
 980 003c 00000550 		.word	1342504960
 981              		.cfi_endproc
 982              	.LFE136:
 984              		.section	.text.DCMI_ClearITPendingBit,"ax",%progbits
 985              		.align	1
 986              		.global	DCMI_ClearITPendingBit
 987              		.syntax unified
ARM GAS  /tmp/ccCThe4V.s 			page 27


 988              		.thumb
 989              		.thumb_func
 991              	DCMI_ClearITPendingBit:
 992              	.LFB137:
 496:./Lib/Src/stm32f4xx_dcmi.c **** 
 497:./Lib/Src/stm32f4xx_dcmi.c **** /**
 498:./Lib/Src/stm32f4xx_dcmi.c ****   * @brief  Clears the DCMI's interrupt pending bits.
 499:./Lib/Src/stm32f4xx_dcmi.c ****   * @param  DCMI_IT: specifies the DCMI interrupt pending bit to clear.
 500:./Lib/Src/stm32f4xx_dcmi.c ****   *          This parameter can be any combination of the following values:
 501:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_FRAME: Frame capture complete interrupt mask
 502:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_OVF: Overflow interrupt mask
 503:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_ERR: Synchronization error interrupt mask
 504:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_VSYNC: VSYNC interrupt mask
 505:./Lib/Src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_LINE: Line interrupt mask
 506:./Lib/Src/stm32f4xx_dcmi.c ****   * @retval None
 507:./Lib/Src/stm32f4xx_dcmi.c ****   */
 508:./Lib/Src/stm32f4xx_dcmi.c **** void DCMI_ClearITPendingBit(uint16_t DCMI_IT)
 509:./Lib/Src/stm32f4xx_dcmi.c **** {
 993              		.loc 1 509 1
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 8
 996              		@ frame_needed = 1, uses_anonymous_args = 0
 997              		@ link register save eliminated.
 998 0000 80B4     		push	{r7}
 999              		.cfi_def_cfa_offset 4
 1000              		.cfi_offset 7, -4
 1001 0002 83B0     		sub	sp, sp, #12
 1002              		.cfi_def_cfa_offset 16
 1003 0004 00AF     		add	r7, sp, #0
 1004              		.cfi_def_cfa_register 7
 1005 0006 0346     		mov	r3, r0
 1006 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 510:./Lib/Src/stm32f4xx_dcmi.c ****   /* Clear the interrupt pending Bit by writing in the ICR register 1 in the 
 511:./Lib/Src/stm32f4xx_dcmi.c ****   corresponding pending Bit position*/
 512:./Lib/Src/stm32f4xx_dcmi.c ****   
 513:./Lib/Src/stm32f4xx_dcmi.c ****   DCMI->ICR = DCMI_IT;
 1007              		.loc 1 513 7
 1008 000a 044A     		ldr	r2, .L67
 1009              		.loc 1 513 13
 1010 000c FB88     		ldrh	r3, [r7, #6]
 1011 000e 5361     		str	r3, [r2, #20]
 514:./Lib/Src/stm32f4xx_dcmi.c **** }
 1012              		.loc 1 514 1
 1013 0010 00BF     		nop
 1014 0012 0C37     		adds	r7, r7, #12
 1015              		.cfi_def_cfa_offset 4
 1016 0014 BD46     		mov	sp, r7
 1017              		.cfi_def_cfa_register 13
 1018              		@ sp needed
 1019 0016 5DF8047B 		ldr	r7, [sp], #4
 1020              		.cfi_restore 7
 1021              		.cfi_def_cfa_offset 0
 1022 001a 7047     		bx	lr
 1023              	.L68:
 1024              		.align	2
 1025              	.L67:
 1026 001c 00000550 		.word	1342504960
ARM GAS  /tmp/ccCThe4V.s 			page 28


 1027              		.cfi_endproc
 1028              	.LFE137:
 1030              		.text
 1031              	.Letext0:
 1032              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 1033              		.file 3 "./Start/stm32f4xx.h"
 1034              		.file 4 "./Lib/inc/stm32f4xx_dcmi.h"
ARM GAS  /tmp/ccCThe4V.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_dcmi.c
     /tmp/ccCThe4V.s:21     .text.DCMI_DeInit:0000000000000000 $t
     /tmp/ccCThe4V.s:27     .text.DCMI_DeInit:0000000000000000 DCMI_DeInit
     /tmp/ccCThe4V.s:86     .text.DCMI_DeInit:0000000000000038 $d
     /tmp/ccCThe4V.s:91     .text.DCMI_Init:0000000000000000 $t
     /tmp/ccCThe4V.s:97     .text.DCMI_Init:0000000000000000 DCMI_Init
     /tmp/ccCThe4V.s:196    .text.DCMI_Init:000000000000007c $d
     /tmp/ccCThe4V.s:201    .text.DCMI_StructInit:0000000000000000 $t
     /tmp/ccCThe4V.s:207    .text.DCMI_StructInit:0000000000000000 DCMI_StructInit
     /tmp/ccCThe4V.s:265    .text.DCMI_CROPConfig:0000000000000000 $t
     /tmp/ccCThe4V.s:271    .text.DCMI_CROPConfig:0000000000000000 DCMI_CROPConfig
     /tmp/ccCThe4V.s:331    .text.DCMI_CROPConfig:0000000000000038 $d
     /tmp/ccCThe4V.s:336    .text.DCMI_CROPCmd:0000000000000000 $t
     /tmp/ccCThe4V.s:342    .text.DCMI_CROPCmd:0000000000000000 DCMI_CROPCmd
     /tmp/ccCThe4V.s:394    .text.DCMI_CROPCmd:0000000000000038 $d
     /tmp/ccCThe4V.s:399    .text.DCMI_SetEmbeddedSynchroCodes:0000000000000000 $t
     /tmp/ccCThe4V.s:405    .text.DCMI_SetEmbeddedSynchroCodes:0000000000000000 DCMI_SetEmbeddedSynchroCodes
     /tmp/ccCThe4V.s:463    .text.DCMI_SetEmbeddedSynchroCodes:0000000000000038 $d
     /tmp/ccCThe4V.s:468    .text.DCMI_JPEGCmd:0000000000000000 $t
     /tmp/ccCThe4V.s:474    .text.DCMI_JPEGCmd:0000000000000000 DCMI_JPEGCmd
     /tmp/ccCThe4V.s:526    .text.DCMI_JPEGCmd:0000000000000038 $d
     /tmp/ccCThe4V.s:531    .text.DCMI_Cmd:0000000000000000 $t
     /tmp/ccCThe4V.s:537    .text.DCMI_Cmd:0000000000000000 DCMI_Cmd
     /tmp/ccCThe4V.s:589    .text.DCMI_Cmd:0000000000000038 $d
     /tmp/ccCThe4V.s:594    .text.DCMI_CaptureCmd:0000000000000000 $t
     /tmp/ccCThe4V.s:600    .text.DCMI_CaptureCmd:0000000000000000 DCMI_CaptureCmd
     /tmp/ccCThe4V.s:652    .text.DCMI_CaptureCmd:0000000000000038 $d
     /tmp/ccCThe4V.s:657    .text.DCMI_ReadData:0000000000000000 $t
     /tmp/ccCThe4V.s:663    .text.DCMI_ReadData:0000000000000000 DCMI_ReadData
     /tmp/ccCThe4V.s:690    .text.DCMI_ReadData:0000000000000014 $d
     /tmp/ccCThe4V.s:695    .text.DCMI_ITConfig:0000000000000000 $t
     /tmp/ccCThe4V.s:701    .text.DCMI_ITConfig:0000000000000000 DCMI_ITConfig
     /tmp/ccCThe4V.s:765    .text.DCMI_ITConfig:0000000000000044 $d
     /tmp/ccCThe4V.s:770    .text.DCMI_GetFlagStatus:0000000000000000 $t
     /tmp/ccCThe4V.s:776    .text.DCMI_GetFlagStatus:0000000000000000 DCMI_GetFlagStatus
     /tmp/ccCThe4V.s:864    .text.DCMI_GetFlagStatus:0000000000000060 $d
     /tmp/ccCThe4V.s:869    .text.DCMI_ClearFlag:0000000000000000 $t
     /tmp/ccCThe4V.s:875    .text.DCMI_ClearFlag:0000000000000000 DCMI_ClearFlag
     /tmp/ccCThe4V.s:910    .text.DCMI_ClearFlag:000000000000001c $d
     /tmp/ccCThe4V.s:915    .text.DCMI_GetITStatus:0000000000000000 $t
     /tmp/ccCThe4V.s:921    .text.DCMI_GetITStatus:0000000000000000 DCMI_GetITStatus
     /tmp/ccCThe4V.s:980    .text.DCMI_GetITStatus:000000000000003c $d
     /tmp/ccCThe4V.s:985    .text.DCMI_ClearITPendingBit:0000000000000000 $t
     /tmp/ccCThe4V.s:991    .text.DCMI_ClearITPendingBit:0000000000000000 DCMI_ClearITPendingBit
     /tmp/ccCThe4V.s:1026   .text.DCMI_ClearITPendingBit:000000000000001c $d

NO UNDEFINED SYMBOLS
