ARM GAS  /tmp/ccPqpPxA.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Tools/Src/usart.c"
  20              		.section	.text.USART_Config1,"ax",%progbits
  21              		.align	1
  22              		.global	USART_Config1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	USART_Config1:
  28              	.LFB126:
   1:./Tools/Src/usart.c **** #include "stm32f4xx.h"
   2:./Tools/Src/usart.c **** #include "usart.h"
   3:./Tools/Src/usart.c **** 
   4:./Tools/Src/usart.c **** //////////////////////////////////////////////////////////////////
   5:./Tools/Src/usart.c ****   
   6:./Tools/Src/usart.c **** // #if 1
   7:./Tools/Src/usart.c **** // #pragma import(__use_no_semihosting)             
   8:./Tools/Src/usart.c ****                
   9:./Tools/Src/usart.c **** // struct __FILE 
  10:./Tools/Src/usart.c **** // { 
  11:./Tools/Src/usart.c **** // 	int handle; 
  12:./Tools/Src/usart.c **** // }; 
  13:./Tools/Src/usart.c **** 
  14:./Tools/Src/usart.c **** // FILE __stdout;       
  15:./Tools/Src/usart.c **** 
  16:./Tools/Src/usart.c **** // void _sys_exit(int x) 
  17:./Tools/Src/usart.c **** // { 
  18:./Tools/Src/usart.c **** // 	x = x; 
  19:./Tools/Src/usart.c **** // } 
  20:./Tools/Src/usart.c **** 
  21:./Tools/Src/usart.c **** // int fputc(int ch, FILE *f)
  22:./Tools/Src/usart.c **** // { 	
  23:./Tools/Src/usart.c **** // 	while((USART6->SR&0X40)==0);//  
  24:./Tools/Src/usart.c **** // 	USART6->DR = (u8) ch;      
  25:./Tools/Src/usart.c **** // 	return ch;
  26:./Tools/Src/usart.c **** // }
  27:./Tools/Src/usart.c **** // #endif
  28:./Tools/Src/usart.c ****  
  29:./Tools/Src/usart.c **** 
  30:./Tools/Src/usart.c **** //static void NVIC_Configuration(void) {
ARM GAS  /tmp/ccPqpPxA.s 			page 2


  31:./Tools/Src/usart.c **** //#if EN_USART2_RX
  32:./Tools/Src/usart.c **** //    USART_ITConfig(USART2, USART_IT_RXNE, ENABLE);  //¬ø¬™√Ü√¥√è√†¬π√ò√ñ√ê¬∂√è
  33:./Tools/Src/usart.c **** //    NVIC_InitTypeDef NVIC_InitStructure;
  34:./Tools/Src/usart.c **** 
  35:./Tools/Src/usart.c ****     // Usart1 NVIC(√ñ√ê¬∂√è¬ø√ò√ñ√Ü√Ü√∑) √Ö√§√ñ√É
  36:./Tools/Src/usart.c ****  //   NVIC_InitStructure.NVIC_IRQChannel                   = USART2_IRQn;  //¬¥¬Æ¬ø√ö1√ñ√ê¬∂√è√ç¬®¬
  37:./Tools/Src/usart.c **** //    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;            //√á√Ä√ï¬º√ì√Ö√è√à¬º¬∂1
  38:./Tools/Src/usart.c **** //    NVIC_InitStructure.NVIC_IRQChannelSubPriority        = 1;            //√ó√ì√ì√Ö√è√à¬º¬∂1
  39:./Tools/Src/usart.c **** //    NVIC_InitStructure.NVIC_IRQChannelCmd                = ENABLE;       // IRQ√ç¬®¬µ√Ä√ä¬π√Ñ√ú
  40:./Tools/Src/usart.c **** //    NVIC_Init(&NVIC_InitStructure);                                      //¬∏√π¬æ√ù√ñ¬∏¬∂¬®¬µ√Ñ¬≤
  41:./Tools/Src/usart.c **** 
  42:./Tools/Src/usart.c **** //#endif
  43:./Tools/Src/usart.c **** //}/
  44:./Tools/Src/usart.c **** 
  45:./Tools/Src/usart.c **** void USART_Config1(void){
  29              		.loc 1 45 25
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 86B0     		sub	sp, sp, #24
  38              		.cfi_def_cfa_offset 32
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  46:./Tools/Src/usart.c **** 	GPIO_InitTypeDef GPIO_InitStructure;
  47:./Tools/Src/usart.c **** 	USART_InitTypeDef USART_InitStructure;
  48:./Tools/Src/usart.c **** 	
  49:./Tools/Src/usart.c **** 	
  50:./Tools/Src/usart.c **** 	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA,ENABLE);
  41              		.loc 1 50 2
  42 0006 0121     		movs	r1, #1
  43 0008 0120     		movs	r0, #1
  44 000a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  51:./Tools/Src/usart.c **** 	
  52:./Tools/Src/usart.c **** 	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2,ENABLE);
  45              		.loc 1 52 2
  46 000e 0121     		movs	r1, #1
  47 0010 4FF40030 		mov	r0, #131072
  48 0014 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
  53:./Tools/Src/usart.c **** 	
  54:./Tools/Src/usart.c **** 	
  55:./Tools/Src/usart.c **** 	GPIO_PinAFConfig(GPIOA,GPIO_PinSource2,GPIO_AF_USART2);
  49              		.loc 1 55 2
  50 0018 0722     		movs	r2, #7
  51 001a 0221     		movs	r1, #2
  52 001c 1B48     		ldr	r0, .L2
  53 001e FFF7FEFF 		bl	GPIO_PinAFConfig
  56:./Tools/Src/usart.c **** 	
  57:./Tools/Src/usart.c **** 	GPIO_PinAFConfig(GPIOA,GPIO_PinSource3,GPIO_AF_USART2);
  54              		.loc 1 57 2
  55 0022 0722     		movs	r2, #7
  56 0024 0321     		movs	r1, #3
  57 0026 1948     		ldr	r0, .L2
  58 0028 FFF7FEFF 		bl	GPIO_PinAFConfig
ARM GAS  /tmp/ccPqpPxA.s 			page 3


  58:./Tools/Src/usart.c **** 	
  59:./Tools/Src/usart.c **** 	
  60:./Tools/Src/usart.c **** 		
  61:./Tools/Src/usart.c **** 	GPIO_InitStructure.GPIO_Pin=GPIO_Pin_2 | GPIO_Pin_3;
  59              		.loc 1 61 29
  60 002c 0C23     		movs	r3, #12
  61 002e 3B61     		str	r3, [r7, #16]
  62:./Tools/Src/usart.c **** 	
  63:./Tools/Src/usart.c **** 	
  64:./Tools/Src/usart.c **** 	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
  62              		.loc 1 64 32
  63 0030 0023     		movs	r3, #0
  64 0032 BB75     		strb	r3, [r7, #22]
  65:./Tools/Src/usart.c **** 	
  66:./Tools/Src/usart.c ****   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
  65              		.loc 1 66 32
  66 0034 0123     		movs	r3, #1
  67 0036 FB75     		strb	r3, [r7, #23]
  67:./Tools/Src/usart.c **** 
  68:./Tools/Src/usart.c **** 	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF;
  68              		.loc 1 68 30
  69 0038 0223     		movs	r3, #2
  70 003a 3B75     		strb	r3, [r7, #20]
  69:./Tools/Src/usart.c **** 
  70:./Tools/Src/usart.c **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  71              		.loc 1 70 32
  72 003c 0223     		movs	r3, #2
  73 003e 7B75     		strb	r3, [r7, #21]
  71:./Tools/Src/usart.c **** 	
  72:./Tools/Src/usart.c **** 
  73:./Tools/Src/usart.c **** 	GPIO_Init(GPIOA,&GPIO_InitStructure);
  74              		.loc 1 73 2
  75 0040 07F11003 		add	r3, r7, #16
  76 0044 1946     		mov	r1, r3
  77 0046 1148     		ldr	r0, .L2
  78 0048 FFF7FEFF 		bl	GPIO_Init
  74:./Tools/Src/usart.c **** 	
  75:./Tools/Src/usart.c **** 
  76:./Tools/Src/usart.c **** 	
  77:./Tools/Src/usart.c **** 
  78:./Tools/Src/usart.c **** 	USART_InitStructure.USART_BaudRate=9600;
  79              		.loc 1 78 36
  80 004c 4FF41653 		mov	r3, #9600
  81 0050 3B60     		str	r3, [r7]
  79:./Tools/Src/usart.c **** 	
  80:./Tools/Src/usart.c **** 	USART_InitStructure.USART_WordLength=USART_WordLength_8b;
  82              		.loc 1 80 38
  83 0052 0023     		movs	r3, #0
  84 0054 BB80     		strh	r3, [r7, #4]	@ movhi
  81:./Tools/Src/usart.c **** 	
  82:./Tools/Src/usart.c **** 	USART_InitStructure.USART_StopBits=USART_StopBits_1;
  85              		.loc 1 82 36
  86 0056 0023     		movs	r3, #0
  87 0058 FB80     		strh	r3, [r7, #6]	@ movhi
  83:./Tools/Src/usart.c **** 	
  84:./Tools/Src/usart.c **** 	USART_InitStructure.USART_Parity=USART_Parity_No;
  88              		.loc 1 84 34
ARM GAS  /tmp/ccPqpPxA.s 			page 4


  89 005a 0023     		movs	r3, #0
  90 005c 3B81     		strh	r3, [r7, #8]	@ movhi
  85:./Tools/Src/usart.c **** 	
  86:./Tools/Src/usart.c **** 	USART_InitStructure.USART_HardwareFlowControl=USART_HardwareFlowControl_None;
  91              		.loc 1 86 47
  92 005e 0023     		movs	r3, #0
  93 0060 BB81     		strh	r3, [r7, #12]	@ movhi
  87:./Tools/Src/usart.c **** 	
  88:./Tools/Src/usart.c **** 	USART_InitStructure.USART_Mode=USART_Mode_Rx|USART_Mode_Tx;
  94              		.loc 1 88 32
  95 0062 0C23     		movs	r3, #12
  96 0064 7B81     		strh	r3, [r7, #10]	@ movhi
  89:./Tools/Src/usart.c **** 	
  90:./Tools/Src/usart.c **** 	USART_Init(USART2,&USART_InitStructure);
  97              		.loc 1 90 2
  98 0066 3B46     		mov	r3, r7
  99 0068 1946     		mov	r1, r3
 100 006a 0948     		ldr	r0, .L2+4
 101 006c FFF7FEFF 		bl	USART_Init
  91:./Tools/Src/usart.c **** 	
  92:./Tools/Src/usart.c **** 	
  93:./Tools/Src/usart.c **** //	NVIC_Configuration();
  94:./Tools/Src/usart.c **** 	
  95:./Tools/Src/usart.c **** 
  96:./Tools/Src/usart.c **** 	USART_ITConfig(USART2,USART_IT_RXNE,ENABLE);
 102              		.loc 1 96 2
 103 0070 0122     		movs	r2, #1
 104 0072 40F22551 		movw	r1, #1317
 105 0076 0648     		ldr	r0, .L2+4
 106 0078 FFF7FEFF 		bl	USART_ITConfig
  97:./Tools/Src/usart.c **** 	
  98:./Tools/Src/usart.c **** 
  99:./Tools/Src/usart.c **** 	USART_Cmd(USART2,ENABLE);
 107              		.loc 1 99 2
 108 007c 0121     		movs	r1, #1
 109 007e 0448     		ldr	r0, .L2+4
 110 0080 FFF7FEFF 		bl	USART_Cmd
 100:./Tools/Src/usart.c **** }
 111              		.loc 1 100 1
 112 0084 00BF     		nop
 113 0086 1837     		adds	r7, r7, #24
 114              		.cfi_def_cfa_offset 8
 115 0088 BD46     		mov	sp, r7
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 008a 80BD     		pop	{r7, pc}
 119              	.L3:
 120              		.align	2
 121              	.L2:
 122 008c 00000240 		.word	1073872896
 123 0090 00440040 		.word	1073759232
 124              		.cfi_endproc
 125              	.LFE126:
 127              		.section	.text.USART_Config2,"ax",%progbits
 128              		.align	1
 129              		.global	USART_Config2
 130              		.syntax unified
ARM GAS  /tmp/ccPqpPxA.s 			page 5


 131              		.thumb
 132              		.thumb_func
 134              	USART_Config2:
 135              	.LFB127:
 101:./Tools/Src/usart.c **** 
 102:./Tools/Src/usart.c **** void USART_Config2(void){
 136              		.loc 1 102 25
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 24
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 0000 80B5     		push	{r7, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 86B0     		sub	sp, sp, #24
 145              		.cfi_def_cfa_offset 32
 146 0004 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
 103:./Tools/Src/usart.c **** 	GPIO_InitTypeDef GPIO_InitStructure;
 104:./Tools/Src/usart.c **** 	USART_InitTypeDef USART_InitStructure;
 105:./Tools/Src/usart.c **** 	
 106:./Tools/Src/usart.c **** 
 107:./Tools/Src/usart.c **** 	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC,ENABLE);
 148              		.loc 1 107 2
 149 0006 0121     		movs	r1, #1
 150 0008 0420     		movs	r0, #4
 151 000a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 108:./Tools/Src/usart.c **** 
 109:./Tools/Src/usart.c **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART6,ENABLE);
 152              		.loc 1 109 2
 153 000e 0121     		movs	r1, #1
 154 0010 2020     		movs	r0, #32
 155 0012 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 110:./Tools/Src/usart.c **** 	
 111:./Tools/Src/usart.c **** 
 112:./Tools/Src/usart.c **** 	GPIO_PinAFConfig(GPIOC,GPIO_PinSource6,GPIO_AF_USART6);
 156              		.loc 1 112 2
 157 0016 0822     		movs	r2, #8
 158 0018 0621     		movs	r1, #6
 159 001a 2048     		ldr	r0, .L5
 160 001c FFF7FEFF 		bl	GPIO_PinAFConfig
 113:./Tools/Src/usart.c **** 
 114:./Tools/Src/usart.c **** 	GPIO_PinAFConfig(GPIOC,GPIO_PinSource7,GPIO_AF_USART6);
 161              		.loc 1 114 2
 162 0020 0822     		movs	r2, #8
 163 0022 0721     		movs	r1, #7
 164 0024 1D48     		ldr	r0, .L5
 165 0026 FFF7FEFF 		bl	GPIO_PinAFConfig
 115:./Tools/Src/usart.c **** 	
 116:./Tools/Src/usart.c **** 
 117:./Tools/Src/usart.c **** 
 118:./Tools/Src/usart.c **** 	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 166              		.loc 1 118 32
 167 002a 0023     		movs	r3, #0
 168 002c BB75     		strb	r3, [r7, #22]
 119:./Tools/Src/usart.c **** 
 120:./Tools/Src/usart.c ****   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
ARM GAS  /tmp/ccPqpPxA.s 			page 6


 169              		.loc 1 120 32
 170 002e 0123     		movs	r3, #1
 171 0030 FB75     		strb	r3, [r7, #23]
 121:./Tools/Src/usart.c **** 
 122:./Tools/Src/usart.c **** 	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF;
 172              		.loc 1 122 30
 173 0032 0223     		movs	r3, #2
 174 0034 3B75     		strb	r3, [r7, #20]
 123:./Tools/Src/usart.c **** 
 124:./Tools/Src/usart.c **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 175              		.loc 1 124 32
 176 0036 0223     		movs	r3, #2
 177 0038 7B75     		strb	r3, [r7, #21]
 125:./Tools/Src/usart.c **** 	
 126:./Tools/Src/usart.c **** 
 127:./Tools/Src/usart.c **** 	GPIO_InitStructure.GPIO_Pin=GPIO_Pin_6;
 178              		.loc 1 127 29
 179 003a 4023     		movs	r3, #64
 180 003c 3B61     		str	r3, [r7, #16]
 128:./Tools/Src/usart.c **** 	GPIO_Init(GPIOC,&GPIO_InitStructure);
 181              		.loc 1 128 2
 182 003e 07F11003 		add	r3, r7, #16
 183 0042 1946     		mov	r1, r3
 184 0044 1548     		ldr	r0, .L5
 185 0046 FFF7FEFF 		bl	GPIO_Init
 129:./Tools/Src/usart.c **** 	
 130:./Tools/Src/usart.c **** 
 131:./Tools/Src/usart.c **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;
 186              		.loc 1 131 30
 187 004a 8023     		movs	r3, #128
 188 004c 3B61     		str	r3, [r7, #16]
 132:./Tools/Src/usart.c **** 	GPIO_Init(GPIOC,&GPIO_InitStructure);
 189              		.loc 1 132 2
 190 004e 07F11003 		add	r3, r7, #16
 191 0052 1946     		mov	r1, r3
 192 0054 1148     		ldr	r0, .L5
 193 0056 FFF7FEFF 		bl	GPIO_Init
 133:./Tools/Src/usart.c **** 	
 134:./Tools/Src/usart.c **** 
 135:./Tools/Src/usart.c **** 
 136:./Tools/Src/usart.c **** 	USART_InitStructure.USART_BaudRate=9600;
 194              		.loc 1 136 36
 195 005a 4FF41653 		mov	r3, #9600
 196 005e 3B60     		str	r3, [r7]
 137:./Tools/Src/usart.c **** 
 138:./Tools/Src/usart.c **** 	USART_InitStructure.USART_WordLength=USART_WordLength_8b;
 197              		.loc 1 138 38
 198 0060 0023     		movs	r3, #0
 199 0062 BB80     		strh	r3, [r7, #4]	@ movhi
 139:./Tools/Src/usart.c **** 
 140:./Tools/Src/usart.c **** 	USART_InitStructure.USART_StopBits=USART_StopBits_1;
 200              		.loc 1 140 36
 201 0064 0023     		movs	r3, #0
 202 0066 FB80     		strh	r3, [r7, #6]	@ movhi
 141:./Tools/Src/usart.c **** 
 142:./Tools/Src/usart.c **** 	USART_InitStructure.USART_Parity=USART_Parity_No;
 203              		.loc 1 142 34
ARM GAS  /tmp/ccPqpPxA.s 			page 7


 204 0068 0023     		movs	r3, #0
 205 006a 3B81     		strh	r3, [r7, #8]	@ movhi
 143:./Tools/Src/usart.c **** 
 144:./Tools/Src/usart.c **** 	USART_InitStructure.USART_HardwareFlowControl=USART_HardwareFlowControl_None;
 206              		.loc 1 144 47
 207 006c 0023     		movs	r3, #0
 208 006e BB81     		strh	r3, [r7, #12]	@ movhi
 145:./Tools/Src/usart.c **** 
 146:./Tools/Src/usart.c **** 	USART_InitStructure.USART_Mode=USART_Mode_Rx|USART_Mode_Tx;
 209              		.loc 1 146 32
 210 0070 0C23     		movs	r3, #12
 211 0072 7B81     		strh	r3, [r7, #10]	@ movhi
 147:./Tools/Src/usart.c **** 
 148:./Tools/Src/usart.c **** 	USART_Init(USART6,&USART_InitStructure);
 212              		.loc 1 148 2
 213 0074 3B46     		mov	r3, r7
 214 0076 1946     		mov	r1, r3
 215 0078 0948     		ldr	r0, .L5+4
 216 007a FFF7FEFF 		bl	USART_Init
 149:./Tools/Src/usart.c **** 	
 150:./Tools/Src/usart.c **** 
 151:./Tools/Src/usart.c **** //	NVIC_Configuration();
 152:./Tools/Src/usart.c **** 	
 153:./Tools/Src/usart.c **** 
 154:./Tools/Src/usart.c **** 	USART_ITConfig(USART6,USART_IT_RXNE,ENABLE);
 217              		.loc 1 154 2
 218 007e 0122     		movs	r2, #1
 219 0080 40F22551 		movw	r1, #1317
 220 0084 0648     		ldr	r0, .L5+4
 221 0086 FFF7FEFF 		bl	USART_ITConfig
 155:./Tools/Src/usart.c **** 	
 156:./Tools/Src/usart.c **** 
 157:./Tools/Src/usart.c **** 	USART_Cmd(USART6,ENABLE);
 222              		.loc 1 157 2
 223 008a 0121     		movs	r1, #1
 224 008c 0448     		ldr	r0, .L5+4
 225 008e FFF7FEFF 		bl	USART_Cmd
 158:./Tools/Src/usart.c **** }
 226              		.loc 1 158 1
 227 0092 00BF     		nop
 228 0094 1837     		adds	r7, r7, #24
 229              		.cfi_def_cfa_offset 8
 230 0096 BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 0098 80BD     		pop	{r7, pc}
 234              	.L6:
 235 009a 00BF     		.align	2
 236              	.L5:
 237 009c 00080240 		.word	1073874944
 238 00a0 00140140 		.word	1073812480
 239              		.cfi_endproc
 240              	.LFE127:
 242              		.section	.text.Usart_SendByte,"ax",%progbits
 243              		.align	1
 244              		.global	Usart_SendByte
 245              		.syntax unified
ARM GAS  /tmp/ccPqpPxA.s 			page 8


 246              		.thumb
 247              		.thumb_func
 249              	Usart_SendByte:
 250              	.LFB128:
 159:./Tools/Src/usart.c **** 
 160:./Tools/Src/usart.c **** 
 161:./Tools/Src/usart.c **** void Usart_SendByte( USART_TypeDef * pUSARTx, uint8_t ch )
 162:./Tools/Src/usart.c **** {
 251              		.loc 1 162 1
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 82B0     		sub	sp, sp, #8
 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 7860     		str	r0, [r7, #4]
 264 0008 0B46     		mov	r3, r1
 265 000a FB70     		strb	r3, [r7, #3]
 163:./Tools/Src/usart.c **** 
 164:./Tools/Src/usart.c **** 	USART_SendData(pUSARTx,ch);
 266              		.loc 1 164 2
 267 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 268 000e 9BB2     		uxth	r3, r3
 269 0010 1946     		mov	r1, r3
 270 0012 7868     		ldr	r0, [r7, #4]
 271 0014 FFF7FEFF 		bl	USART_SendData
 165:./Tools/Src/usart.c **** 
 166:./Tools/Src/usart.c **** 	while (USART_GetFlagStatus(pUSARTx, USART_FLAG_TXE) == RESET);	
 272              		.loc 1 166 8
 273 0018 00BF     		nop
 274              	.L8:
 275              		.loc 1 166 9 discriminator 1
 276 001a 8021     		movs	r1, #128
 277 001c 7868     		ldr	r0, [r7, #4]
 278 001e FFF7FEFF 		bl	USART_GetFlagStatus
 279 0022 0346     		mov	r3, r0
 280              		.loc 1 166 54 discriminator 1
 281 0024 002B     		cmp	r3, #0
 282 0026 F8D0     		beq	.L8
 167:./Tools/Src/usart.c **** }
 283              		.loc 1 167 1
 284 0028 00BF     		nop
 285 002a 00BF     		nop
 286 002c 0837     		adds	r7, r7, #8
 287              		.cfi_def_cfa_offset 8
 288 002e BD46     		mov	sp, r7
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 0030 80BD     		pop	{r7, pc}
 292              		.cfi_endproc
 293              	.LFE128:
 295              		.section	.text.USARTGetByte,"ax",%progbits
ARM GAS  /tmp/ccPqpPxA.s 			page 9


 296              		.align	1
 297              		.global	USARTGetByte
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 302              	USARTGetByte:
 303              	.LFB129:
 168:./Tools/Src/usart.c **** 
 169:./Tools/Src/usart.c **** 
 170:./Tools/Src/usart.c **** unsigned char USARTGetByte(USART_TypeDef * pUSARTx,unsigned char* GetData)
 171:./Tools/Src/usart.c **** {   	   
 304              		.loc 1 171 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 8
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 82B0     		sub	sp, sp, #8
 313              		.cfi_def_cfa_offset 16
 314 0004 00AF     		add	r7, sp, #0
 315              		.cfi_def_cfa_register 7
 316 0006 7860     		str	r0, [r7, #4]
 317 0008 3960     		str	r1, [r7]
 172:./Tools/Src/usart.c ****         if(USART_GetFlagStatus(pUSARTx, USART_FLAG_RXNE) == RESET)
 318              		.loc 1 172 12
 319 000a 2021     		movs	r1, #32
 320 000c 7868     		ldr	r0, [r7, #4]
 321 000e FFF7FEFF 		bl	USART_GetFlagStatus
 322 0012 0346     		mov	r3, r0
 323              		.loc 1 172 11
 324 0014 002B     		cmp	r3, #0
 325 0016 01D1     		bne	.L10
 173:./Tools/Src/usart.c ****         {  return 0;
 326              		.loc 1 173 19
 327 0018 0023     		movs	r3, #0
 328 001a 07E0     		b	.L11
 329              	.L10:
 174:./Tools/Src/usart.c **** 		}
 175:./Tools/Src/usart.c ****         *GetData = USART_ReceiveData(pUSARTx); 
 330              		.loc 1 175 20
 331 001c 7868     		ldr	r0, [r7, #4]
 332 001e FFF7FEFF 		bl	USART_ReceiveData
 333 0022 0346     		mov	r3, r0
 334              		.loc 1 175 18
 335 0024 DAB2     		uxtb	r2, r3
 336 0026 3B68     		ldr	r3, [r7]
 337 0028 1A70     		strb	r2, [r3]
 176:./Tools/Src/usart.c ****         return 1;
 338              		.loc 1 176 16
 339 002a 0123     		movs	r3, #1
 340              	.L11:
 177:./Tools/Src/usart.c **** }
 341              		.loc 1 177 1
 342 002c 1846     		mov	r0, r3
 343 002e 0837     		adds	r7, r7, #8
ARM GAS  /tmp/ccPqpPxA.s 			page 10


 344              		.cfi_def_cfa_offset 8
 345 0030 BD46     		mov	sp, r7
 346              		.cfi_def_cfa_register 13
 347              		@ sp needed
 348 0032 80BD     		pop	{r7, pc}
 349              		.cfi_endproc
 350              	.LFE129:
 352              		.section	.text.USARTSendString,"ax",%progbits
 353              		.align	1
 354              		.global	USARTSendString
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 359              	USARTSendString:
 360              	.LFB130:
 178:./Tools/Src/usart.c **** 
 179:./Tools/Src/usart.c **** void USARTSendString(USART_TypeDef * pUSARTx,char* String)
 180:./Tools/Src/usart.c **** {   
 361              		.loc 1 180 1
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 16
 364              		@ frame_needed = 1, uses_anonymous_args = 0
 365 0000 80B5     		push	{r7, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 0002 84B0     		sub	sp, sp, #16
 370              		.cfi_def_cfa_offset 24
 371 0004 00AF     		add	r7, sp, #0
 372              		.cfi_def_cfa_register 7
 373 0006 7860     		str	r0, [r7, #4]
 374 0008 3960     		str	r1, [r7]
 375              	.LBB2:
 181:./Tools/Src/usart.c **** 		for(int i = 0;String[i];i++)
 376              		.loc 1 181 11
 377 000a 0023     		movs	r3, #0
 378 000c FB60     		str	r3, [r7, #12]
 379              		.loc 1 181 3
 380 000e 0AE0     		b	.L13
 381              	.L14:
 182:./Tools/Src/usart.c **** 				Usart_SendByte(pUSARTx,String[i]);
 382              		.loc 1 182 34 discriminator 3
 383 0010 FB68     		ldr	r3, [r7, #12]
 384 0012 3A68     		ldr	r2, [r7]
 385 0014 1344     		add	r3, r3, r2
 386              		.loc 1 182 5 discriminator 3
 387 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 388 0018 1946     		mov	r1, r3
 389 001a 7868     		ldr	r0, [r7, #4]
 390 001c FFF7FEFF 		bl	Usart_SendByte
 181:./Tools/Src/usart.c **** 		for(int i = 0;String[i];i++)
 391              		.loc 1 181 28 discriminator 3
 392 0020 FB68     		ldr	r3, [r7, #12]
 393 0022 0133     		adds	r3, r3, #1
 394 0024 FB60     		str	r3, [r7, #12]
 395              	.L13:
 181:./Tools/Src/usart.c **** 		for(int i = 0;String[i];i++)
ARM GAS  /tmp/ccPqpPxA.s 			page 11


 396              		.loc 1 181 23 discriminator 1
 397 0026 FB68     		ldr	r3, [r7, #12]
 398 0028 3A68     		ldr	r2, [r7]
 399 002a 1344     		add	r3, r3, r2
 400 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 181:./Tools/Src/usart.c **** 		for(int i = 0;String[i];i++)
 401              		.loc 1 181 17 discriminator 1
 402 002e 002B     		cmp	r3, #0
 403 0030 EED1     		bne	.L14
 404              	.LBE2:
 183:./Tools/Src/usart.c **** }
 405              		.loc 1 183 1
 406 0032 00BF     		nop
 407 0034 00BF     		nop
 408 0036 1037     		adds	r7, r7, #16
 409              		.cfi_def_cfa_offset 8
 410 0038 BD46     		mov	sp, r7
 411              		.cfi_def_cfa_register 13
 412              		@ sp needed
 413 003a 80BD     		pop	{r7, pc}
 414              		.cfi_endproc
 415              	.LFE130:
 417              		.section	.text.USARTTest,"ax",%progbits
 418              		.align	1
 419              		.global	USARTTest
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 424              	USARTTest:
 425              	.LFB131:
 184:./Tools/Src/usart.c **** 
 185:./Tools/Src/usart.c **** 
 186:./Tools/Src/usart.c **** void USARTTest(USART_TypeDef * pUSARTx)
 187:./Tools/Src/usart.c **** {
 426              		.loc 1 187 1
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 16
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430 0000 80B5     		push	{r7, lr}
 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 7, -8
 433              		.cfi_offset 14, -4
 434 0002 84B0     		sub	sp, sp, #16
 435              		.cfi_def_cfa_offset 24
 436 0004 00AF     		add	r7, sp, #0
 437              		.cfi_def_cfa_register 7
 438 0006 7860     		str	r0, [r7, #4]
 188:./Tools/Src/usart.c ****        unsigned char i = 0;
 439              		.loc 1 188 22
 440 0008 0023     		movs	r3, #0
 441 000a FB73     		strb	r3, [r7, #15]
 189:./Tools/Src/usart.c **** 
 190:./Tools/Src/usart.c ****        while(1)
 191:./Tools/Src/usart.c ****        {    
 192:./Tools/Src/usart.c **** 		 while(USARTGetByte(pUSARTx,&i))
 442              		.loc 1 192 9
 443 000c 04E0     		b	.L16
ARM GAS  /tmp/ccPqpPxA.s 			page 12


 444              	.L17:
 193:./Tools/Src/usart.c ****         {
 194:./Tools/Src/usart.c ****          Usart_SendByte(pUSARTx,i);
 445              		.loc 1 194 10
 446 000e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 447 0010 1946     		mov	r1, r3
 448 0012 7868     		ldr	r0, [r7, #4]
 449 0014 FFF7FEFF 		bl	Usart_SendByte
 450              	.L16:
 192:./Tools/Src/usart.c ****         {
 451              		.loc 1 192 10
 452 0018 07F10F03 		add	r3, r7, #15
 453 001c 1946     		mov	r1, r3
 454 001e 7868     		ldr	r0, [r7, #4]
 455 0020 FFF7FEFF 		bl	USARTGetByte
 456 0024 0346     		mov	r3, r0
 457 0026 002B     		cmp	r3, #0
 458 0028 F1D1     		bne	.L17
 192:./Tools/Src/usart.c ****         {
 459              		.loc 1 192 9
 460 002a F5E7     		b	.L16
 461              		.cfi_endproc
 462              	.LFE131:
 464              		.text
 465              	.Letext0:
 466              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 467              		.file 3 "./Start/stm32f4xx.h"
 468              		.file 4 "./Lib/inc/stm32f4xx_gpio.h"
 469              		.file 5 "./Lib/inc/stm32f4xx_usart.h"
 470              		.file 6 "./Lib/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccPqpPxA.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccPqpPxA.s:21     .text.USART_Config1:0000000000000000 $t
     /tmp/ccPqpPxA.s:27     .text.USART_Config1:0000000000000000 USART_Config1
     /tmp/ccPqpPxA.s:122    .text.USART_Config1:000000000000008c $d
     /tmp/ccPqpPxA.s:128    .text.USART_Config2:0000000000000000 $t
     /tmp/ccPqpPxA.s:134    .text.USART_Config2:0000000000000000 USART_Config2
     /tmp/ccPqpPxA.s:237    .text.USART_Config2:000000000000009c $d
     /tmp/ccPqpPxA.s:243    .text.Usart_SendByte:0000000000000000 $t
     /tmp/ccPqpPxA.s:249    .text.Usart_SendByte:0000000000000000 Usart_SendByte
     /tmp/ccPqpPxA.s:296    .text.USARTGetByte:0000000000000000 $t
     /tmp/ccPqpPxA.s:302    .text.USARTGetByte:0000000000000000 USARTGetByte
     /tmp/ccPqpPxA.s:353    .text.USARTSendString:0000000000000000 $t
     /tmp/ccPqpPxA.s:359    .text.USARTSendString:0000000000000000 USARTSendString
     /tmp/ccPqpPxA.s:418    .text.USARTTest:0000000000000000 $t
     /tmp/ccPqpPxA.s:424    .text.USARTTest:0000000000000000 USARTTest

UNDEFINED SYMBOLS
RCC_AHB1PeriphClockCmd
RCC_APB1PeriphClockCmd
GPIO_PinAFConfig
GPIO_Init
USART_Init
USART_ITConfig
USART_Cmd
RCC_APB2PeriphClockCmd
USART_SendData
USART_GetFlagStatus
USART_ReceiveData
