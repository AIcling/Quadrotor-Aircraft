ARM GAS  /tmp/ccspMsk0.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_dma2d.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Lib/Src/stm32f4xx_dma2d.c"
  20              		.section	.text.DMA2D_DeInit,"ax",%progbits
  21              		.align	1
  22              		.global	DMA2D_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	DMA2D_DeInit:
  28              	.LFB123:
   1:./Lib/Src/stm32f4xx_dma2d.c **** /**
   2:./Lib/Src/stm32f4xx_dma2d.c ****   ******************************************************************************
   3:./Lib/Src/stm32f4xx_dma2d.c ****   * @file    stm32f4xx_dma2d.c
   4:./Lib/Src/stm32f4xx_dma2d.c ****   * @author  MCD Application Team
   5:./Lib/Src/stm32f4xx_dma2d.c ****   * @version V1.8.1
   6:./Lib/Src/stm32f4xx_dma2d.c ****   * @date    27-January-2022
   7:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Lib/Src/stm32f4xx_dma2d.c ****   *          functionalities of the DMA2D controller (DMA2D) peripheral:
   9:./Lib/Src/stm32f4xx_dma2d.c ****   *           + Initialization and configuration
  10:./Lib/Src/stm32f4xx_dma2d.c ****   *           + Interrupts and flags management
  11:./Lib/Src/stm32f4xx_dma2d.c ****   *           
  12:./Lib/Src/stm32f4xx_dma2d.c ****   @verbatim  
  13:./Lib/Src/stm32f4xx_dma2d.c ****  ===============================================================================
  14:./Lib/Src/stm32f4xx_dma2d.c ****                       ##### How to use this driver #####
  15:./Lib/Src/stm32f4xx_dma2d.c ****  ===============================================================================
  16:./Lib/Src/stm32f4xx_dma2d.c ****     [..]
  17:./Lib/Src/stm32f4xx_dma2d.c ****         (#) Enable DMA2D clock using 
  18:./Lib/Src/stm32f4xx_dma2d.c ****             RCC_APB2PeriphResetCmd(RCC_APB2Periph_DMA2D, ENABLE) function.
  19:./Lib/Src/stm32f4xx_dma2d.c ****             
  20:./Lib/Src/stm32f4xx_dma2d.c ****         (#) Configures DMA2D
  21:./Lib/Src/stm32f4xx_dma2d.c ****           (++) transfer mode 
  22:./Lib/Src/stm32f4xx_dma2d.c ****           (++) pixel format, line_number, pixel_per_line
  23:./Lib/Src/stm32f4xx_dma2d.c ****           (++) output memory address
  24:./Lib/Src/stm32f4xx_dma2d.c ****           (++) alpha value
  25:./Lib/Src/stm32f4xx_dma2d.c ****           (++) output offset
  26:./Lib/Src/stm32f4xx_dma2d.c ****           (++) Default color (RGB)
  27:./Lib/Src/stm32f4xx_dma2d.c ****            
  28:./Lib/Src/stm32f4xx_dma2d.c ****         (#) Configures Foreground or/and background
  29:./Lib/Src/stm32f4xx_dma2d.c ****           (++) memory address
  30:./Lib/Src/stm32f4xx_dma2d.c ****           (++) alpha value
ARM GAS  /tmp/ccspMsk0.s 			page 2


  31:./Lib/Src/stm32f4xx_dma2d.c ****           (++) offset and default color
  32:./Lib/Src/stm32f4xx_dma2d.c ****   
  33:./Lib/Src/stm32f4xx_dma2d.c ****         (#) Call the DMA2D_Start() to enable the DMA2D controller.
  34:./Lib/Src/stm32f4xx_dma2d.c ****         
  35:./Lib/Src/stm32f4xx_dma2d.c ****     @endverbatim
  36:./Lib/Src/stm32f4xx_dma2d.c ****   
  37:./Lib/Src/stm32f4xx_dma2d.c ****   ******************************************************************************
  38:./Lib/Src/stm32f4xx_dma2d.c ****   * @attention
  39:./Lib/Src/stm32f4xx_dma2d.c ****   *
  40:./Lib/Src/stm32f4xx_dma2d.c ****   * Copyright (c) 2016 STMicroelectronics.
  41:./Lib/Src/stm32f4xx_dma2d.c ****   * All rights reserved.
  42:./Lib/Src/stm32f4xx_dma2d.c ****   *
  43:./Lib/Src/stm32f4xx_dma2d.c ****   * This software is licensed under terms that can be found in the LICENSE file
  44:./Lib/Src/stm32f4xx_dma2d.c ****   * in the root directory of this software component.
  45:./Lib/Src/stm32f4xx_dma2d.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  46:./Lib/Src/stm32f4xx_dma2d.c ****   *
  47:./Lib/Src/stm32f4xx_dma2d.c ****   ******************************************************************************
  48:./Lib/Src/stm32f4xx_dma2d.c ****   */
  49:./Lib/Src/stm32f4xx_dma2d.c **** 
  50:./Lib/Src/stm32f4xx_dma2d.c **** /* Includes ------------------------------------------------------------------*/
  51:./Lib/Src/stm32f4xx_dma2d.c **** #include "stm32f4xx_dma2d.h"
  52:./Lib/Src/stm32f4xx_dma2d.c **** #include "stm32f4xx_rcc.h"
  53:./Lib/Src/stm32f4xx_dma2d.c **** 
  54:./Lib/Src/stm32f4xx_dma2d.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  55:./Lib/Src/stm32f4xx_dma2d.c ****   * @{
  56:./Lib/Src/stm32f4xx_dma2d.c ****   */
  57:./Lib/Src/stm32f4xx_dma2d.c **** 
  58:./Lib/Src/stm32f4xx_dma2d.c **** /** @defgroup DMA2D 
  59:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief DMA2D driver modules
  60:./Lib/Src/stm32f4xx_dma2d.c ****   * @{
  61:./Lib/Src/stm32f4xx_dma2d.c ****   */
  62:./Lib/Src/stm32f4xx_dma2d.c **** 
  63:./Lib/Src/stm32f4xx_dma2d.c **** /* Private typedef -----------------------------------------------------------*/
  64:./Lib/Src/stm32f4xx_dma2d.c **** /* Private define ------------------------------------------------------------*/
  65:./Lib/Src/stm32f4xx_dma2d.c **** /* Private macro -------------------------------------------------------------*/
  66:./Lib/Src/stm32f4xx_dma2d.c **** /* Private variables ---------------------------------------------------------*/
  67:./Lib/Src/stm32f4xx_dma2d.c **** /* Private function prototypes -----------------------------------------------*/
  68:./Lib/Src/stm32f4xx_dma2d.c **** /* Private functions ---------------------------------------------------------*/
  69:./Lib/Src/stm32f4xx_dma2d.c **** 
  70:./Lib/Src/stm32f4xx_dma2d.c **** #define CR_MASK                     ((uint32_t)0xFFFCE0FC)  /* DMA2D CR Mask */
  71:./Lib/Src/stm32f4xx_dma2d.c **** #define PFCCR_MASK                  ((uint32_t)0x00FC00C0)  /* DMA2D FGPFCCR Mask */
  72:./Lib/Src/stm32f4xx_dma2d.c **** #define DEAD_MASK                   ((uint32_t)0xFFFF00FE)  /* DMA2D DEAD Mask */
  73:./Lib/Src/stm32f4xx_dma2d.c **** 
  74:./Lib/Src/stm32f4xx_dma2d.c **** /** @defgroup DMA2D_Private_Functions
  75:./Lib/Src/stm32f4xx_dma2d.c ****   * @{
  76:./Lib/Src/stm32f4xx_dma2d.c ****   */
  77:./Lib/Src/stm32f4xx_dma2d.c **** 
  78:./Lib/Src/stm32f4xx_dma2d.c **** /** @defgroup DMA2D_Group1 Initialization and Configuration functions
  79:./Lib/Src/stm32f4xx_dma2d.c ****  *  @brief   Initialization and Configuration functions 
  80:./Lib/Src/stm32f4xx_dma2d.c ****  *
  81:./Lib/Src/stm32f4xx_dma2d.c **** @verbatim
  82:./Lib/Src/stm32f4xx_dma2d.c ****  ===============================================================================
  83:./Lib/Src/stm32f4xx_dma2d.c ****             ##### Initialization and Configuration functions #####
  84:./Lib/Src/stm32f4xx_dma2d.c ****  ===============================================================================
  85:./Lib/Src/stm32f4xx_dma2d.c ****     [..]  This section provides functions allowing to:
  86:./Lib/Src/stm32f4xx_dma2d.c ****       (+) Initialize and configure the DMA2D
  87:./Lib/Src/stm32f4xx_dma2d.c ****       (+) Start/Abort/Suspend Transfer
ARM GAS  /tmp/ccspMsk0.s 			page 3


  88:./Lib/Src/stm32f4xx_dma2d.c ****       (+) Initialize, configure and set Foreground and background
  89:./Lib/Src/stm32f4xx_dma2d.c ****       (+) configure and enable DeadTime
  90:./Lib/Src/stm32f4xx_dma2d.c ****       (+) configure lineWatermark
  91:./Lib/Src/stm32f4xx_dma2d.c ****     
  92:./Lib/Src/stm32f4xx_dma2d.c ****     
  93:./Lib/Src/stm32f4xx_dma2d.c **** @endverbatim
  94:./Lib/Src/stm32f4xx_dma2d.c ****   * @{
  95:./Lib/Src/stm32f4xx_dma2d.c ****   */
  96:./Lib/Src/stm32f4xx_dma2d.c **** 
  97:./Lib/Src/stm32f4xx_dma2d.c **** /**
  98:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Deinitializes the DMA2D peripheral registers to their default reset
  99:./Lib/Src/stm32f4xx_dma2d.c ****   *         values.
 100:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  None
 101:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 102:./Lib/Src/stm32f4xx_dma2d.c ****   */
 103:./Lib/Src/stm32f4xx_dma2d.c **** 
 104:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_DeInit(void)
 105:./Lib/Src/stm32f4xx_dma2d.c **** {
  29              		.loc 1 105 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
 106:./Lib/Src/stm32f4xx_dma2d.c ****   /* Enable DMA2D reset state */
 107:./Lib/Src/stm32f4xx_dma2d.c ****   RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_DMA2D, ENABLE);
  39              		.loc 1 107 3
  40 0004 0121     		movs	r1, #1
  41 0006 4FF40000 		mov	r0, #8388608
  42 000a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 108:./Lib/Src/stm32f4xx_dma2d.c ****   /* Release DMA2D from reset state */
 109:./Lib/Src/stm32f4xx_dma2d.c ****   RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_DMA2D, DISABLE);
  43              		.loc 1 109 3
  44 000e 0021     		movs	r1, #0
  45 0010 4FF40000 		mov	r0, #8388608
  46 0014 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 110:./Lib/Src/stm32f4xx_dma2d.c **** }
  47              		.loc 1 110 1
  48 0018 00BF     		nop
  49 001a 80BD     		pop	{r7, pc}
  50              		.cfi_endproc
  51              	.LFE123:
  53              		.section	.text.DMA2D_Init,"ax",%progbits
  54              		.align	1
  55              		.global	DMA2D_Init
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  60              	DMA2D_Init:
  61              	.LFB124:
 111:./Lib/Src/stm32f4xx_dma2d.c **** 
 112:./Lib/Src/stm32f4xx_dma2d.c **** 
 113:./Lib/Src/stm32f4xx_dma2d.c **** /**
ARM GAS  /tmp/ccspMsk0.s 			page 4


 114:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Initializes the DMA2D peripheral according to the specified parameters
 115:./Lib/Src/stm32f4xx_dma2d.c ****   *         in the DMA2D_InitStruct.
 116:./Lib/Src/stm32f4xx_dma2d.c ****   * @note   This function can be used only when the DMA2D is disabled.
 117:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_InitStruct: pointer to a DMA2D_InitTypeDef structure that contains
 118:./Lib/Src/stm32f4xx_dma2d.c ****   *         the configuration information for the specified DMA2D peripheral.
 119:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 120:./Lib/Src/stm32f4xx_dma2d.c ****   */
 121:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_Init(DMA2D_InitTypeDef* DMA2D_InitStruct)
 122:./Lib/Src/stm32f4xx_dma2d.c **** {
  62              		.loc 1 122 1
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 24
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 87B0     		sub	sp, sp, #28
  71              		.cfi_def_cfa_offset 32
  72 0004 00AF     		add	r7, sp, #0
  73              		.cfi_def_cfa_register 7
  74 0006 7860     		str	r0, [r7, #4]
 123:./Lib/Src/stm32f4xx_dma2d.c **** 
 124:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t outgreen = 0;
  75              		.loc 1 124 12
  76 0008 0023     		movs	r3, #0
  77 000a 7B61     		str	r3, [r7, #20]
 125:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t outred   = 0;
  78              		.loc 1 125 12
  79 000c 0023     		movs	r3, #0
  80 000e 3B61     		str	r3, [r7, #16]
 126:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t outalpha = 0;
  81              		.loc 1 126 12
  82 0010 0023     		movs	r3, #0
  83 0012 FB60     		str	r3, [r7, #12]
 127:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t pixline  = 0;
  84              		.loc 1 127 12
  85 0014 0023     		movs	r3, #0
  86 0016 BB60     		str	r3, [r7, #8]
 128:./Lib/Src/stm32f4xx_dma2d.c **** 
 129:./Lib/Src/stm32f4xx_dma2d.c ****   /* Check the parameters */
 130:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_MODE(DMA2D_InitStruct->DMA2D_Mode));
 131:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_CMODE(DMA2D_InitStruct->DMA2D_CMode));
 132:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_OGREEN(DMA2D_InitStruct->DMA2D_OutputGreen));
 133:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_ORED(DMA2D_InitStruct->DMA2D_OutputRed));
 134:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_OBLUE(DMA2D_InitStruct->DMA2D_OutputBlue));
 135:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_OALPHA(DMA2D_InitStruct->DMA2D_OutputAlpha));
 136:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_OUTPUT_OFFSET(DMA2D_InitStruct->DMA2D_OutputOffset));
 137:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_LINE(DMA2D_InitStruct->DMA2D_NumberOfLine));
 138:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(DMA2D_InitStruct->DMA2D_PixelPerLine));
 139:./Lib/Src/stm32f4xx_dma2d.c **** 
 140:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures the DMA2D operation mode */
 141:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->CR &= (uint32_t)CR_MASK;
  87              		.loc 1 141 8
  88 0018 4E4B     		ldr	r3, .L8
  89 001a 1B68     		ldr	r3, [r3]
  90 001c 4D4A     		ldr	r2, .L8
ARM GAS  /tmp/ccspMsk0.s 			page 5


  91              		.loc 1 141 13
  92 001e 23F00313 		bic	r3, r3, #196611
  93 0022 23F4F853 		bic	r3, r3, #7936
  94 0026 1360     		str	r3, [r2]
 142:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->CR |= (DMA2D_InitStruct->DMA2D_Mode);
  95              		.loc 1 142 8
  96 0028 4A4B     		ldr	r3, .L8
  97 002a 1A68     		ldr	r2, [r3]
  98              		.loc 1 142 33
  99 002c 7B68     		ldr	r3, [r7, #4]
 100 002e 1B68     		ldr	r3, [r3]
 101              		.loc 1 142 8
 102 0030 4849     		ldr	r1, .L8
 103              		.loc 1 142 13
 104 0032 1343     		orrs	r3, r3, r2
 105 0034 0B60     		str	r3, [r1]
 143:./Lib/Src/stm32f4xx_dma2d.c **** 
 144:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures the color mode of the output image */
 145:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->OPFCCR &= ~(uint32_t)DMA2D_OPFCCR_CM;
 106              		.loc 1 145 8
 107 0036 474B     		ldr	r3, .L8
 108 0038 5B6B     		ldr	r3, [r3, #52]
 109 003a 464A     		ldr	r2, .L8
 110              		.loc 1 145 17
 111 003c 23F00703 		bic	r3, r3, #7
 112 0040 5363     		str	r3, [r2, #52]
 146:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->OPFCCR |= (DMA2D_InitStruct->DMA2D_CMode);
 113              		.loc 1 146 8
 114 0042 444B     		ldr	r3, .L8
 115 0044 5A6B     		ldr	r2, [r3, #52]
 116              		.loc 1 146 37
 117 0046 7B68     		ldr	r3, [r7, #4]
 118 0048 5B68     		ldr	r3, [r3, #4]
 119              		.loc 1 146 8
 120 004a 4249     		ldr	r1, .L8
 121              		.loc 1 146 17
 122 004c 1343     		orrs	r3, r3, r2
 123 004e 4B63     		str	r3, [r1, #52]
 147:./Lib/Src/stm32f4xx_dma2d.c **** 
 148:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures the output color */
 149:./Lib/Src/stm32f4xx_dma2d.c **** 
 150:./Lib/Src/stm32f4xx_dma2d.c ****   if (DMA2D_InitStruct->DMA2D_CMode == DMA2D_ARGB8888)
 124              		.loc 1 150 23
 125 0050 7B68     		ldr	r3, [r7, #4]
 126 0052 5B68     		ldr	r3, [r3, #4]
 127              		.loc 1 150 6
 128 0054 002B     		cmp	r3, #0
 129 0056 0CD1     		bne	.L3
 151:./Lib/Src/stm32f4xx_dma2d.c ****   {
 152:./Lib/Src/stm32f4xx_dma2d.c ****     outgreen = DMA2D_InitStruct->DMA2D_OutputGreen << 8;
 130              		.loc 1 152 32
 131 0058 7B68     		ldr	r3, [r7, #4]
 132 005a DB68     		ldr	r3, [r3, #12]
 133              		.loc 1 152 14
 134 005c 1B02     		lsls	r3, r3, #8
 135 005e 7B61     		str	r3, [r7, #20]
 153:./Lib/Src/stm32f4xx_dma2d.c ****     outred = DMA2D_InitStruct->DMA2D_OutputRed << 16;
ARM GAS  /tmp/ccspMsk0.s 			page 6


 136              		.loc 1 153 30
 137 0060 7B68     		ldr	r3, [r7, #4]
 138 0062 1B69     		ldr	r3, [r3, #16]
 139              		.loc 1 153 12
 140 0064 1B04     		lsls	r3, r3, #16
 141 0066 3B61     		str	r3, [r7, #16]
 154:./Lib/Src/stm32f4xx_dma2d.c ****     outalpha = DMA2D_InitStruct->DMA2D_OutputAlpha << 24;
 142              		.loc 1 154 32
 143 0068 7B68     		ldr	r3, [r7, #4]
 144 006a 5B69     		ldr	r3, [r3, #20]
 145              		.loc 1 154 14
 146 006c 1B06     		lsls	r3, r3, #24
 147 006e FB60     		str	r3, [r7, #12]
 148 0070 3AE0     		b	.L4
 149              	.L3:
 155:./Lib/Src/stm32f4xx_dma2d.c ****   }
 156:./Lib/Src/stm32f4xx_dma2d.c ****   else
 157:./Lib/Src/stm32f4xx_dma2d.c ****   
 158:./Lib/Src/stm32f4xx_dma2d.c ****     if (DMA2D_InitStruct->DMA2D_CMode == DMA2D_RGB888)
 150              		.loc 1 158 25
 151 0072 7B68     		ldr	r3, [r7, #4]
 152 0074 5B68     		ldr	r3, [r3, #4]
 153              		.loc 1 158 8
 154 0076 012B     		cmp	r3, #1
 155 0078 0AD1     		bne	.L5
 159:./Lib/Src/stm32f4xx_dma2d.c ****     {
 160:./Lib/Src/stm32f4xx_dma2d.c ****       outgreen = DMA2D_InitStruct->DMA2D_OutputGreen << 8;
 156              		.loc 1 160 34
 157 007a 7B68     		ldr	r3, [r7, #4]
 158 007c DB68     		ldr	r3, [r3, #12]
 159              		.loc 1 160 16
 160 007e 1B02     		lsls	r3, r3, #8
 161 0080 7B61     		str	r3, [r7, #20]
 161:./Lib/Src/stm32f4xx_dma2d.c ****       outred = DMA2D_InitStruct->DMA2D_OutputRed << 16;
 162              		.loc 1 161 32
 163 0082 7B68     		ldr	r3, [r7, #4]
 164 0084 1B69     		ldr	r3, [r3, #16]
 165              		.loc 1 161 14
 166 0086 1B04     		lsls	r3, r3, #16
 167 0088 3B61     		str	r3, [r7, #16]
 162:./Lib/Src/stm32f4xx_dma2d.c ****       outalpha = (uint32_t)0x00000000;
 168              		.loc 1 162 16
 169 008a 0023     		movs	r3, #0
 170 008c FB60     		str	r3, [r7, #12]
 171 008e 2BE0     		b	.L4
 172              	.L5:
 163:./Lib/Src/stm32f4xx_dma2d.c ****     }
 164:./Lib/Src/stm32f4xx_dma2d.c ****      
 165:./Lib/Src/stm32f4xx_dma2d.c ****   else
 166:./Lib/Src/stm32f4xx_dma2d.c **** 
 167:./Lib/Src/stm32f4xx_dma2d.c ****     if (DMA2D_InitStruct->DMA2D_CMode == DMA2D_RGB565)
 173              		.loc 1 167 25
 174 0090 7B68     		ldr	r3, [r7, #4]
 175 0092 5B68     		ldr	r3, [r3, #4]
 176              		.loc 1 167 8
 177 0094 022B     		cmp	r3, #2
 178 0096 0AD1     		bne	.L6
ARM GAS  /tmp/ccspMsk0.s 			page 7


 168:./Lib/Src/stm32f4xx_dma2d.c ****     {
 169:./Lib/Src/stm32f4xx_dma2d.c ****       outgreen = DMA2D_InitStruct->DMA2D_OutputGreen << 5;
 179              		.loc 1 169 34
 180 0098 7B68     		ldr	r3, [r7, #4]
 181 009a DB68     		ldr	r3, [r3, #12]
 182              		.loc 1 169 16
 183 009c 5B01     		lsls	r3, r3, #5
 184 009e 7B61     		str	r3, [r7, #20]
 170:./Lib/Src/stm32f4xx_dma2d.c ****       outred = DMA2D_InitStruct->DMA2D_OutputRed << 11;
 185              		.loc 1 170 32
 186 00a0 7B68     		ldr	r3, [r7, #4]
 187 00a2 1B69     		ldr	r3, [r3, #16]
 188              		.loc 1 170 14
 189 00a4 DB02     		lsls	r3, r3, #11
 190 00a6 3B61     		str	r3, [r7, #16]
 171:./Lib/Src/stm32f4xx_dma2d.c ****       outalpha = (uint32_t)0x00000000;
 191              		.loc 1 171 16
 192 00a8 0023     		movs	r3, #0
 193 00aa FB60     		str	r3, [r7, #12]
 194 00ac 1CE0     		b	.L4
 195              	.L6:
 172:./Lib/Src/stm32f4xx_dma2d.c ****     }
 173:./Lib/Src/stm32f4xx_dma2d.c **** 
 174:./Lib/Src/stm32f4xx_dma2d.c ****   else
 175:./Lib/Src/stm32f4xx_dma2d.c **** 
 176:./Lib/Src/stm32f4xx_dma2d.c ****     if (DMA2D_InitStruct->DMA2D_CMode == DMA2D_ARGB1555)
 196              		.loc 1 176 25
 197 00ae 7B68     		ldr	r3, [r7, #4]
 198 00b0 5B68     		ldr	r3, [r3, #4]
 199              		.loc 1 176 8
 200 00b2 032B     		cmp	r3, #3
 201 00b4 0CD1     		bne	.L7
 177:./Lib/Src/stm32f4xx_dma2d.c ****     {  
 178:./Lib/Src/stm32f4xx_dma2d.c ****       outgreen = DMA2D_InitStruct->DMA2D_OutputGreen << 5;
 202              		.loc 1 178 34
 203 00b6 7B68     		ldr	r3, [r7, #4]
 204 00b8 DB68     		ldr	r3, [r3, #12]
 205              		.loc 1 178 16
 206 00ba 5B01     		lsls	r3, r3, #5
 207 00bc 7B61     		str	r3, [r7, #20]
 179:./Lib/Src/stm32f4xx_dma2d.c ****       outred = DMA2D_InitStruct->DMA2D_OutputRed << 10;
 208              		.loc 1 179 32
 209 00be 7B68     		ldr	r3, [r7, #4]
 210 00c0 1B69     		ldr	r3, [r3, #16]
 211              		.loc 1 179 14
 212 00c2 9B02     		lsls	r3, r3, #10
 213 00c4 3B61     		str	r3, [r7, #16]
 180:./Lib/Src/stm32f4xx_dma2d.c ****       outalpha = DMA2D_InitStruct->DMA2D_OutputAlpha << 15;
 214              		.loc 1 180 34
 215 00c6 7B68     		ldr	r3, [r7, #4]
 216 00c8 5B69     		ldr	r3, [r3, #20]
 217              		.loc 1 180 16
 218 00ca DB03     		lsls	r3, r3, #15
 219 00cc FB60     		str	r3, [r7, #12]
 220 00ce 0BE0     		b	.L4
 221              	.L7:
 181:./Lib/Src/stm32f4xx_dma2d.c ****     }
ARM GAS  /tmp/ccspMsk0.s 			page 8


 182:./Lib/Src/stm32f4xx_dma2d.c **** 
 183:./Lib/Src/stm32f4xx_dma2d.c ****   else /* DMA2D_CMode = DMA2D_ARGB4444 */
 184:./Lib/Src/stm32f4xx_dma2d.c ****   {
 185:./Lib/Src/stm32f4xx_dma2d.c ****     outgreen = DMA2D_InitStruct->DMA2D_OutputGreen << 4;
 222              		.loc 1 185 32
 223 00d0 7B68     		ldr	r3, [r7, #4]
 224 00d2 DB68     		ldr	r3, [r3, #12]
 225              		.loc 1 185 14
 226 00d4 1B01     		lsls	r3, r3, #4
 227 00d6 7B61     		str	r3, [r7, #20]
 186:./Lib/Src/stm32f4xx_dma2d.c ****     outred = DMA2D_InitStruct->DMA2D_OutputRed << 8;
 228              		.loc 1 186 30
 229 00d8 7B68     		ldr	r3, [r7, #4]
 230 00da 1B69     		ldr	r3, [r3, #16]
 231              		.loc 1 186 12
 232 00dc 1B02     		lsls	r3, r3, #8
 233 00de 3B61     		str	r3, [r7, #16]
 187:./Lib/Src/stm32f4xx_dma2d.c ****     outalpha = DMA2D_InitStruct->DMA2D_OutputAlpha << 12;
 234              		.loc 1 187 32
 235 00e0 7B68     		ldr	r3, [r7, #4]
 236 00e2 5B69     		ldr	r3, [r3, #20]
 237              		.loc 1 187 14
 238 00e4 1B03     		lsls	r3, r3, #12
 239 00e6 FB60     		str	r3, [r7, #12]
 240              	.L4:
 188:./Lib/Src/stm32f4xx_dma2d.c ****   }  
 189:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->OCOLR = ((outgreen) | (outred) | (DMA2D_InitStruct->DMA2D_OutputBlue) | (outalpha));
 241              		.loc 1 189 30
 242 00e8 7A69     		ldr	r2, [r7, #20]
 243 00ea 3B69     		ldr	r3, [r7, #16]
 244 00ec 1A43     		orrs	r2, r2, r3
 245              		.loc 1 189 60
 246 00ee 7B68     		ldr	r3, [r7, #4]
 247 00f0 9B68     		ldr	r3, [r3, #8]
 248              		.loc 1 189 41
 249 00f2 1A43     		orrs	r2, r2, r3
 250              		.loc 1 189 8
 251 00f4 1749     		ldr	r1, .L8
 252              		.loc 1 189 80
 253 00f6 FB68     		ldr	r3, [r7, #12]
 254 00f8 1343     		orrs	r3, r3, r2
 255              		.loc 1 189 16
 256 00fa 8B63     		str	r3, [r1, #56]
 190:./Lib/Src/stm32f4xx_dma2d.c **** 
 191:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures the output memory address */
 192:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->OMAR = (DMA2D_InitStruct->DMA2D_OutputMemoryAdd);
 257              		.loc 1 192 8
 258 00fc 154A     		ldr	r2, .L8
 259              		.loc 1 192 34
 260 00fe 7B68     		ldr	r3, [r7, #4]
 261 0100 9B69     		ldr	r3, [r3, #24]
 262              		.loc 1 192 15
 263 0102 D363     		str	r3, [r2, #60]
 193:./Lib/Src/stm32f4xx_dma2d.c **** 
 194:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configure  the line Offset */
 195:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->OOR &= ~(uint32_t)DMA2D_OOR_LO;
 264              		.loc 1 195 8
ARM GAS  /tmp/ccspMsk0.s 			page 9


 265 0104 134B     		ldr	r3, .L8
 266 0106 1B6C     		ldr	r3, [r3, #64]
 267 0108 124A     		ldr	r2, .L8
 268              		.loc 1 195 14
 269 010a 23F47F53 		bic	r3, r3, #16320
 270 010e 23F03F03 		bic	r3, r3, #63
 271 0112 1364     		str	r3, [r2, #64]
 196:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->OOR |= (DMA2D_InitStruct->DMA2D_OutputOffset);
 272              		.loc 1 196 8
 273 0114 0F4B     		ldr	r3, .L8
 274 0116 1A6C     		ldr	r2, [r3, #64]
 275              		.loc 1 196 34
 276 0118 7B68     		ldr	r3, [r7, #4]
 277 011a DB69     		ldr	r3, [r3, #28]
 278              		.loc 1 196 8
 279 011c 0D49     		ldr	r1, .L8
 280              		.loc 1 196 14
 281 011e 1343     		orrs	r3, r3, r2
 282 0120 0B64     		str	r3, [r1, #64]
 197:./Lib/Src/stm32f4xx_dma2d.c **** 
 198:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configure the number of line and pixel per line */
 199:./Lib/Src/stm32f4xx_dma2d.c ****   pixline = DMA2D_InitStruct->DMA2D_PixelPerLine << 16; 
 283              		.loc 1 199 29
 284 0122 7B68     		ldr	r3, [r7, #4]
 285 0124 5B6A     		ldr	r3, [r3, #36]
 286              		.loc 1 199 11
 287 0126 1B04     		lsls	r3, r3, #16
 288 0128 BB60     		str	r3, [r7, #8]
 200:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->NLR &= ~(DMA2D_NLR_NL | DMA2D_NLR_PL);
 289              		.loc 1 200 8
 290 012a 0A4B     		ldr	r3, .L8
 291 012c 5B6C     		ldr	r3, [r3, #68]
 292 012e 094A     		ldr	r2, .L8
 293              		.loc 1 200 14
 294 0130 03F04043 		and	r3, r3, #-1073741824
 295 0134 5364     		str	r3, [r2, #68]
 201:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->NLR |= ((DMA2D_InitStruct->DMA2D_NumberOfLine) | (pixline));
 296              		.loc 1 201 8
 297 0136 074B     		ldr	r3, .L8
 298 0138 5A6C     		ldr	r2, [r3, #68]
 299              		.loc 1 201 35
 300 013a 7B68     		ldr	r3, [r7, #4]
 301 013c 196A     		ldr	r1, [r3, #32]
 302              		.loc 1 201 57
 303 013e BB68     		ldr	r3, [r7, #8]
 304 0140 0B43     		orrs	r3, r3, r1
 305              		.loc 1 201 8
 306 0142 0449     		ldr	r1, .L8
 307              		.loc 1 201 14
 308 0144 1343     		orrs	r3, r3, r2
 309 0146 4B64     		str	r3, [r1, #68]
 202:./Lib/Src/stm32f4xx_dma2d.c **** 
 203:./Lib/Src/stm32f4xx_dma2d.c **** /**
 204:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Fills each DMA2D_InitStruct member with its default value.
 205:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_InitStruct: pointer to a DMA2D_InitTypeDef structure which will
 206:./Lib/Src/stm32f4xx_dma2d.c ****   *         be initialized.
 207:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
ARM GAS  /tmp/ccspMsk0.s 			page 10


 208:./Lib/Src/stm32f4xx_dma2d.c ****   */
 209:./Lib/Src/stm32f4xx_dma2d.c **** }
 310              		.loc 1 209 1
 311 0148 00BF     		nop
 312 014a 1C37     		adds	r7, r7, #28
 313              		.cfi_def_cfa_offset 4
 314 014c BD46     		mov	sp, r7
 315              		.cfi_def_cfa_register 13
 316              		@ sp needed
 317 014e 5DF8047B 		ldr	r7, [sp], #4
 318              		.cfi_restore 7
 319              		.cfi_def_cfa_offset 0
 320 0152 7047     		bx	lr
 321              	.L9:
 322              		.align	2
 323              	.L8:
 324 0154 00B00240 		.word	1073917952
 325              		.cfi_endproc
 326              	.LFE124:
 328              		.section	.text.DMA2D_StructInit,"ax",%progbits
 329              		.align	1
 330              		.global	DMA2D_StructInit
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 335              	DMA2D_StructInit:
 336              	.LFB125:
 210:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_StructInit(DMA2D_InitTypeDef* DMA2D_InitStruct)
 211:./Lib/Src/stm32f4xx_dma2d.c **** {
 337              		.loc 1 211 1
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 8
 340              		@ frame_needed = 1, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 342 0000 80B4     		push	{r7}
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 7, -4
 345 0002 83B0     		sub	sp, sp, #12
 346              		.cfi_def_cfa_offset 16
 347 0004 00AF     		add	r7, sp, #0
 348              		.cfi_def_cfa_register 7
 349 0006 7860     		str	r0, [r7, #4]
 212:./Lib/Src/stm32f4xx_dma2d.c ****   /* Initialize the transfer mode member */
 213:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_InitStruct->DMA2D_Mode = DMA2D_M2M;
 350              		.loc 1 213 32
 351 0008 7B68     		ldr	r3, [r7, #4]
 352 000a 0022     		movs	r2, #0
 353 000c 1A60     		str	r2, [r3]
 214:./Lib/Src/stm32f4xx_dma2d.c **** 
 215:./Lib/Src/stm32f4xx_dma2d.c ****   /* Initialize the output color mode members */
 216:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_InitStruct->DMA2D_CMode = DMA2D_ARGB8888;
 354              		.loc 1 216 33
 355 000e 7B68     		ldr	r3, [r7, #4]
 356 0010 0022     		movs	r2, #0
 357 0012 5A60     		str	r2, [r3, #4]
 217:./Lib/Src/stm32f4xx_dma2d.c **** 
 218:./Lib/Src/stm32f4xx_dma2d.c ****   /* Initialize the alpha and RGB values */
ARM GAS  /tmp/ccspMsk0.s 			page 11


 219:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_InitStruct->DMA2D_OutputGreen = 0x00;
 358              		.loc 1 219 39
 359 0014 7B68     		ldr	r3, [r7, #4]
 360 0016 0022     		movs	r2, #0
 361 0018 DA60     		str	r2, [r3, #12]
 220:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_InitStruct->DMA2D_OutputBlue = 0x00;
 362              		.loc 1 220 38
 363 001a 7B68     		ldr	r3, [r7, #4]
 364 001c 0022     		movs	r2, #0
 365 001e 9A60     		str	r2, [r3, #8]
 221:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_InitStruct->DMA2D_OutputRed = 0x00;
 366              		.loc 1 221 37
 367 0020 7B68     		ldr	r3, [r7, #4]
 368 0022 0022     		movs	r2, #0
 369 0024 1A61     		str	r2, [r3, #16]
 222:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_InitStruct->DMA2D_OutputAlpha = 0x00;
 370              		.loc 1 222 39
 371 0026 7B68     		ldr	r3, [r7, #4]
 372 0028 0022     		movs	r2, #0
 373 002a 5A61     		str	r2, [r3, #20]
 223:./Lib/Src/stm32f4xx_dma2d.c **** 
 224:./Lib/Src/stm32f4xx_dma2d.c ****   /* Initialize the output memory address */
 225:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_InitStruct->DMA2D_OutputMemoryAdd = 0x00;
 374              		.loc 1 225 43
 375 002c 7B68     		ldr	r3, [r7, #4]
 376 002e 0022     		movs	r2, #0
 377 0030 9A61     		str	r2, [r3, #24]
 226:./Lib/Src/stm32f4xx_dma2d.c **** 
 227:./Lib/Src/stm32f4xx_dma2d.c ****   /* Initialize the output offset */
 228:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_InitStruct->DMA2D_OutputOffset = 0x00;
 378              		.loc 1 228 40
 379 0032 7B68     		ldr	r3, [r7, #4]
 380 0034 0022     		movs	r2, #0
 381 0036 DA61     		str	r2, [r3, #28]
 229:./Lib/Src/stm32f4xx_dma2d.c **** 
 230:./Lib/Src/stm32f4xx_dma2d.c ****   /* Initialize the number of line and the number of pixel per line */
 231:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_InitStruct->DMA2D_NumberOfLine = 0x00;
 382              		.loc 1 231 40
 383 0038 7B68     		ldr	r3, [r7, #4]
 384 003a 0022     		movs	r2, #0
 385 003c 1A62     		str	r2, [r3, #32]
 232:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_InitStruct->DMA2D_PixelPerLine = 0x00;
 386              		.loc 1 232 40
 387 003e 7B68     		ldr	r3, [r7, #4]
 388 0040 0022     		movs	r2, #0
 389 0042 5A62     		str	r2, [r3, #36]
 233:./Lib/Src/stm32f4xx_dma2d.c **** }
 390              		.loc 1 233 1
 391 0044 00BF     		nop
 392 0046 0C37     		adds	r7, r7, #12
 393              		.cfi_def_cfa_offset 4
 394 0048 BD46     		mov	sp, r7
 395              		.cfi_def_cfa_register 13
 396              		@ sp needed
 397 004a 5DF8047B 		ldr	r7, [sp], #4
 398              		.cfi_restore 7
 399              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccspMsk0.s 			page 12


 400 004e 7047     		bx	lr
 401              		.cfi_endproc
 402              	.LFE125:
 404              		.section	.text.DMA2D_StartTransfer,"ax",%progbits
 405              		.align	1
 406              		.global	DMA2D_StartTransfer
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 411              	DMA2D_StartTransfer:
 412              	.LFB126:
 234:./Lib/Src/stm32f4xx_dma2d.c **** 
 235:./Lib/Src/stm32f4xx_dma2d.c **** /**
 236:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Start the DMA2D transfer.
 237:./Lib/Src/stm32f4xx_dma2d.c ****   * @param 
 238:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 239:./Lib/Src/stm32f4xx_dma2d.c ****   */
 240:./Lib/Src/stm32f4xx_dma2d.c **** 
 241:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_StartTransfer(void)
 242:./Lib/Src/stm32f4xx_dma2d.c **** {
 413              		.loc 1 242 1
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418 0000 80B4     		push	{r7}
 419              		.cfi_def_cfa_offset 4
 420              		.cfi_offset 7, -4
 421 0002 00AF     		add	r7, sp, #0
 422              		.cfi_def_cfa_register 7
 243:./Lib/Src/stm32f4xx_dma2d.c ****     /* Start DMA2D transfer by setting START bit */
 244:./Lib/Src/stm32f4xx_dma2d.c ****     DMA2D->CR |= (uint32_t)DMA2D_CR_START;
 423              		.loc 1 244 10
 424 0004 054B     		ldr	r3, .L12
 425 0006 1B68     		ldr	r3, [r3]
 426 0008 044A     		ldr	r2, .L12
 427              		.loc 1 244 15
 428 000a 43F00103 		orr	r3, r3, #1
 429 000e 1360     		str	r3, [r2]
 245:./Lib/Src/stm32f4xx_dma2d.c **** }
 430              		.loc 1 245 1
 431 0010 00BF     		nop
 432 0012 BD46     		mov	sp, r7
 433              		.cfi_def_cfa_register 13
 434              		@ sp needed
 435 0014 5DF8047B 		ldr	r7, [sp], #4
 436              		.cfi_restore 7
 437              		.cfi_def_cfa_offset 0
 438 0018 7047     		bx	lr
 439              	.L13:
 440 001a 00BF     		.align	2
 441              	.L12:
 442 001c 00B00240 		.word	1073917952
 443              		.cfi_endproc
 444              	.LFE126:
 446              		.section	.text.DMA2D_AbortTransfer,"ax",%progbits
 447              		.align	1
ARM GAS  /tmp/ccspMsk0.s 			page 13


 448              		.global	DMA2D_AbortTransfer
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 453              	DMA2D_AbortTransfer:
 454              	.LFB127:
 246:./Lib/Src/stm32f4xx_dma2d.c **** 
 247:./Lib/Src/stm32f4xx_dma2d.c **** /**
 248:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Abort the DMA2D transfer.
 249:./Lib/Src/stm32f4xx_dma2d.c ****   * @param
 250:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 251:./Lib/Src/stm32f4xx_dma2d.c ****   */
 252:./Lib/Src/stm32f4xx_dma2d.c **** 
 253:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_AbortTransfer(void)
 254:./Lib/Src/stm32f4xx_dma2d.c **** {
 455              		.loc 1 254 1
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 1, uses_anonymous_args = 0
 459              		@ link register save eliminated.
 460 0000 80B4     		push	{r7}
 461              		.cfi_def_cfa_offset 4
 462              		.cfi_offset 7, -4
 463 0002 00AF     		add	r7, sp, #0
 464              		.cfi_def_cfa_register 7
 255:./Lib/Src/stm32f4xx_dma2d.c ****     /* Start DMA2D transfer by setting START bit */
 256:./Lib/Src/stm32f4xx_dma2d.c ****     DMA2D->CR |= (uint32_t)DMA2D_CR_ABORT;
 465              		.loc 1 256 10
 466 0004 054B     		ldr	r3, .L15
 467 0006 1B68     		ldr	r3, [r3]
 468 0008 044A     		ldr	r2, .L15
 469              		.loc 1 256 15
 470 000a 43F00403 		orr	r3, r3, #4
 471 000e 1360     		str	r3, [r2]
 257:./Lib/Src/stm32f4xx_dma2d.c **** 
 258:./Lib/Src/stm32f4xx_dma2d.c **** }
 472              		.loc 1 258 1
 473 0010 00BF     		nop
 474 0012 BD46     		mov	sp, r7
 475              		.cfi_def_cfa_register 13
 476              		@ sp needed
 477 0014 5DF8047B 		ldr	r7, [sp], #4
 478              		.cfi_restore 7
 479              		.cfi_def_cfa_offset 0
 480 0018 7047     		bx	lr
 481              	.L16:
 482 001a 00BF     		.align	2
 483              	.L15:
 484 001c 00B00240 		.word	1073917952
 485              		.cfi_endproc
 486              	.LFE127:
 488              		.section	.text.DMA2D_Suspend,"ax",%progbits
 489              		.align	1
 490              		.global	DMA2D_Suspend
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
ARM GAS  /tmp/ccspMsk0.s 			page 14


 495              	DMA2D_Suspend:
 496              	.LFB128:
 259:./Lib/Src/stm32f4xx_dma2d.c **** 
 260:./Lib/Src/stm32f4xx_dma2d.c **** /**
 261:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Stop or continue the DMA2D transfer.
 262:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  NewState: new state of the DMA2D peripheral.
 263:./Lib/Src/stm32f4xx_dma2d.c ****   *   This parameter can be: ENABLE or DISABLE.
 264:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 265:./Lib/Src/stm32f4xx_dma2d.c ****   */
 266:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_Suspend(FunctionalState NewState)
 267:./Lib/Src/stm32f4xx_dma2d.c **** {
 497              		.loc 1 267 1
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 8
 500              		@ frame_needed = 1, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 502 0000 80B4     		push	{r7}
 503              		.cfi_def_cfa_offset 4
 504              		.cfi_offset 7, -4
 505 0002 83B0     		sub	sp, sp, #12
 506              		.cfi_def_cfa_offset 16
 507 0004 00AF     		add	r7, sp, #0
 508              		.cfi_def_cfa_register 7
 509 0006 0346     		mov	r3, r0
 510 0008 FB71     		strb	r3, [r7, #7]
 268:./Lib/Src/stm32f4xx_dma2d.c ****   /* Check the parameters */
 269:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 270:./Lib/Src/stm32f4xx_dma2d.c **** 
 271:./Lib/Src/stm32f4xx_dma2d.c ****   if (NewState != DISABLE)
 511              		.loc 1 271 6
 512 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 513 000c 002B     		cmp	r3, #0
 514 000e 06D0     		beq	.L18
 272:./Lib/Src/stm32f4xx_dma2d.c ****   {
 273:./Lib/Src/stm32f4xx_dma2d.c ****     /* Suspend DMA2D transfer by setting STOP bit */
 274:./Lib/Src/stm32f4xx_dma2d.c ****     DMA2D->CR |= (uint32_t)DMA2D_CR_SUSP;
 515              		.loc 1 274 10
 516 0010 094B     		ldr	r3, .L21
 517 0012 1B68     		ldr	r3, [r3]
 518 0014 084A     		ldr	r2, .L21
 519              		.loc 1 274 15
 520 0016 43F00203 		orr	r3, r3, #2
 521 001a 1360     		str	r3, [r2]
 275:./Lib/Src/stm32f4xx_dma2d.c ****   }
 276:./Lib/Src/stm32f4xx_dma2d.c ****   else
 277:./Lib/Src/stm32f4xx_dma2d.c ****   {
 278:./Lib/Src/stm32f4xx_dma2d.c ****     /* Continue DMA2D transfer by clearing STOP bit */
 279:./Lib/Src/stm32f4xx_dma2d.c ****     DMA2D->CR &= ~(uint32_t)DMA2D_CR_SUSP;
 280:./Lib/Src/stm32f4xx_dma2d.c ****   }
 281:./Lib/Src/stm32f4xx_dma2d.c **** }
 522              		.loc 1 281 1
 523 001c 05E0     		b	.L20
 524              	.L18:
 279:./Lib/Src/stm32f4xx_dma2d.c ****   }
 525              		.loc 1 279 10
 526 001e 064B     		ldr	r3, .L21
 527 0020 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccspMsk0.s 			page 15


 528 0022 054A     		ldr	r2, .L21
 279:./Lib/Src/stm32f4xx_dma2d.c ****   }
 529              		.loc 1 279 15
 530 0024 23F00203 		bic	r3, r3, #2
 531 0028 1360     		str	r3, [r2]
 532              	.L20:
 533              		.loc 1 281 1
 534 002a 00BF     		nop
 535 002c 0C37     		adds	r7, r7, #12
 536              		.cfi_def_cfa_offset 4
 537 002e BD46     		mov	sp, r7
 538              		.cfi_def_cfa_register 13
 539              		@ sp needed
 540 0030 5DF8047B 		ldr	r7, [sp], #4
 541              		.cfi_restore 7
 542              		.cfi_def_cfa_offset 0
 543 0034 7047     		bx	lr
 544              	.L22:
 545 0036 00BF     		.align	2
 546              	.L21:
 547 0038 00B00240 		.word	1073917952
 548              		.cfi_endproc
 549              	.LFE128:
 551              		.section	.text.DMA2D_FGConfig,"ax",%progbits
 552              		.align	1
 553              		.global	DMA2D_FGConfig
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 558              	DMA2D_FGConfig:
 559              	.LFB129:
 282:./Lib/Src/stm32f4xx_dma2d.c **** 
 283:./Lib/Src/stm32f4xx_dma2d.c **** /**
 284:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Configures the Foreground according to the specified parameters
 285:./Lib/Src/stm32f4xx_dma2d.c ****   *         in the DMA2D_FGStruct.
 286:./Lib/Src/stm32f4xx_dma2d.c ****   * @note   This function can be used only when the transfer is disabled.
 287:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_FGStruct: pointer to a DMA2D_FGTypeDef structure that contains
 288:./Lib/Src/stm32f4xx_dma2d.c ****   *         the configuration information for the specified Background.
 289:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 290:./Lib/Src/stm32f4xx_dma2d.c ****   */
 291:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_FGConfig(DMA2D_FG_InitTypeDef* DMA2D_FG_InitStruct)
 292:./Lib/Src/stm32f4xx_dma2d.c **** {
 560              		.loc 1 292 1
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 32
 563              		@ frame_needed = 1, uses_anonymous_args = 0
 564              		@ link register save eliminated.
 565 0000 80B4     		push	{r7}
 566              		.cfi_def_cfa_offset 4
 567              		.cfi_offset 7, -4
 568 0002 89B0     		sub	sp, sp, #36
 569              		.cfi_def_cfa_offset 40
 570 0004 00AF     		add	r7, sp, #0
 571              		.cfi_def_cfa_register 7
 572 0006 7860     		str	r0, [r7, #4]
 293:./Lib/Src/stm32f4xx_dma2d.c **** 
 294:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t fg_clutcolormode = 0;
ARM GAS  /tmp/ccspMsk0.s 			page 16


 573              		.loc 1 294 12
 574 0008 0023     		movs	r3, #0
 575 000a FB61     		str	r3, [r7, #28]
 295:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t fg_clutsize = 0;
 576              		.loc 1 295 12
 577 000c 0023     		movs	r3, #0
 578 000e BB61     		str	r3, [r7, #24]
 296:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t fg_alpha_mode = 0;
 579              		.loc 1 296 12
 580 0010 0023     		movs	r3, #0
 581 0012 7B61     		str	r3, [r7, #20]
 297:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t fg_alphavalue = 0;
 582              		.loc 1 297 12
 583 0014 0023     		movs	r3, #0
 584 0016 3B61     		str	r3, [r7, #16]
 298:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t fg_colorgreen = 0;
 585              		.loc 1 298 12
 586 0018 0023     		movs	r3, #0
 587 001a FB60     		str	r3, [r7, #12]
 299:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t fg_colorred = 0;
 588              		.loc 1 299 12
 589 001c 0023     		movs	r3, #0
 590 001e BB60     		str	r3, [r7, #8]
 300:./Lib/Src/stm32f4xx_dma2d.c **** 
 301:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_FGO(DMA2D_FG_InitStruct->DMA2D_FGO));
 302:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_FGCM(DMA2D_FG_InitStruct->DMA2D_FGCM));
 303:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_FG_CLUT_CM(DMA2D_FG_InitStruct->DMA2D_FG_CLUT_CM));
 304:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_FG_CLUT_SIZE(DMA2D_FG_InitStruct->DMA2D_FG_CLUT_SIZE));
 305:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_FG_ALPHA_MODE(DMA2D_FG_InitStruct->DMA2D_FGPFC_ALPHA_MODE));
 306:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_FG_ALPHA_VALUE(DMA2D_FG_InitStruct->DMA2D_FGPFC_ALPHA_VALUE));
 307:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_FGC_BLUE(DMA2D_FG_InitStruct->DMA2D_FGC_BLUE));
 308:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_FGC_GREEN(DMA2D_FG_InitStruct->DMA2D_FGC_GREEN));
 309:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_FGC_RED(DMA2D_FG_InitStruct->DMA2D_FGC_RED));
 310:./Lib/Src/stm32f4xx_dma2d.c **** 
 311:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures the FG memory address */
 312:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->FGMAR = (DMA2D_FG_InitStruct->DMA2D_FGMA);
 591              		.loc 1 312 8
 592 0020 2D4A     		ldr	r2, .L24
 593              		.loc 1 312 38
 594 0022 7B68     		ldr	r3, [r7, #4]
 595 0024 1B68     		ldr	r3, [r3]
 596              		.loc 1 312 16
 597 0026 D360     		str	r3, [r2, #12]
 313:./Lib/Src/stm32f4xx_dma2d.c **** 
 314:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures the FG offset */
 315:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->FGOR &= ~(uint32_t)DMA2D_FGOR_LO;
 598              		.loc 1 315 8
 599 0028 2B4B     		ldr	r3, .L24
 600 002a 1B69     		ldr	r3, [r3, #16]
 601 002c 2A4A     		ldr	r2, .L24
 602              		.loc 1 315 15
 603 002e 23F47F53 		bic	r3, r3, #16320
 604 0032 23F03F03 		bic	r3, r3, #63
 605 0036 1361     		str	r3, [r2, #16]
 316:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->FGOR |= (DMA2D_FG_InitStruct->DMA2D_FGO);
 606              		.loc 1 316 8
 607 0038 274B     		ldr	r3, .L24
ARM GAS  /tmp/ccspMsk0.s 			page 17


 608 003a 1A69     		ldr	r2, [r3, #16]
 609              		.loc 1 316 38
 610 003c 7B68     		ldr	r3, [r7, #4]
 611 003e 5B68     		ldr	r3, [r3, #4]
 612              		.loc 1 316 8
 613 0040 2549     		ldr	r1, .L24
 614              		.loc 1 316 15
 615 0042 1343     		orrs	r3, r3, r2
 616 0044 0B61     		str	r3, [r1, #16]
 317:./Lib/Src/stm32f4xx_dma2d.c **** 
 318:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures foreground Pixel Format Convertor */
 319:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->FGPFCCR &= (uint32_t)PFCCR_MASK;
 617              		.loc 1 319 8
 618 0046 244B     		ldr	r3, .L24
 619 0048 DA69     		ldr	r2, [r3, #28]
 620 004a 2349     		ldr	r1, .L24
 621              		.loc 1 319 18
 622 004c 234B     		ldr	r3, .L24+4
 623 004e 1340     		ands	r3, r3, r2
 624 0050 CB61     		str	r3, [r1, #28]
 320:./Lib/Src/stm32f4xx_dma2d.c ****   fg_clutcolormode = DMA2D_FG_InitStruct->DMA2D_FG_CLUT_CM << 4;
 625              		.loc 1 320 41
 626 0052 7B68     		ldr	r3, [r7, #4]
 627 0054 DB68     		ldr	r3, [r3, #12]
 628              		.loc 1 320 20
 629 0056 1B01     		lsls	r3, r3, #4
 630 0058 FB61     		str	r3, [r7, #28]
 321:./Lib/Src/stm32f4xx_dma2d.c ****   fg_clutsize = DMA2D_FG_InitStruct->DMA2D_FG_CLUT_SIZE << 8;
 631              		.loc 1 321 36
 632 005a 7B68     		ldr	r3, [r7, #4]
 633 005c 1B69     		ldr	r3, [r3, #16]
 634              		.loc 1 321 15
 635 005e 1B02     		lsls	r3, r3, #8
 636 0060 BB61     		str	r3, [r7, #24]
 322:./Lib/Src/stm32f4xx_dma2d.c ****   fg_alpha_mode = DMA2D_FG_InitStruct->DMA2D_FGPFC_ALPHA_MODE << 16;
 637              		.loc 1 322 38
 638 0062 7B68     		ldr	r3, [r7, #4]
 639 0064 5B69     		ldr	r3, [r3, #20]
 640              		.loc 1 322 17
 641 0066 1B04     		lsls	r3, r3, #16
 642 0068 7B61     		str	r3, [r7, #20]
 323:./Lib/Src/stm32f4xx_dma2d.c ****   fg_alphavalue = DMA2D_FG_InitStruct->DMA2D_FGPFC_ALPHA_VALUE << 24;
 643              		.loc 1 323 38
 644 006a 7B68     		ldr	r3, [r7, #4]
 645 006c 9B69     		ldr	r3, [r3, #24]
 646              		.loc 1 323 17
 647 006e 1B06     		lsls	r3, r3, #24
 648 0070 3B61     		str	r3, [r7, #16]
 324:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->FGPFCCR |= (DMA2D_FG_InitStruct->DMA2D_FGCM | fg_clutcolormode | fg_clutsize | \
 649              		.loc 1 324 8
 650 0072 194B     		ldr	r3, .L24
 651 0074 DA69     		ldr	r2, [r3, #28]
 652              		.loc 1 324 41
 653 0076 7B68     		ldr	r3, [r7, #4]
 654 0078 9968     		ldr	r1, [r3, #8]
 655              		.loc 1 324 54
 656 007a FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/ccspMsk0.s 			page 18


 657 007c 1943     		orrs	r1, r1, r3
 658              		.loc 1 324 73
 659 007e BB69     		ldr	r3, [r7, #24]
 660 0080 1943     		orrs	r1, r1, r3
 661              		.loc 1 324 87
 662 0082 7B69     		ldr	r3, [r7, #20]
 663 0084 1943     		orrs	r1, r1, r3
 325:./Lib/Src/stm32f4xx_dma2d.c ****                     fg_alpha_mode | fg_alphavalue);
 664              		.loc 1 325 35
 665 0086 3B69     		ldr	r3, [r7, #16]
 666 0088 0B43     		orrs	r3, r3, r1
 324:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->FGPFCCR |= (DMA2D_FG_InitStruct->DMA2D_FGCM | fg_clutcolormode | fg_clutsize | \
 667              		.loc 1 324 8
 668 008a 1349     		ldr	r1, .L24
 324:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->FGPFCCR |= (DMA2D_FG_InitStruct->DMA2D_FGCM | fg_clutcolormode | fg_clutsize | \
 669              		.loc 1 324 18
 670 008c 1343     		orrs	r3, r3, r2
 671 008e CB61     		str	r3, [r1, #28]
 326:./Lib/Src/stm32f4xx_dma2d.c **** 
 327:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures foreground color */
 328:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->FGCOLR &= ~(DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED);
 672              		.loc 1 328 8
 673 0090 114B     		ldr	r3, .L24
 674 0092 1B6A     		ldr	r3, [r3, #32]
 675 0094 104A     		ldr	r2, .L24
 676              		.loc 1 328 17
 677 0096 03F07F43 		and	r3, r3, #-16777216
 678 009a 1362     		str	r3, [r2, #32]
 329:./Lib/Src/stm32f4xx_dma2d.c ****   fg_colorgreen = DMA2D_FG_InitStruct->DMA2D_FGC_GREEN << 8;
 679              		.loc 1 329 38
 680 009c 7B68     		ldr	r3, [r7, #4]
 681 009e 1B6A     		ldr	r3, [r3, #32]
 682              		.loc 1 329 17
 683 00a0 1B02     		lsls	r3, r3, #8
 684 00a2 FB60     		str	r3, [r7, #12]
 330:./Lib/Src/stm32f4xx_dma2d.c ****   fg_colorred = DMA2D_FG_InitStruct->DMA2D_FGC_RED << 16;
 685              		.loc 1 330 36
 686 00a4 7B68     		ldr	r3, [r7, #4]
 687 00a6 5B6A     		ldr	r3, [r3, #36]
 688              		.loc 1 330 15
 689 00a8 1B04     		lsls	r3, r3, #16
 690 00aa BB60     		str	r3, [r7, #8]
 331:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->FGCOLR |= (DMA2D_FG_InitStruct->DMA2D_FGC_BLUE | fg_colorgreen | fg_colorred);
 691              		.loc 1 331 8
 692 00ac 0A4B     		ldr	r3, .L24
 693 00ae 1A6A     		ldr	r2, [r3, #32]
 694              		.loc 1 331 40
 695 00b0 7B68     		ldr	r3, [r7, #4]
 696 00b2 D969     		ldr	r1, [r3, #28]
 697              		.loc 1 331 57
 698 00b4 FB68     		ldr	r3, [r7, #12]
 699 00b6 1943     		orrs	r1, r1, r3
 700              		.loc 1 331 73
 701 00b8 BB68     		ldr	r3, [r7, #8]
 702 00ba 0B43     		orrs	r3, r3, r1
 703              		.loc 1 331 8
 704 00bc 0649     		ldr	r1, .L24
ARM GAS  /tmp/ccspMsk0.s 			page 19


 705              		.loc 1 331 17
 706 00be 1343     		orrs	r3, r3, r2
 707 00c0 0B62     		str	r3, [r1, #32]
 332:./Lib/Src/stm32f4xx_dma2d.c **** 
 333:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures foreground CLUT memory address */
 334:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->FGCMAR = DMA2D_FG_InitStruct->DMA2D_FGCMAR;
 708              		.loc 1 334 8
 709 00c2 054A     		ldr	r2, .L24
 710              		.loc 1 334 38
 711 00c4 7B68     		ldr	r3, [r7, #4]
 712 00c6 9B6A     		ldr	r3, [r3, #40]
 713              		.loc 1 334 17
 714 00c8 D362     		str	r3, [r2, #44]
 335:./Lib/Src/stm32f4xx_dma2d.c **** }
 715              		.loc 1 335 1
 716 00ca 00BF     		nop
 717 00cc 2437     		adds	r7, r7, #36
 718              		.cfi_def_cfa_offset 4
 719 00ce BD46     		mov	sp, r7
 720              		.cfi_def_cfa_register 13
 721              		@ sp needed
 722 00d0 5DF8047B 		ldr	r7, [sp], #4
 723              		.cfi_restore 7
 724              		.cfi_def_cfa_offset 0
 725 00d4 7047     		bx	lr
 726              	.L25:
 727 00d6 00BF     		.align	2
 728              	.L24:
 729 00d8 00B00240 		.word	1073917952
 730 00dc C000FC00 		.word	16515264
 731              		.cfi_endproc
 732              	.LFE129:
 734              		.section	.text.DMA2D_FG_StructInit,"ax",%progbits
 735              		.align	1
 736              		.global	DMA2D_FG_StructInit
 737              		.syntax unified
 738              		.thumb
 739              		.thumb_func
 741              	DMA2D_FG_StructInit:
 742              	.LFB130:
 336:./Lib/Src/stm32f4xx_dma2d.c **** 
 337:./Lib/Src/stm32f4xx_dma2d.c **** /**
 338:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Fills each DMA2D_FGStruct member with its default value.
 339:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_FGStruct: pointer to a DMA2D_FGTypeDef structure which will
 340:./Lib/Src/stm32f4xx_dma2d.c ****   *         be initialized.
 341:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 342:./Lib/Src/stm32f4xx_dma2d.c ****   */
 343:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_FG_StructInit(DMA2D_FG_InitTypeDef* DMA2D_FG_InitStruct)
 344:./Lib/Src/stm32f4xx_dma2d.c **** {
 743              		.loc 1 344 1
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 8
 746              		@ frame_needed = 1, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748 0000 80B4     		push	{r7}
 749              		.cfi_def_cfa_offset 4
 750              		.cfi_offset 7, -4
ARM GAS  /tmp/ccspMsk0.s 			page 20


 751 0002 83B0     		sub	sp, sp, #12
 752              		.cfi_def_cfa_offset 16
 753 0004 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 755 0006 7860     		str	r0, [r7, #4]
 345:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D foreground memory address */
 346:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_FG_InitStruct->DMA2D_FGMA = 0x00;
 756              		.loc 1 346 35
 757 0008 7B68     		ldr	r3, [r7, #4]
 758 000a 0022     		movs	r2, #0
 759 000c 1A60     		str	r2, [r3]
 347:./Lib/Src/stm32f4xx_dma2d.c **** 
 348:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D foreground offset */
 349:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_FG_InitStruct->DMA2D_FGO = 0x00;
 760              		.loc 1 349 34
 761 000e 7B68     		ldr	r3, [r7, #4]
 762 0010 0022     		movs	r2, #0
 763 0012 5A60     		str	r2, [r3, #4]
 350:./Lib/Src/stm32f4xx_dma2d.c **** 
 351:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D foreground color mode */
 352:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_FG_InitStruct->DMA2D_FGCM = CM_ARGB8888;
 764              		.loc 1 352 35
 765 0014 7B68     		ldr	r3, [r7, #4]
 766 0016 0022     		movs	r2, #0
 767 0018 9A60     		str	r2, [r3, #8]
 353:./Lib/Src/stm32f4xx_dma2d.c **** 
 354:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D foreground CLUT color mode */
 355:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_FG_InitStruct->DMA2D_FG_CLUT_CM = CLUT_CM_ARGB8888;
 768              		.loc 1 355 41
 769 001a 7B68     		ldr	r3, [r7, #4]
 770 001c 0022     		movs	r2, #0
 771 001e DA60     		str	r2, [r3, #12]
 356:./Lib/Src/stm32f4xx_dma2d.c **** 
 357:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D foreground CLUT size */
 358:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_FG_InitStruct->DMA2D_FG_CLUT_SIZE = 0x00;
 772              		.loc 1 358 43
 773 0020 7B68     		ldr	r3, [r7, #4]
 774 0022 0022     		movs	r2, #0
 775 0024 1A61     		str	r2, [r3, #16]
 359:./Lib/Src/stm32f4xx_dma2d.c **** 
 360:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D foreground alpha mode */
 361:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_FG_InitStruct->DMA2D_FGPFC_ALPHA_MODE = NO_MODIF_ALPHA_VALUE;
 776              		.loc 1 361 47
 777 0026 7B68     		ldr	r3, [r7, #4]
 778 0028 0022     		movs	r2, #0
 779 002a 5A61     		str	r2, [r3, #20]
 362:./Lib/Src/stm32f4xx_dma2d.c **** 
 363:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D foreground alpha value */
 364:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_FG_InitStruct->DMA2D_FGPFC_ALPHA_VALUE = 0x00;
 780              		.loc 1 364 48
 781 002c 7B68     		ldr	r3, [r7, #4]
 782 002e 0022     		movs	r2, #0
 783 0030 9A61     		str	r2, [r3, #24]
 365:./Lib/Src/stm32f4xx_dma2d.c **** 
 366:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D foreground blue value */
 367:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_FG_InitStruct->DMA2D_FGC_BLUE = 0x00;
 784              		.loc 1 367 39
ARM GAS  /tmp/ccspMsk0.s 			page 21


 785 0032 7B68     		ldr	r3, [r7, #4]
 786 0034 0022     		movs	r2, #0
 787 0036 DA61     		str	r2, [r3, #28]
 368:./Lib/Src/stm32f4xx_dma2d.c **** 
 369:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D foreground green value */
 370:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_FG_InitStruct->DMA2D_FGC_GREEN = 0x00;
 788              		.loc 1 370 40
 789 0038 7B68     		ldr	r3, [r7, #4]
 790 003a 0022     		movs	r2, #0
 791 003c 1A62     		str	r2, [r3, #32]
 371:./Lib/Src/stm32f4xx_dma2d.c **** 
 372:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D foreground red value */
 373:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_FG_InitStruct->DMA2D_FGC_RED = 0x00;
 792              		.loc 1 373 38
 793 003e 7B68     		ldr	r3, [r7, #4]
 794 0040 0022     		movs	r2, #0
 795 0042 5A62     		str	r2, [r3, #36]
 374:./Lib/Src/stm32f4xx_dma2d.c **** 
 375:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D foreground CLUT memory address */
 376:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_FG_InitStruct->DMA2D_FGCMAR = 0x00;
 796              		.loc 1 376 37
 797 0044 7B68     		ldr	r3, [r7, #4]
 798 0046 0022     		movs	r2, #0
 799 0048 9A62     		str	r2, [r3, #40]
 377:./Lib/Src/stm32f4xx_dma2d.c **** }
 800              		.loc 1 377 1
 801 004a 00BF     		nop
 802 004c 0C37     		adds	r7, r7, #12
 803              		.cfi_def_cfa_offset 4
 804 004e BD46     		mov	sp, r7
 805              		.cfi_def_cfa_register 13
 806              		@ sp needed
 807 0050 5DF8047B 		ldr	r7, [sp], #4
 808              		.cfi_restore 7
 809              		.cfi_def_cfa_offset 0
 810 0054 7047     		bx	lr
 811              		.cfi_endproc
 812              	.LFE130:
 814              		.section	.text.DMA2D_BGConfig,"ax",%progbits
 815              		.align	1
 816              		.global	DMA2D_BGConfig
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 821              	DMA2D_BGConfig:
 822              	.LFB131:
 378:./Lib/Src/stm32f4xx_dma2d.c **** 
 379:./Lib/Src/stm32f4xx_dma2d.c **** 
 380:./Lib/Src/stm32f4xx_dma2d.c **** /**
 381:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Configures the Background according to the specified parameters
 382:./Lib/Src/stm32f4xx_dma2d.c ****   *         in the DMA2D_BGStruct.
 383:./Lib/Src/stm32f4xx_dma2d.c ****   * @note   This function can be used only when the transfer is disabled.
 384:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_BGStruct: pointer to a DMA2D_BGTypeDef structure that contains
 385:./Lib/Src/stm32f4xx_dma2d.c ****   *         the configuration information for the specified Background.
 386:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 387:./Lib/Src/stm32f4xx_dma2d.c ****   */
 388:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_BGConfig(DMA2D_BG_InitTypeDef* DMA2D_BG_InitStruct)
ARM GAS  /tmp/ccspMsk0.s 			page 22


 389:./Lib/Src/stm32f4xx_dma2d.c **** {
 823              		.loc 1 389 1
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 32
 826              		@ frame_needed = 1, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828 0000 80B4     		push	{r7}
 829              		.cfi_def_cfa_offset 4
 830              		.cfi_offset 7, -4
 831 0002 89B0     		sub	sp, sp, #36
 832              		.cfi_def_cfa_offset 40
 833 0004 00AF     		add	r7, sp, #0
 834              		.cfi_def_cfa_register 7
 835 0006 7860     		str	r0, [r7, #4]
 390:./Lib/Src/stm32f4xx_dma2d.c **** 
 391:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t bg_clutcolormode = 0;
 836              		.loc 1 391 12
 837 0008 0023     		movs	r3, #0
 838 000a FB61     		str	r3, [r7, #28]
 392:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t bg_clutsize = 0;
 839              		.loc 1 392 12
 840 000c 0023     		movs	r3, #0
 841 000e BB61     		str	r3, [r7, #24]
 393:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t bg_alpha_mode = 0;
 842              		.loc 1 393 12
 843 0010 0023     		movs	r3, #0
 844 0012 7B61     		str	r3, [r7, #20]
 394:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t bg_alphavalue = 0;
 845              		.loc 1 394 12
 846 0014 0023     		movs	r3, #0
 847 0016 3B61     		str	r3, [r7, #16]
 395:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t bg_colorgreen = 0;
 848              		.loc 1 395 12
 849 0018 0023     		movs	r3, #0
 850 001a FB60     		str	r3, [r7, #12]
 396:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t bg_colorred = 0;
 851              		.loc 1 396 12
 852 001c 0023     		movs	r3, #0
 853 001e BB60     		str	r3, [r7, #8]
 397:./Lib/Src/stm32f4xx_dma2d.c **** 
 398:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_BGO(DMA2D_BG_InitStruct->DMA2D_BGO));
 399:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_BGCM(DMA2D_BG_InitStruct->DMA2D_BGCM));
 400:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_BG_CLUT_CM(DMA2D_BG_InitStruct->DMA2D_BG_CLUT_CM));
 401:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_BG_CLUT_SIZE(DMA2D_BG_InitStruct->DMA2D_BG_CLUT_SIZE));
 402:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_BG_ALPHA_MODE(DMA2D_BG_InitStruct->DMA2D_BGPFC_ALPHA_MODE));
 403:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_BG_ALPHA_VALUE(DMA2D_BG_InitStruct->DMA2D_BGPFC_ALPHA_VALUE));
 404:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_BGC_BLUE(DMA2D_BG_InitStruct->DMA2D_BGC_BLUE));
 405:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_BGC_GREEN(DMA2D_BG_InitStruct->DMA2D_BGC_GREEN));
 406:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_BGC_RED(DMA2D_BG_InitStruct->DMA2D_BGC_RED));
 407:./Lib/Src/stm32f4xx_dma2d.c **** 
 408:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures the BG memory address */
 409:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->BGMAR = (DMA2D_BG_InitStruct->DMA2D_BGMA);
 854              		.loc 1 409 8
 855 0020 2D4A     		ldr	r2, .L28
 856              		.loc 1 409 38
 857 0022 7B68     		ldr	r3, [r7, #4]
 858 0024 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccspMsk0.s 			page 23


 859              		.loc 1 409 16
 860 0026 5361     		str	r3, [r2, #20]
 410:./Lib/Src/stm32f4xx_dma2d.c **** 
 411:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures the BG offset */
 412:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->BGOR &= ~(uint32_t)DMA2D_BGOR_LO;
 861              		.loc 1 412 8
 862 0028 2B4B     		ldr	r3, .L28
 863 002a 9B69     		ldr	r3, [r3, #24]
 864 002c 2A4A     		ldr	r2, .L28
 865              		.loc 1 412 15
 866 002e 23F47F53 		bic	r3, r3, #16320
 867 0032 23F03F03 		bic	r3, r3, #63
 868 0036 9361     		str	r3, [r2, #24]
 413:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->BGOR |= (DMA2D_BG_InitStruct->DMA2D_BGO);
 869              		.loc 1 413 8
 870 0038 274B     		ldr	r3, .L28
 871 003a 9A69     		ldr	r2, [r3, #24]
 872              		.loc 1 413 38
 873 003c 7B68     		ldr	r3, [r7, #4]
 874 003e 5B68     		ldr	r3, [r3, #4]
 875              		.loc 1 413 8
 876 0040 2549     		ldr	r1, .L28
 877              		.loc 1 413 15
 878 0042 1343     		orrs	r3, r3, r2
 879 0044 8B61     		str	r3, [r1, #24]
 414:./Lib/Src/stm32f4xx_dma2d.c **** 
 415:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures background Pixel Format Convertor */
 416:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->BGPFCCR &= (uint32_t)PFCCR_MASK;
 880              		.loc 1 416 8
 881 0046 244B     		ldr	r3, .L28
 882 0048 5A6A     		ldr	r2, [r3, #36]
 883 004a 2349     		ldr	r1, .L28
 884              		.loc 1 416 18
 885 004c 234B     		ldr	r3, .L28+4
 886 004e 1340     		ands	r3, r3, r2
 887 0050 4B62     		str	r3, [r1, #36]
 417:./Lib/Src/stm32f4xx_dma2d.c ****   bg_clutcolormode = DMA2D_BG_InitStruct->DMA2D_BG_CLUT_CM << 4;
 888              		.loc 1 417 41
 889 0052 7B68     		ldr	r3, [r7, #4]
 890 0054 DB68     		ldr	r3, [r3, #12]
 891              		.loc 1 417 20
 892 0056 1B01     		lsls	r3, r3, #4
 893 0058 FB61     		str	r3, [r7, #28]
 418:./Lib/Src/stm32f4xx_dma2d.c ****   bg_clutsize = DMA2D_BG_InitStruct->DMA2D_BG_CLUT_SIZE << 8;
 894              		.loc 1 418 36
 895 005a 7B68     		ldr	r3, [r7, #4]
 896 005c 1B69     		ldr	r3, [r3, #16]
 897              		.loc 1 418 15
 898 005e 1B02     		lsls	r3, r3, #8
 899 0060 BB61     		str	r3, [r7, #24]
 419:./Lib/Src/stm32f4xx_dma2d.c ****   bg_alpha_mode = DMA2D_BG_InitStruct->DMA2D_BGPFC_ALPHA_MODE << 16;
 900              		.loc 1 419 38
 901 0062 7B68     		ldr	r3, [r7, #4]
 902 0064 5B69     		ldr	r3, [r3, #20]
 903              		.loc 1 419 17
 904 0066 1B04     		lsls	r3, r3, #16
 905 0068 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccspMsk0.s 			page 24


 420:./Lib/Src/stm32f4xx_dma2d.c ****   bg_alphavalue = DMA2D_BG_InitStruct->DMA2D_BGPFC_ALPHA_VALUE << 24;
 906              		.loc 1 420 38
 907 006a 7B68     		ldr	r3, [r7, #4]
 908 006c 9B69     		ldr	r3, [r3, #24]
 909              		.loc 1 420 17
 910 006e 1B06     		lsls	r3, r3, #24
 911 0070 3B61     		str	r3, [r7, #16]
 421:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->BGPFCCR |= (DMA2D_BG_InitStruct->DMA2D_BGCM | bg_clutcolormode | bg_clutsize | \
 912              		.loc 1 421 8
 913 0072 194B     		ldr	r3, .L28
 914 0074 5A6A     		ldr	r2, [r3, #36]
 915              		.loc 1 421 41
 916 0076 7B68     		ldr	r3, [r7, #4]
 917 0078 9968     		ldr	r1, [r3, #8]
 918              		.loc 1 421 54
 919 007a FB69     		ldr	r3, [r7, #28]
 920 007c 1943     		orrs	r1, r1, r3
 921              		.loc 1 421 73
 922 007e BB69     		ldr	r3, [r7, #24]
 923 0080 1943     		orrs	r1, r1, r3
 924              		.loc 1 421 87
 925 0082 7B69     		ldr	r3, [r7, #20]
 926 0084 1943     		orrs	r1, r1, r3
 422:./Lib/Src/stm32f4xx_dma2d.c ****                     bg_alpha_mode | bg_alphavalue);
 927              		.loc 1 422 35
 928 0086 3B69     		ldr	r3, [r7, #16]
 929 0088 0B43     		orrs	r3, r3, r1
 421:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->BGPFCCR |= (DMA2D_BG_InitStruct->DMA2D_BGCM | bg_clutcolormode | bg_clutsize | \
 930              		.loc 1 421 8
 931 008a 1349     		ldr	r1, .L28
 421:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->BGPFCCR |= (DMA2D_BG_InitStruct->DMA2D_BGCM | bg_clutcolormode | bg_clutsize | \
 932              		.loc 1 421 18
 933 008c 1343     		orrs	r3, r3, r2
 934 008e 4B62     		str	r3, [r1, #36]
 423:./Lib/Src/stm32f4xx_dma2d.c **** 
 424:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures background color */
 425:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->BGCOLR &= ~(DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | DMA2D_BGCOLR_RED);
 935              		.loc 1 425 8
 936 0090 114B     		ldr	r3, .L28
 937 0092 9B6A     		ldr	r3, [r3, #40]
 938 0094 104A     		ldr	r2, .L28
 939              		.loc 1 425 17
 940 0096 03F07F43 		and	r3, r3, #-16777216
 941 009a 9362     		str	r3, [r2, #40]
 426:./Lib/Src/stm32f4xx_dma2d.c ****   bg_colorgreen = DMA2D_BG_InitStruct->DMA2D_BGC_GREEN << 8;
 942              		.loc 1 426 38
 943 009c 7B68     		ldr	r3, [r7, #4]
 944 009e 1B6A     		ldr	r3, [r3, #32]
 945              		.loc 1 426 17
 946 00a0 1B02     		lsls	r3, r3, #8
 947 00a2 FB60     		str	r3, [r7, #12]
 427:./Lib/Src/stm32f4xx_dma2d.c ****   bg_colorred = DMA2D_BG_InitStruct->DMA2D_BGC_RED << 16;
 948              		.loc 1 427 36
 949 00a4 7B68     		ldr	r3, [r7, #4]
 950 00a6 5B6A     		ldr	r3, [r3, #36]
 951              		.loc 1 427 15
 952 00a8 1B04     		lsls	r3, r3, #16
ARM GAS  /tmp/ccspMsk0.s 			page 25


 953 00aa BB60     		str	r3, [r7, #8]
 428:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->BGCOLR |= (DMA2D_BG_InitStruct->DMA2D_BGC_BLUE | bg_colorgreen | bg_colorred);
 954              		.loc 1 428 8
 955 00ac 0A4B     		ldr	r3, .L28
 956 00ae 9A6A     		ldr	r2, [r3, #40]
 957              		.loc 1 428 40
 958 00b0 7B68     		ldr	r3, [r7, #4]
 959 00b2 D969     		ldr	r1, [r3, #28]
 960              		.loc 1 428 57
 961 00b4 FB68     		ldr	r3, [r7, #12]
 962 00b6 1943     		orrs	r1, r1, r3
 963              		.loc 1 428 73
 964 00b8 BB68     		ldr	r3, [r7, #8]
 965 00ba 0B43     		orrs	r3, r3, r1
 966              		.loc 1 428 8
 967 00bc 0649     		ldr	r1, .L28
 968              		.loc 1 428 17
 969 00be 1343     		orrs	r3, r3, r2
 970 00c0 8B62     		str	r3, [r1, #40]
 429:./Lib/Src/stm32f4xx_dma2d.c ****   
 430:./Lib/Src/stm32f4xx_dma2d.c ****   /* Configures background CLUT memory address */
 431:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->BGCMAR = DMA2D_BG_InitStruct->DMA2D_BGCMAR;
 971              		.loc 1 431 8
 972 00c2 054A     		ldr	r2, .L28
 973              		.loc 1 431 38
 974 00c4 7B68     		ldr	r3, [r7, #4]
 975 00c6 9B6A     		ldr	r3, [r3, #40]
 976              		.loc 1 431 17
 977 00c8 1363     		str	r3, [r2, #48]
 432:./Lib/Src/stm32f4xx_dma2d.c **** 
 433:./Lib/Src/stm32f4xx_dma2d.c **** }
 978              		.loc 1 433 1
 979 00ca 00BF     		nop
 980 00cc 2437     		adds	r7, r7, #36
 981              		.cfi_def_cfa_offset 4
 982 00ce BD46     		mov	sp, r7
 983              		.cfi_def_cfa_register 13
 984              		@ sp needed
 985 00d0 5DF8047B 		ldr	r7, [sp], #4
 986              		.cfi_restore 7
 987              		.cfi_def_cfa_offset 0
 988 00d4 7047     		bx	lr
 989              	.L29:
 990 00d6 00BF     		.align	2
 991              	.L28:
 992 00d8 00B00240 		.word	1073917952
 993 00dc C000FC00 		.word	16515264
 994              		.cfi_endproc
 995              	.LFE131:
 997              		.section	.text.DMA2D_BG_StructInit,"ax",%progbits
 998              		.align	1
 999              		.global	DMA2D_BG_StructInit
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1004              	DMA2D_BG_StructInit:
 1005              	.LFB132:
ARM GAS  /tmp/ccspMsk0.s 			page 26


 434:./Lib/Src/stm32f4xx_dma2d.c **** 
 435:./Lib/Src/stm32f4xx_dma2d.c **** /**
 436:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Fills each DMA2D_BGStruct member with its default value.
 437:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_BGStruct: pointer to a DMA2D_BGTypeDef structure which will
 438:./Lib/Src/stm32f4xx_dma2d.c ****   *         be initialized.
 439:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 440:./Lib/Src/stm32f4xx_dma2d.c ****   */
 441:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_BG_StructInit(DMA2D_BG_InitTypeDef* DMA2D_BG_InitStruct)
 442:./Lib/Src/stm32f4xx_dma2d.c **** {
 1006              		.loc 1 442 1
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 8
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010              		@ link register save eliminated.
 1011 0000 80B4     		push	{r7}
 1012              		.cfi_def_cfa_offset 4
 1013              		.cfi_offset 7, -4
 1014 0002 83B0     		sub	sp, sp, #12
 1015              		.cfi_def_cfa_offset 16
 1016 0004 00AF     		add	r7, sp, #0
 1017              		.cfi_def_cfa_register 7
 1018 0006 7860     		str	r0, [r7, #4]
 443:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D background memory address */
 444:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_BG_InitStruct->DMA2D_BGMA = 0x00;
 1019              		.loc 1 444 35
 1020 0008 7B68     		ldr	r3, [r7, #4]
 1021 000a 0022     		movs	r2, #0
 1022 000c 1A60     		str	r2, [r3]
 445:./Lib/Src/stm32f4xx_dma2d.c **** 
 446:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D background offset */
 447:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_BG_InitStruct->DMA2D_BGO = 0x00;
 1023              		.loc 1 447 34
 1024 000e 7B68     		ldr	r3, [r7, #4]
 1025 0010 0022     		movs	r2, #0
 1026 0012 5A60     		str	r2, [r3, #4]
 448:./Lib/Src/stm32f4xx_dma2d.c **** 
 449:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D background color mode */
 450:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_BG_InitStruct->DMA2D_BGCM = CM_ARGB8888;
 1027              		.loc 1 450 35
 1028 0014 7B68     		ldr	r3, [r7, #4]
 1029 0016 0022     		movs	r2, #0
 1030 0018 9A60     		str	r2, [r3, #8]
 451:./Lib/Src/stm32f4xx_dma2d.c **** 
 452:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D background CLUT color mode */
 453:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_BG_InitStruct->DMA2D_BG_CLUT_CM = CLUT_CM_ARGB8888;
 1031              		.loc 1 453 41
 1032 001a 7B68     		ldr	r3, [r7, #4]
 1033 001c 0022     		movs	r2, #0
 1034 001e DA60     		str	r2, [r3, #12]
 454:./Lib/Src/stm32f4xx_dma2d.c **** 
 455:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D background CLUT size */
 456:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_BG_InitStruct->DMA2D_BG_CLUT_SIZE = 0x00;
 1035              		.loc 1 456 43
 1036 0020 7B68     		ldr	r3, [r7, #4]
 1037 0022 0022     		movs	r2, #0
 1038 0024 1A61     		str	r2, [r3, #16]
 457:./Lib/Src/stm32f4xx_dma2d.c **** 
ARM GAS  /tmp/ccspMsk0.s 			page 27


 458:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D background alpha mode */
 459:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_BG_InitStruct->DMA2D_BGPFC_ALPHA_MODE = NO_MODIF_ALPHA_VALUE;
 1039              		.loc 1 459 47
 1040 0026 7B68     		ldr	r3, [r7, #4]
 1041 0028 0022     		movs	r2, #0
 1042 002a 5A61     		str	r2, [r3, #20]
 460:./Lib/Src/stm32f4xx_dma2d.c **** 
 461:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D background alpha value */
 462:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_BG_InitStruct->DMA2D_BGPFC_ALPHA_VALUE = 0x00;
 1043              		.loc 1 462 48
 1044 002c 7B68     		ldr	r3, [r7, #4]
 1045 002e 0022     		movs	r2, #0
 1046 0030 9A61     		str	r2, [r3, #24]
 463:./Lib/Src/stm32f4xx_dma2d.c **** 
 464:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D background blue value */
 465:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_BG_InitStruct->DMA2D_BGC_BLUE = 0x00;
 1047              		.loc 1 465 39
 1048 0032 7B68     		ldr	r3, [r7, #4]
 1049 0034 0022     		movs	r2, #0
 1050 0036 DA61     		str	r2, [r3, #28]
 466:./Lib/Src/stm32f4xx_dma2d.c **** 
 467:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D background green value */
 468:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_BG_InitStruct->DMA2D_BGC_GREEN = 0x00;
 1051              		.loc 1 468 40
 1052 0038 7B68     		ldr	r3, [r7, #4]
 1053 003a 0022     		movs	r2, #0
 1054 003c 1A62     		str	r2, [r3, #32]
 469:./Lib/Src/stm32f4xx_dma2d.c **** 
 470:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D background red value */
 471:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_BG_InitStruct->DMA2D_BGC_RED = 0x00;
 1055              		.loc 1 471 38
 1056 003e 7B68     		ldr	r3, [r7, #4]
 1057 0040 0022     		movs	r2, #0
 1058 0042 5A62     		str	r2, [r3, #36]
 472:./Lib/Src/stm32f4xx_dma2d.c **** 
 473:./Lib/Src/stm32f4xx_dma2d.c ****   /*!< Initialize the DMA2D background CLUT memory address */
 474:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_BG_InitStruct->DMA2D_BGCMAR = 0x00;
 1059              		.loc 1 474 37
 1060 0044 7B68     		ldr	r3, [r7, #4]
 1061 0046 0022     		movs	r2, #0
 1062 0048 9A62     		str	r2, [r3, #40]
 475:./Lib/Src/stm32f4xx_dma2d.c **** }
 1063              		.loc 1 475 1
 1064 004a 00BF     		nop
 1065 004c 0C37     		adds	r7, r7, #12
 1066              		.cfi_def_cfa_offset 4
 1067 004e BD46     		mov	sp, r7
 1068              		.cfi_def_cfa_register 13
 1069              		@ sp needed
 1070 0050 5DF8047B 		ldr	r7, [sp], #4
 1071              		.cfi_restore 7
 1072              		.cfi_def_cfa_offset 0
 1073 0054 7047     		bx	lr
 1074              		.cfi_endproc
 1075              	.LFE132:
 1077              		.section	.text.DMA2D_FGStart,"ax",%progbits
 1078              		.align	1
ARM GAS  /tmp/ccspMsk0.s 			page 28


 1079              		.global	DMA2D_FGStart
 1080              		.syntax unified
 1081              		.thumb
 1082              		.thumb_func
 1084              	DMA2D_FGStart:
 1085              	.LFB133:
 476:./Lib/Src/stm32f4xx_dma2d.c **** 
 477:./Lib/Src/stm32f4xx_dma2d.c **** /**
 478:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Start the automatic loading of the CLUT or abort the transfer.
 479:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  NewState: new state of the DMA2D peripheral.
 480:./Lib/Src/stm32f4xx_dma2d.c ****   *   This parameter can be: ENABLE or DISABLE.
 481:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 482:./Lib/Src/stm32f4xx_dma2d.c ****   */
 483:./Lib/Src/stm32f4xx_dma2d.c **** 
 484:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_FGStart(FunctionalState NewState) 
 485:./Lib/Src/stm32f4xx_dma2d.c **** {
 1086              		.loc 1 485 1
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 8
 1089              		@ frame_needed = 1, uses_anonymous_args = 0
 1090              		@ link register save eliminated.
 1091 0000 80B4     		push	{r7}
 1092              		.cfi_def_cfa_offset 4
 1093              		.cfi_offset 7, -4
 1094 0002 83B0     		sub	sp, sp, #12
 1095              		.cfi_def_cfa_offset 16
 1096 0004 00AF     		add	r7, sp, #0
 1097              		.cfi_def_cfa_register 7
 1098 0006 0346     		mov	r3, r0
 1099 0008 FB71     		strb	r3, [r7, #7]
 486:./Lib/Src/stm32f4xx_dma2d.c ****   /* Check the parameters */
 487:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 488:./Lib/Src/stm32f4xx_dma2d.c **** 
 489:./Lib/Src/stm32f4xx_dma2d.c ****   if (NewState != DISABLE)
 1100              		.loc 1 489 6
 1101 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1102 000c 002B     		cmp	r3, #0
 1103 000e 06D0     		beq	.L32
 490:./Lib/Src/stm32f4xx_dma2d.c ****   {
 491:./Lib/Src/stm32f4xx_dma2d.c ****     /* Start the automatic loading of the CLUT */
 492:./Lib/Src/stm32f4xx_dma2d.c ****     DMA2D->FGPFCCR |= DMA2D_FGPFCCR_START;
 1104              		.loc 1 492 10
 1105 0010 094B     		ldr	r3, .L35
 1106 0012 DB69     		ldr	r3, [r3, #28]
 1107 0014 084A     		ldr	r2, .L35
 1108              		.loc 1 492 20
 1109 0016 43F02003 		orr	r3, r3, #32
 1110 001a D361     		str	r3, [r2, #28]
 493:./Lib/Src/stm32f4xx_dma2d.c ****   }
 494:./Lib/Src/stm32f4xx_dma2d.c ****   else
 495:./Lib/Src/stm32f4xx_dma2d.c ****   {
 496:./Lib/Src/stm32f4xx_dma2d.c ****     /* abort the transfer */
 497:./Lib/Src/stm32f4xx_dma2d.c ****     DMA2D->FGPFCCR &= (uint32_t)~DMA2D_FGPFCCR_START;
 498:./Lib/Src/stm32f4xx_dma2d.c ****   }
 499:./Lib/Src/stm32f4xx_dma2d.c **** }
 1111              		.loc 1 499 1
 1112 001c 05E0     		b	.L34
ARM GAS  /tmp/ccspMsk0.s 			page 29


 1113              	.L32:
 497:./Lib/Src/stm32f4xx_dma2d.c ****   }
 1114              		.loc 1 497 10
 1115 001e 064B     		ldr	r3, .L35
 1116 0020 DB69     		ldr	r3, [r3, #28]
 1117 0022 054A     		ldr	r2, .L35
 497:./Lib/Src/stm32f4xx_dma2d.c ****   }
 1118              		.loc 1 497 20
 1119 0024 23F02003 		bic	r3, r3, #32
 1120 0028 D361     		str	r3, [r2, #28]
 1121              	.L34:
 1122              		.loc 1 499 1
 1123 002a 00BF     		nop
 1124 002c 0C37     		adds	r7, r7, #12
 1125              		.cfi_def_cfa_offset 4
 1126 002e BD46     		mov	sp, r7
 1127              		.cfi_def_cfa_register 13
 1128              		@ sp needed
 1129 0030 5DF8047B 		ldr	r7, [sp], #4
 1130              		.cfi_restore 7
 1131              		.cfi_def_cfa_offset 0
 1132 0034 7047     		bx	lr
 1133              	.L36:
 1134 0036 00BF     		.align	2
 1135              	.L35:
 1136 0038 00B00240 		.word	1073917952
 1137              		.cfi_endproc
 1138              	.LFE133:
 1140              		.section	.text.DMA2D_BGStart,"ax",%progbits
 1141              		.align	1
 1142              		.global	DMA2D_BGStart
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1147              	DMA2D_BGStart:
 1148              	.LFB134:
 500:./Lib/Src/stm32f4xx_dma2d.c **** 
 501:./Lib/Src/stm32f4xx_dma2d.c **** /**
 502:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Start the automatic loading of the CLUT or abort the transfer.
 503:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  NewState: new state of the DMA2D peripheral.
 504:./Lib/Src/stm32f4xx_dma2d.c ****   *   This parameter can be: ENABLE or DISABLE.
 505:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 506:./Lib/Src/stm32f4xx_dma2d.c ****   */
 507:./Lib/Src/stm32f4xx_dma2d.c ****   
 508:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_BGStart(FunctionalState NewState) 
 509:./Lib/Src/stm32f4xx_dma2d.c **** {
 1149              		.loc 1 509 1
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 8
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153              		@ link register save eliminated.
 1154 0000 80B4     		push	{r7}
 1155              		.cfi_def_cfa_offset 4
 1156              		.cfi_offset 7, -4
 1157 0002 83B0     		sub	sp, sp, #12
 1158              		.cfi_def_cfa_offset 16
 1159 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccspMsk0.s 			page 30


 1160              		.cfi_def_cfa_register 7
 1161 0006 0346     		mov	r3, r0
 1162 0008 FB71     		strb	r3, [r7, #7]
 510:./Lib/Src/stm32f4xx_dma2d.c ****   /* Check the parameters */
 511:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 512:./Lib/Src/stm32f4xx_dma2d.c ****   
 513:./Lib/Src/stm32f4xx_dma2d.c ****   if (NewState != DISABLE)
 1163              		.loc 1 513 6
 1164 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1165 000c 002B     		cmp	r3, #0
 1166 000e 06D0     		beq	.L38
 514:./Lib/Src/stm32f4xx_dma2d.c ****   {
 515:./Lib/Src/stm32f4xx_dma2d.c ****     /* Start the automatic loading of the CLUT */
 516:./Lib/Src/stm32f4xx_dma2d.c ****     DMA2D->BGPFCCR |= DMA2D_BGPFCCR_START;
 1167              		.loc 1 516 10
 1168 0010 094B     		ldr	r3, .L41
 1169 0012 5B6A     		ldr	r3, [r3, #36]
 1170 0014 084A     		ldr	r2, .L41
 1171              		.loc 1 516 20
 1172 0016 43F02003 		orr	r3, r3, #32
 1173 001a 5362     		str	r3, [r2, #36]
 517:./Lib/Src/stm32f4xx_dma2d.c ****   }
 518:./Lib/Src/stm32f4xx_dma2d.c ****   else
 519:./Lib/Src/stm32f4xx_dma2d.c ****   {
 520:./Lib/Src/stm32f4xx_dma2d.c ****     /* abort the transfer */
 521:./Lib/Src/stm32f4xx_dma2d.c ****     DMA2D->BGPFCCR &= (uint32_t)~DMA2D_BGPFCCR_START;
 522:./Lib/Src/stm32f4xx_dma2d.c ****   }
 523:./Lib/Src/stm32f4xx_dma2d.c **** }
 1174              		.loc 1 523 1
 1175 001c 05E0     		b	.L40
 1176              	.L38:
 521:./Lib/Src/stm32f4xx_dma2d.c ****   }
 1177              		.loc 1 521 10
 1178 001e 064B     		ldr	r3, .L41
 1179 0020 5B6A     		ldr	r3, [r3, #36]
 1180 0022 054A     		ldr	r2, .L41
 521:./Lib/Src/stm32f4xx_dma2d.c ****   }
 1181              		.loc 1 521 20
 1182 0024 23F02003 		bic	r3, r3, #32
 1183 0028 5362     		str	r3, [r2, #36]
 1184              	.L40:
 1185              		.loc 1 523 1
 1186 002a 00BF     		nop
 1187 002c 0C37     		adds	r7, r7, #12
 1188              		.cfi_def_cfa_offset 4
 1189 002e BD46     		mov	sp, r7
 1190              		.cfi_def_cfa_register 13
 1191              		@ sp needed
 1192 0030 5DF8047B 		ldr	r7, [sp], #4
 1193              		.cfi_restore 7
 1194              		.cfi_def_cfa_offset 0
 1195 0034 7047     		bx	lr
 1196              	.L42:
 1197 0036 00BF     		.align	2
 1198              	.L41:
 1199 0038 00B00240 		.word	1073917952
 1200              		.cfi_endproc
ARM GAS  /tmp/ccspMsk0.s 			page 31


 1201              	.LFE134:
 1203              		.section	.text.DMA2D_DeadTimeConfig,"ax",%progbits
 1204              		.align	1
 1205              		.global	DMA2D_DeadTimeConfig
 1206              		.syntax unified
 1207              		.thumb
 1208              		.thumb_func
 1210              	DMA2D_DeadTimeConfig:
 1211              	.LFB135:
 524:./Lib/Src/stm32f4xx_dma2d.c **** 
 525:./Lib/Src/stm32f4xx_dma2d.c **** /**
 526:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Configures the DMA2D dead time.
 527:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_DeadTime: specifies the DMA2D dead time.
 528:./Lib/Src/stm32f4xx_dma2d.c ****   *   This parameter can be one of the following values:
 529:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 530:./Lib/Src/stm32f4xx_dma2d.c ****   */
 531:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_DeadTimeConfig(uint32_t DMA2D_DeadTime, FunctionalState NewState)
 532:./Lib/Src/stm32f4xx_dma2d.c **** {
 1212              		.loc 1 532 1
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 16
 1215              		@ frame_needed = 1, uses_anonymous_args = 0
 1216              		@ link register save eliminated.
 1217 0000 80B4     		push	{r7}
 1218              		.cfi_def_cfa_offset 4
 1219              		.cfi_offset 7, -4
 1220 0002 85B0     		sub	sp, sp, #20
 1221              		.cfi_def_cfa_offset 24
 1222 0004 00AF     		add	r7, sp, #0
 1223              		.cfi_def_cfa_register 7
 1224 0006 7860     		str	r0, [r7, #4]
 1225 0008 0B46     		mov	r3, r1
 1226 000a FB70     		strb	r3, [r7, #3]
 533:./Lib/Src/stm32f4xx_dma2d.c ****    uint32_t DeadTime;
 534:./Lib/Src/stm32f4xx_dma2d.c **** 
 535:./Lib/Src/stm32f4xx_dma2d.c ****   /* Check the parameters */
 536:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_DEAD_TIME(DMA2D_DeadTime));
 537:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 538:./Lib/Src/stm32f4xx_dma2d.c **** 
 539:./Lib/Src/stm32f4xx_dma2d.c ****   if (NewState != DISABLE)
 1227              		.loc 1 539 6
 1228 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1229 000e 002B     		cmp	r3, #0
 1230 0010 13D0     		beq	.L44
 540:./Lib/Src/stm32f4xx_dma2d.c ****   {
 541:./Lib/Src/stm32f4xx_dma2d.c ****     /* Enable and Configures the dead time */
 542:./Lib/Src/stm32f4xx_dma2d.c ****     DMA2D->AMTCR &= (uint32_t)DEAD_MASK;
 1231              		.loc 1 542 10
 1232 0012 104B     		ldr	r3, .L47
 1233 0014 DB6C     		ldr	r3, [r3, #76]
 1234 0016 0F4A     		ldr	r2, .L47
 1235              		.loc 1 542 18
 1236 0018 23F47F43 		bic	r3, r3, #65280
 1237 001c 23F00103 		bic	r3, r3, #1
 1238 0020 D364     		str	r3, [r2, #76]
 543:./Lib/Src/stm32f4xx_dma2d.c ****     DeadTime = DMA2D_DeadTime << 8;
 1239              		.loc 1 543 14
ARM GAS  /tmp/ccspMsk0.s 			page 32


 1240 0022 7B68     		ldr	r3, [r7, #4]
 1241 0024 1B02     		lsls	r3, r3, #8
 1242 0026 FB60     		str	r3, [r7, #12]
 544:./Lib/Src/stm32f4xx_dma2d.c ****     DMA2D->AMTCR |= (DeadTime | DMA2D_AMTCR_EN);
 1243              		.loc 1 544 10
 1244 0028 0A4B     		ldr	r3, .L47
 1245 002a DA6C     		ldr	r2, [r3, #76]
 1246              		.loc 1 544 18
 1247 002c FB68     		ldr	r3, [r7, #12]
 1248 002e 1343     		orrs	r3, r3, r2
 1249              		.loc 1 544 10
 1250 0030 084A     		ldr	r2, .L47
 1251              		.loc 1 544 18
 1252 0032 43F00103 		orr	r3, r3, #1
 1253 0036 D364     		str	r3, [r2, #76]
 545:./Lib/Src/stm32f4xx_dma2d.c ****   }
 546:./Lib/Src/stm32f4xx_dma2d.c ****   else
 547:./Lib/Src/stm32f4xx_dma2d.c ****   {
 548:./Lib/Src/stm32f4xx_dma2d.c ****      DMA2D->AMTCR &= ~(uint32_t)DMA2D_AMTCR_EN;
 549:./Lib/Src/stm32f4xx_dma2d.c ****   }
 550:./Lib/Src/stm32f4xx_dma2d.c **** }
 1254              		.loc 1 550 1
 1255 0038 05E0     		b	.L46
 1256              	.L44:
 548:./Lib/Src/stm32f4xx_dma2d.c ****   }
 1257              		.loc 1 548 11
 1258 003a 064B     		ldr	r3, .L47
 1259 003c DB6C     		ldr	r3, [r3, #76]
 1260 003e 054A     		ldr	r2, .L47
 548:./Lib/Src/stm32f4xx_dma2d.c ****   }
 1261              		.loc 1 548 19
 1262 0040 23F00103 		bic	r3, r3, #1
 1263 0044 D364     		str	r3, [r2, #76]
 1264              	.L46:
 1265              		.loc 1 550 1
 1266 0046 00BF     		nop
 1267 0048 1437     		adds	r7, r7, #20
 1268              		.cfi_def_cfa_offset 4
 1269 004a BD46     		mov	sp, r7
 1270              		.cfi_def_cfa_register 13
 1271              		@ sp needed
 1272 004c 5DF8047B 		ldr	r7, [sp], #4
 1273              		.cfi_restore 7
 1274              		.cfi_def_cfa_offset 0
 1275 0050 7047     		bx	lr
 1276              	.L48:
 1277 0052 00BF     		.align	2
 1278              	.L47:
 1279 0054 00B00240 		.word	1073917952
 1280              		.cfi_endproc
 1281              	.LFE135:
 1283              		.section	.text.DMA2D_LineWatermarkConfig,"ax",%progbits
 1284              		.align	1
 1285              		.global	DMA2D_LineWatermarkConfig
 1286              		.syntax unified
 1287              		.thumb
 1288              		.thumb_func
ARM GAS  /tmp/ccspMsk0.s 			page 33


 1290              	DMA2D_LineWatermarkConfig:
 1291              	.LFB136:
 551:./Lib/Src/stm32f4xx_dma2d.c **** 
 552:./Lib/Src/stm32f4xx_dma2d.c **** /**
 553:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Define the configuration of the line watermark .
 554:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_LWatermarkConfig: Line Watermark configuration.
 555:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 556:./Lib/Src/stm32f4xx_dma2d.c ****   */
 557:./Lib/Src/stm32f4xx_dma2d.c **** 
 558:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_LineWatermarkConfig(uint32_t DMA2D_LWatermarkConfig)
 559:./Lib/Src/stm32f4xx_dma2d.c **** {
 1292              		.loc 1 559 1
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 8
 1295              		@ frame_needed = 1, uses_anonymous_args = 0
 1296              		@ link register save eliminated.
 1297 0000 80B4     		push	{r7}
 1298              		.cfi_def_cfa_offset 4
 1299              		.cfi_offset 7, -4
 1300 0002 83B0     		sub	sp, sp, #12
 1301              		.cfi_def_cfa_offset 16
 1302 0004 00AF     		add	r7, sp, #0
 1303              		.cfi_def_cfa_register 7
 1304 0006 7860     		str	r0, [r7, #4]
 560:./Lib/Src/stm32f4xx_dma2d.c ****   /* Check the parameters */
 561:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_LineWatermark(DMA2D_LWatermarkConfig));
 562:./Lib/Src/stm32f4xx_dma2d.c **** 
 563:./Lib/Src/stm32f4xx_dma2d.c ****   /* Sets the Line watermark configuration */
 564:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->LWR = (uint32_t)DMA2D_LWatermarkConfig;
 1305              		.loc 1 564 8
 1306 0008 044A     		ldr	r2, .L50
 1307              		.loc 1 564 14
 1308 000a 7B68     		ldr	r3, [r7, #4]
 1309 000c 9364     		str	r3, [r2, #72]
 565:./Lib/Src/stm32f4xx_dma2d.c **** }
 1310              		.loc 1 565 1
 1311 000e 00BF     		nop
 1312 0010 0C37     		adds	r7, r7, #12
 1313              		.cfi_def_cfa_offset 4
 1314 0012 BD46     		mov	sp, r7
 1315              		.cfi_def_cfa_register 13
 1316              		@ sp needed
 1317 0014 5DF8047B 		ldr	r7, [sp], #4
 1318              		.cfi_restore 7
 1319              		.cfi_def_cfa_offset 0
 1320 0018 7047     		bx	lr
 1321              	.L51:
 1322 001a 00BF     		.align	2
 1323              	.L50:
 1324 001c 00B00240 		.word	1073917952
 1325              		.cfi_endproc
 1326              	.LFE136:
 1328              		.section	.text.DMA2D_ITConfig,"ax",%progbits
 1329              		.align	1
 1330              		.global	DMA2D_ITConfig
 1331              		.syntax unified
 1332              		.thumb
ARM GAS  /tmp/ccspMsk0.s 			page 34


 1333              		.thumb_func
 1335              	DMA2D_ITConfig:
 1336              	.LFB137:
 566:./Lib/Src/stm32f4xx_dma2d.c **** 
 567:./Lib/Src/stm32f4xx_dma2d.c **** /**
 568:./Lib/Src/stm32f4xx_dma2d.c ****   * @}
 569:./Lib/Src/stm32f4xx_dma2d.c ****   */
 570:./Lib/Src/stm32f4xx_dma2d.c **** 
 571:./Lib/Src/stm32f4xx_dma2d.c **** /** @defgroup DMA2D_Group2 Interrupts and flags management functions
 572:./Lib/Src/stm32f4xx_dma2d.c ****  *  @brief   Interrupts and flags management functions
 573:./Lib/Src/stm32f4xx_dma2d.c ****  *
 574:./Lib/Src/stm32f4xx_dma2d.c **** @verbatim
 575:./Lib/Src/stm32f4xx_dma2d.c ****  ===============================================================================
 576:./Lib/Src/stm32f4xx_dma2d.c ****             ##### Interrupts and flags management functions #####
 577:./Lib/Src/stm32f4xx_dma2d.c ****  ===============================================================================
 578:./Lib/Src/stm32f4xx_dma2d.c **** 
 579:./Lib/Src/stm32f4xx_dma2d.c ****     [..] This section provides functions allowing to configure the DMA2D 
 580:./Lib/Src/stm32f4xx_dma2d.c ****          Interrupts and to get the status and clear flags and Interrupts 
 581:./Lib/Src/stm32f4xx_dma2d.c ****          pending bits.
 582:./Lib/Src/stm32f4xx_dma2d.c ****     [..] The DMA2D provides 6 Interrupts sources and 6 Flags
 583:./Lib/Src/stm32f4xx_dma2d.c ****     
 584:./Lib/Src/stm32f4xx_dma2d.c ****     *** Flags ***
 585:./Lib/Src/stm32f4xx_dma2d.c ****     =============
 586:./Lib/Src/stm32f4xx_dma2d.c ****     [..]
 587:./Lib/Src/stm32f4xx_dma2d.c ****       (+) DMA2D_FLAG_CE : Configuration Error Interrupt flag
 588:./Lib/Src/stm32f4xx_dma2d.c ****       (+) DMA2D_FLAG_CAE: CLUT Access Error Interrupt flag
 589:./Lib/Src/stm32f4xx_dma2d.c ****       (+) DMA2D_FLAG_TW:  Transfer Watermark Interrupt flag
 590:./Lib/Src/stm32f4xx_dma2d.c ****       (+) DMA2D_FLAG_TC:  Transfer Complete interrupt flag
 591:./Lib/Src/stm32f4xx_dma2d.c ****       (+) DMA2D_FLAG_TE:  Transfer Error interrupt flag
 592:./Lib/Src/stm32f4xx_dma2d.c ****       (+) DMA2D_FLAG_CTC: CLUT Transfer Complete Interrupt flag
 593:./Lib/Src/stm32f4xx_dma2d.c ****       
 594:./Lib/Src/stm32f4xx_dma2d.c ****     *** Interrupts ***
 595:./Lib/Src/stm32f4xx_dma2d.c ****     ==================
 596:./Lib/Src/stm32f4xx_dma2d.c ****     [..]
 597:./Lib/Src/stm32f4xx_dma2d.c ****       (+) DMA2D_IT_CE: Configuration Error Interrupt is generated when a wrong 
 598:./Lib/Src/stm32f4xx_dma2d.c ****                        configuration is detected
 599:./Lib/Src/stm32f4xx_dma2d.c ****       (+) DMA2D_IT_CAE: CLUT Access Error Interrupt
 600:./Lib/Src/stm32f4xx_dma2d.c ****       (+) DMA2D_IT_TW: Transfer Watermark Interrupt is generated when 
 601:./Lib/Src/stm32f4xx_dma2d.c ****                        the programmed watermark is reached 
 602:./Lib/Src/stm32f4xx_dma2d.c ****       (+) DMA2D_IT_TE: Transfer Error interrupt is generated when the CPU trying 
 603:./Lib/Src/stm32f4xx_dma2d.c ****                        to access the CLUT while a CLUT loading or a DMA2D1 transfer 
 604:./Lib/Src/stm32f4xx_dma2d.c ****                        is on going       
 605:./Lib/Src/stm32f4xx_dma2d.c ****       (+) DMA2D_IT_CTC: CLUT Transfer Complete Interrupt 
 606:./Lib/Src/stm32f4xx_dma2d.c ****       (+) DMA2D_IT_TC: Transfer Complete interrupt         
 607:./Lib/Src/stm32f4xx_dma2d.c **** @endverbatim
 608:./Lib/Src/stm32f4xx_dma2d.c ****   * @{
 609:./Lib/Src/stm32f4xx_dma2d.c ****   */
 610:./Lib/Src/stm32f4xx_dma2d.c **** /**
 611:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Enables or disables the specified DMA2D's interrupts.
 612:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_IT: specifies the DMA2D interrupts sources to be enabled or disabled.
 613:./Lib/Src/stm32f4xx_dma2d.c ****   *   This parameter can be any combination of the following values:
 614:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_CE:   Configuration Error Interrupt Enable.
 615:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_CTC:  CLUT Transfer Complete Interrupt Enable.
 616:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_CAE:  CLUT Access Error Interrupt Enable.
 617:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_TW:   Transfer Watermark Interrupt Enable.
 618:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_TC:   Transfer Complete interrupt enable.
 619:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_TE:   Transfer Error interrupt enable.
ARM GAS  /tmp/ccspMsk0.s 			page 35


 620:./Lib/Src/stm32f4xx_dma2d.c ****   * @param NewState: new state of the specified DMA2D interrupts.
 621:./Lib/Src/stm32f4xx_dma2d.c ****   *   This parameter can be: ENABLE or DISABLE.
 622:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 623:./Lib/Src/stm32f4xx_dma2d.c ****   */
 624:./Lib/Src/stm32f4xx_dma2d.c **** 
 625:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_ITConfig(uint32_t DMA2D_IT, FunctionalState NewState)
 626:./Lib/Src/stm32f4xx_dma2d.c **** {
 1337              		.loc 1 626 1
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 8
 1340              		@ frame_needed = 1, uses_anonymous_args = 0
 1341              		@ link register save eliminated.
 1342 0000 80B4     		push	{r7}
 1343              		.cfi_def_cfa_offset 4
 1344              		.cfi_offset 7, -4
 1345 0002 83B0     		sub	sp, sp, #12
 1346              		.cfi_def_cfa_offset 16
 1347 0004 00AF     		add	r7, sp, #0
 1348              		.cfi_def_cfa_register 7
 1349 0006 7860     		str	r0, [r7, #4]
 1350 0008 0B46     		mov	r3, r1
 1351 000a FB70     		strb	r3, [r7, #3]
 627:./Lib/Src/stm32f4xx_dma2d.c ****   /* Check the parameters */
 628:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_IT(DMA2D_IT));
 629:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 630:./Lib/Src/stm32f4xx_dma2d.c **** 
 631:./Lib/Src/stm32f4xx_dma2d.c ****   if (NewState != DISABLE)
 1352              		.loc 1 631 6
 1353 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1354 000e 002B     		cmp	r3, #0
 1355 0010 06D0     		beq	.L53
 632:./Lib/Src/stm32f4xx_dma2d.c ****   {
 633:./Lib/Src/stm32f4xx_dma2d.c ****     /* Enable the selected DMA2D interrupts */
 634:./Lib/Src/stm32f4xx_dma2d.c ****     DMA2D->CR |= DMA2D_IT;
 1356              		.loc 1 634 10
 1357 0012 0A4B     		ldr	r3, .L56
 1358 0014 1A68     		ldr	r2, [r3]
 1359 0016 0949     		ldr	r1, .L56
 1360              		.loc 1 634 15
 1361 0018 7B68     		ldr	r3, [r7, #4]
 1362 001a 1343     		orrs	r3, r3, r2
 1363 001c 0B60     		str	r3, [r1]
 635:./Lib/Src/stm32f4xx_dma2d.c ****   }
 636:./Lib/Src/stm32f4xx_dma2d.c ****   else
 637:./Lib/Src/stm32f4xx_dma2d.c ****   {
 638:./Lib/Src/stm32f4xx_dma2d.c ****     /* Disable the selected DMA2D interrupts */
 639:./Lib/Src/stm32f4xx_dma2d.c ****     DMA2D->CR &= (uint32_t)~DMA2D_IT;
 640:./Lib/Src/stm32f4xx_dma2d.c ****   }
 641:./Lib/Src/stm32f4xx_dma2d.c **** }
 1364              		.loc 1 641 1
 1365 001e 06E0     		b	.L55
 1366              	.L53:
 639:./Lib/Src/stm32f4xx_dma2d.c ****   }
 1367              		.loc 1 639 10
 1368 0020 064B     		ldr	r3, .L56
 1369 0022 1A68     		ldr	r2, [r3]
 639:./Lib/Src/stm32f4xx_dma2d.c ****   }
ARM GAS  /tmp/ccspMsk0.s 			page 36


 1370              		.loc 1 639 28
 1371 0024 7B68     		ldr	r3, [r7, #4]
 1372 0026 DB43     		mvns	r3, r3
 639:./Lib/Src/stm32f4xx_dma2d.c ****   }
 1373              		.loc 1 639 10
 1374 0028 0449     		ldr	r1, .L56
 639:./Lib/Src/stm32f4xx_dma2d.c ****   }
 1375              		.loc 1 639 15
 1376 002a 1340     		ands	r3, r3, r2
 1377 002c 0B60     		str	r3, [r1]
 1378              	.L55:
 1379              		.loc 1 641 1
 1380 002e 00BF     		nop
 1381 0030 0C37     		adds	r7, r7, #12
 1382              		.cfi_def_cfa_offset 4
 1383 0032 BD46     		mov	sp, r7
 1384              		.cfi_def_cfa_register 13
 1385              		@ sp needed
 1386 0034 5DF8047B 		ldr	r7, [sp], #4
 1387              		.cfi_restore 7
 1388              		.cfi_def_cfa_offset 0
 1389 0038 7047     		bx	lr
 1390              	.L57:
 1391 003a 00BF     		.align	2
 1392              	.L56:
 1393 003c 00B00240 		.word	1073917952
 1394              		.cfi_endproc
 1395              	.LFE137:
 1397              		.section	.text.DMA2D_GetFlagStatus,"ax",%progbits
 1398              		.align	1
 1399              		.global	DMA2D_GetFlagStatus
 1400              		.syntax unified
 1401              		.thumb
 1402              		.thumb_func
 1404              	DMA2D_GetFlagStatus:
 1405              	.LFB138:
 642:./Lib/Src/stm32f4xx_dma2d.c **** 
 643:./Lib/Src/stm32f4xx_dma2d.c **** /**
 644:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Checks whether the specified DMA2D's flag is set or not.
 645:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_FLAG: specifies the flag to check.
 646:./Lib/Src/stm32f4xx_dma2d.c ****   *   This parameter can be one of the following values:
 647:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_FLAG_CE:   Configuration Error Interrupt flag.
 648:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_FLAG_CTC:  CLUT Transfer Complete Interrupt flag.
 649:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_FLAG_CAE:  CLUT Access Error Interrupt flag.
 650:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_FLAG_TW:   Transfer Watermark Interrupt flag.
 651:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_FLAG_TC:   Transfer Complete interrupt flag.
 652:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_FLAG_TE:   Transfer Error interrupt flag.
 653:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval The new state of DMA2D_FLAG (SET or RESET).
 654:./Lib/Src/stm32f4xx_dma2d.c ****   */
 655:./Lib/Src/stm32f4xx_dma2d.c **** 
 656:./Lib/Src/stm32f4xx_dma2d.c **** FlagStatus DMA2D_GetFlagStatus(uint32_t DMA2D_FLAG)
 657:./Lib/Src/stm32f4xx_dma2d.c **** {
 1406              		.loc 1 657 1
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 16
 1409              		@ frame_needed = 1, uses_anonymous_args = 0
 1410              		@ link register save eliminated.
ARM GAS  /tmp/ccspMsk0.s 			page 37


 1411 0000 80B4     		push	{r7}
 1412              		.cfi_def_cfa_offset 4
 1413              		.cfi_offset 7, -4
 1414 0002 85B0     		sub	sp, sp, #20
 1415              		.cfi_def_cfa_offset 24
 1416 0004 00AF     		add	r7, sp, #0
 1417              		.cfi_def_cfa_register 7
 1418 0006 7860     		str	r0, [r7, #4]
 658:./Lib/Src/stm32f4xx_dma2d.c ****   FlagStatus bitstatus = RESET;
 1419              		.loc 1 658 14
 1420 0008 0023     		movs	r3, #0
 1421 000a FB73     		strb	r3, [r7, #15]
 659:./Lib/Src/stm32f4xx_dma2d.c ****   
 660:./Lib/Src/stm32f4xx_dma2d.c ****   /* Check the parameters */
 661:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_GET_FLAG(DMA2D_FLAG));
 662:./Lib/Src/stm32f4xx_dma2d.c ****   
 663:./Lib/Src/stm32f4xx_dma2d.c ****   /* Check the status of the specified DMA2D flag */
 664:./Lib/Src/stm32f4xx_dma2d.c ****   if (((DMA2D->ISR) & DMA2D_FLAG) != (uint32_t)RESET)
 1422              		.loc 1 664 14
 1423 000c 084B     		ldr	r3, .L62
 1424 000e 5A68     		ldr	r2, [r3, #4]
 1425              		.loc 1 664 21
 1426 0010 7B68     		ldr	r3, [r7, #4]
 1427 0012 1340     		ands	r3, r3, r2
 1428              		.loc 1 664 6
 1429 0014 002B     		cmp	r3, #0
 1430 0016 02D0     		beq	.L59
 665:./Lib/Src/stm32f4xx_dma2d.c ****   {
 666:./Lib/Src/stm32f4xx_dma2d.c ****     /* DMA2D_FLAG is set */
 667:./Lib/Src/stm32f4xx_dma2d.c ****     bitstatus = SET;
 1431              		.loc 1 667 15
 1432 0018 0123     		movs	r3, #1
 1433 001a FB73     		strb	r3, [r7, #15]
 1434 001c 01E0     		b	.L60
 1435              	.L59:
 668:./Lib/Src/stm32f4xx_dma2d.c ****   }
 669:./Lib/Src/stm32f4xx_dma2d.c ****   else
 670:./Lib/Src/stm32f4xx_dma2d.c ****   {
 671:./Lib/Src/stm32f4xx_dma2d.c ****     /* DMA2D_FLAG is reset */
 672:./Lib/Src/stm32f4xx_dma2d.c ****     bitstatus = RESET;
 1436              		.loc 1 672 15
 1437 001e 0023     		movs	r3, #0
 1438 0020 FB73     		strb	r3, [r7, #15]
 1439              	.L60:
 673:./Lib/Src/stm32f4xx_dma2d.c ****   }
 674:./Lib/Src/stm32f4xx_dma2d.c ****   /* Return the DMA2D_FLAG status */
 675:./Lib/Src/stm32f4xx_dma2d.c ****   return bitstatus;
 1440              		.loc 1 675 10
 1441 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 676:./Lib/Src/stm32f4xx_dma2d.c **** }
 1442              		.loc 1 676 1
 1443 0024 1846     		mov	r0, r3
 1444 0026 1437     		adds	r7, r7, #20
 1445              		.cfi_def_cfa_offset 4
 1446 0028 BD46     		mov	sp, r7
 1447              		.cfi_def_cfa_register 13
 1448              		@ sp needed
ARM GAS  /tmp/ccspMsk0.s 			page 38


 1449 002a 5DF8047B 		ldr	r7, [sp], #4
 1450              		.cfi_restore 7
 1451              		.cfi_def_cfa_offset 0
 1452 002e 7047     		bx	lr
 1453              	.L63:
 1454              		.align	2
 1455              	.L62:
 1456 0030 00B00240 		.word	1073917952
 1457              		.cfi_endproc
 1458              	.LFE138:
 1460              		.section	.text.DMA2D_ClearFlag,"ax",%progbits
 1461              		.align	1
 1462              		.global	DMA2D_ClearFlag
 1463              		.syntax unified
 1464              		.thumb
 1465              		.thumb_func
 1467              	DMA2D_ClearFlag:
 1468              	.LFB139:
 677:./Lib/Src/stm32f4xx_dma2d.c **** 
 678:./Lib/Src/stm32f4xx_dma2d.c **** /**
 679:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Clears the DMA2D's pending flags.
 680:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_FLAG: specifies the flag to clear.
 681:./Lib/Src/stm32f4xx_dma2d.c ****   *   This parameter can be any combination of the following values:
 682:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_FLAG_CE:   Configuration Error Interrupt flag.
 683:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_FLAG_CTC:  CLUT Transfer Complete Interrupt flag.
 684:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_FLAG_CAE:  CLUT Access Error Interrupt flag.
 685:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_FLAG_TW:   Transfer Watermark Interrupt flag.
 686:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_FLAG_TC:   Transfer Complete interrupt flag.
 687:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_FLAG_TE:   Transfer Error interrupt flag.
 688:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 689:./Lib/Src/stm32f4xx_dma2d.c ****   */
 690:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_ClearFlag(uint32_t DMA2D_FLAG)
 691:./Lib/Src/stm32f4xx_dma2d.c **** {
 1469              		.loc 1 691 1
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 8
 1472              		@ frame_needed = 1, uses_anonymous_args = 0
 1473              		@ link register save eliminated.
 1474 0000 80B4     		push	{r7}
 1475              		.cfi_def_cfa_offset 4
 1476              		.cfi_offset 7, -4
 1477 0002 83B0     		sub	sp, sp, #12
 1478              		.cfi_def_cfa_offset 16
 1479 0004 00AF     		add	r7, sp, #0
 1480              		.cfi_def_cfa_register 7
 1481 0006 7860     		str	r0, [r7, #4]
 692:./Lib/Src/stm32f4xx_dma2d.c ****   /* Check the parameters */
 693:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_GET_FLAG(DMA2D_FLAG));
 694:./Lib/Src/stm32f4xx_dma2d.c ****     
 695:./Lib/Src/stm32f4xx_dma2d.c ****   /* Clear the corresponding DMA2D flag */
 696:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->IFCR = (uint32_t)DMA2D_FLAG;
 1482              		.loc 1 696 8
 1483 0008 044A     		ldr	r2, .L65
 1484              		.loc 1 696 15
 1485 000a 7B68     		ldr	r3, [r7, #4]
 1486 000c 9360     		str	r3, [r2, #8]
 697:./Lib/Src/stm32f4xx_dma2d.c **** }
ARM GAS  /tmp/ccspMsk0.s 			page 39


 1487              		.loc 1 697 1
 1488 000e 00BF     		nop
 1489 0010 0C37     		adds	r7, r7, #12
 1490              		.cfi_def_cfa_offset 4
 1491 0012 BD46     		mov	sp, r7
 1492              		.cfi_def_cfa_register 13
 1493              		@ sp needed
 1494 0014 5DF8047B 		ldr	r7, [sp], #4
 1495              		.cfi_restore 7
 1496              		.cfi_def_cfa_offset 0
 1497 0018 7047     		bx	lr
 1498              	.L66:
 1499 001a 00BF     		.align	2
 1500              	.L65:
 1501 001c 00B00240 		.word	1073917952
 1502              		.cfi_endproc
 1503              	.LFE139:
 1505              		.section	.text.DMA2D_GetITStatus,"ax",%progbits
 1506              		.align	1
 1507              		.global	DMA2D_GetITStatus
 1508              		.syntax unified
 1509              		.thumb
 1510              		.thumb_func
 1512              	DMA2D_GetITStatus:
 1513              	.LFB140:
 698:./Lib/Src/stm32f4xx_dma2d.c **** 
 699:./Lib/Src/stm32f4xx_dma2d.c **** /**
 700:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Checks whether the specified DMA2D's interrupt has occurred or not.
 701:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_IT: specifies the DMA2D interrupts sources to check.
 702:./Lib/Src/stm32f4xx_dma2d.c ****   *   This parameter can be one of the following values:
 703:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_CE:   Configuration Error Interrupt Enable.
 704:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_CTC:  CLUT Transfer Complete Interrupt Enable.
 705:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_CAE:  CLUT Access Error Interrupt Enable.
 706:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_TW:   Transfer Watermark Interrupt Enable.
 707:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_TC:   Transfer Complete interrupt enable.
 708:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_TE:   Transfer Error interrupt enable.
 709:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval The new state of the DMA2D_IT (SET or RESET).
 710:./Lib/Src/stm32f4xx_dma2d.c ****   */
 711:./Lib/Src/stm32f4xx_dma2d.c **** ITStatus DMA2D_GetITStatus(uint32_t DMA2D_IT)
 712:./Lib/Src/stm32f4xx_dma2d.c **** {
 1514              		.loc 1 712 1
 1515              		.cfi_startproc
 1516              		@ args = 0, pretend = 0, frame = 16
 1517              		@ frame_needed = 1, uses_anonymous_args = 0
 1518              		@ link register save eliminated.
 1519 0000 80B4     		push	{r7}
 1520              		.cfi_def_cfa_offset 4
 1521              		.cfi_offset 7, -4
 1522 0002 85B0     		sub	sp, sp, #20
 1523              		.cfi_def_cfa_offset 24
 1524 0004 00AF     		add	r7, sp, #0
 1525              		.cfi_def_cfa_register 7
 1526 0006 7860     		str	r0, [r7, #4]
 713:./Lib/Src/stm32f4xx_dma2d.c ****   ITStatus bitstatus = RESET;
 1527              		.loc 1 713 12
 1528 0008 0023     		movs	r3, #0
 1529 000a FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccspMsk0.s 			page 40


 714:./Lib/Src/stm32f4xx_dma2d.c ****   uint32_t DMA2D_IT_FLAG = DMA2D_IT >> 8;
 1530              		.loc 1 714 12
 1531 000c 7B68     		ldr	r3, [r7, #4]
 1532 000e 1B0A     		lsrs	r3, r3, #8
 1533 0010 BB60     		str	r3, [r7, #8]
 715:./Lib/Src/stm32f4xx_dma2d.c ****   
 716:./Lib/Src/stm32f4xx_dma2d.c ****   /* Check the parameters */
 717:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_IT(DMA2D_IT));
 718:./Lib/Src/stm32f4xx_dma2d.c **** 
 719:./Lib/Src/stm32f4xx_dma2d.c ****   if ((DMA2D->ISR & DMA2D_IT_FLAG) != (uint32_t)RESET)
 1534              		.loc 1 719 13
 1535 0012 104B     		ldr	r3, .L73
 1536 0014 5A68     		ldr	r2, [r3, #4]
 1537              		.loc 1 719 19
 1538 0016 BB68     		ldr	r3, [r7, #8]
 1539 0018 1340     		ands	r3, r3, r2
 1540              		.loc 1 719 6
 1541 001a 002B     		cmp	r3, #0
 1542 001c 02D0     		beq	.L68
 720:./Lib/Src/stm32f4xx_dma2d.c ****   {
 721:./Lib/Src/stm32f4xx_dma2d.c ****     bitstatus = SET;
 1543              		.loc 1 721 15
 1544 001e 0123     		movs	r3, #1
 1545 0020 FB73     		strb	r3, [r7, #15]
 1546 0022 01E0     		b	.L69
 1547              	.L68:
 722:./Lib/Src/stm32f4xx_dma2d.c ****   }
 723:./Lib/Src/stm32f4xx_dma2d.c ****   else
 724:./Lib/Src/stm32f4xx_dma2d.c ****   {
 725:./Lib/Src/stm32f4xx_dma2d.c ****     bitstatus = RESET;
 1548              		.loc 1 725 15
 1549 0024 0023     		movs	r3, #0
 1550 0026 FB73     		strb	r3, [r7, #15]
 1551              	.L69:
 726:./Lib/Src/stm32f4xx_dma2d.c ****   }
 727:./Lib/Src/stm32f4xx_dma2d.c ****   
 728:./Lib/Src/stm32f4xx_dma2d.c ****   if (((DMA2D->CR & DMA2D_IT) != (uint32_t)RESET) && (bitstatus != (uint32_t)RESET))
 1552              		.loc 1 728 14
 1553 0028 0A4B     		ldr	r3, .L73
 1554 002a 1A68     		ldr	r2, [r3]
 1555              		.loc 1 728 19
 1556 002c 7B68     		ldr	r3, [r7, #4]
 1557 002e 1340     		ands	r3, r3, r2
 1558              		.loc 1 728 6
 1559 0030 002B     		cmp	r3, #0
 1560 0032 05D0     		beq	.L70
 1561              		.loc 1 728 51 discriminator 1
 1562 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1563 0036 002B     		cmp	r3, #0
 1564 0038 02D0     		beq	.L70
 729:./Lib/Src/stm32f4xx_dma2d.c ****   {
 730:./Lib/Src/stm32f4xx_dma2d.c ****     bitstatus = SET;
 1565              		.loc 1 730 15
 1566 003a 0123     		movs	r3, #1
 1567 003c FB73     		strb	r3, [r7, #15]
 1568 003e 01E0     		b	.L71
 1569              	.L70:
ARM GAS  /tmp/ccspMsk0.s 			page 41


 731:./Lib/Src/stm32f4xx_dma2d.c ****   }
 732:./Lib/Src/stm32f4xx_dma2d.c ****   else
 733:./Lib/Src/stm32f4xx_dma2d.c ****   {
 734:./Lib/Src/stm32f4xx_dma2d.c ****     bitstatus = RESET;
 1570              		.loc 1 734 15
 1571 0040 0023     		movs	r3, #0
 1572 0042 FB73     		strb	r3, [r7, #15]
 1573              	.L71:
 735:./Lib/Src/stm32f4xx_dma2d.c ****   }
 736:./Lib/Src/stm32f4xx_dma2d.c ****   return bitstatus;
 1574              		.loc 1 736 10
 1575 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 737:./Lib/Src/stm32f4xx_dma2d.c **** }
 1576              		.loc 1 737 1
 1577 0046 1846     		mov	r0, r3
 1578 0048 1437     		adds	r7, r7, #20
 1579              		.cfi_def_cfa_offset 4
 1580 004a BD46     		mov	sp, r7
 1581              		.cfi_def_cfa_register 13
 1582              		@ sp needed
 1583 004c 5DF8047B 		ldr	r7, [sp], #4
 1584              		.cfi_restore 7
 1585              		.cfi_def_cfa_offset 0
 1586 0050 7047     		bx	lr
 1587              	.L74:
 1588 0052 00BF     		.align	2
 1589              	.L73:
 1590 0054 00B00240 		.word	1073917952
 1591              		.cfi_endproc
 1592              	.LFE140:
 1594              		.section	.text.DMA2D_ClearITPendingBit,"ax",%progbits
 1595              		.align	1
 1596              		.global	DMA2D_ClearITPendingBit
 1597              		.syntax unified
 1598              		.thumb
 1599              		.thumb_func
 1601              	DMA2D_ClearITPendingBit:
 1602              	.LFB141:
 738:./Lib/Src/stm32f4xx_dma2d.c **** 
 739:./Lib/Src/stm32f4xx_dma2d.c **** /**
 740:./Lib/Src/stm32f4xx_dma2d.c ****   * @brief  Clears the DMA2D's interrupt pending bits.
 741:./Lib/Src/stm32f4xx_dma2d.c ****   * @param  DMA2D_IT: specifies the interrupt pending bit to clear.
 742:./Lib/Src/stm32f4xx_dma2d.c ****   *   This parameter can be any combination of the following values:
 743:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_CE:   Configuration Error Interrupt.
 744:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_CTC:  CLUT Transfer Complete Interrupt.
 745:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_CAE:  CLUT Access Error Interrupt.
 746:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_TW:   Transfer Watermark Interrupt.
 747:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_TC:   Transfer Complete interrupt.
 748:./Lib/Src/stm32f4xx_dma2d.c ****   *     @arg DMA2D_IT_TE:   Transfer Error interrupt.
 749:./Lib/Src/stm32f4xx_dma2d.c ****   * @retval None
 750:./Lib/Src/stm32f4xx_dma2d.c ****   */
 751:./Lib/Src/stm32f4xx_dma2d.c **** void DMA2D_ClearITPendingBit(uint32_t DMA2D_IT)
 752:./Lib/Src/stm32f4xx_dma2d.c **** {
 1603              		.loc 1 752 1
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 8
 1606              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccspMsk0.s 			page 42


 1607              		@ link register save eliminated.
 1608 0000 80B4     		push	{r7}
 1609              		.cfi_def_cfa_offset 4
 1610              		.cfi_offset 7, -4
 1611 0002 83B0     		sub	sp, sp, #12
 1612              		.cfi_def_cfa_offset 16
 1613 0004 00AF     		add	r7, sp, #0
 1614              		.cfi_def_cfa_register 7
 1615 0006 7860     		str	r0, [r7, #4]
 753:./Lib/Src/stm32f4xx_dma2d.c ****   /* Check the parameters */
 754:./Lib/Src/stm32f4xx_dma2d.c ****   assert_param(IS_DMA2D_IT(DMA2D_IT));
 755:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D_IT = DMA2D_IT >> 8;
 1616              		.loc 1 755 12
 1617 0008 7B68     		ldr	r3, [r7, #4]
 1618 000a 1B0A     		lsrs	r3, r3, #8
 1619 000c 7B60     		str	r3, [r7, #4]
 756:./Lib/Src/stm32f4xx_dma2d.c ****     
 757:./Lib/Src/stm32f4xx_dma2d.c ****   /* Clear the corresponding DMA2D Interrupt */
 758:./Lib/Src/stm32f4xx_dma2d.c ****   DMA2D->IFCR = (uint32_t)DMA2D_IT;
 1620              		.loc 1 758 8
 1621 000e 044A     		ldr	r2, .L76
 1622              		.loc 1 758 15
 1623 0010 7B68     		ldr	r3, [r7, #4]
 1624 0012 9360     		str	r3, [r2, #8]
 759:./Lib/Src/stm32f4xx_dma2d.c **** }
 1625              		.loc 1 759 1
 1626 0014 00BF     		nop
 1627 0016 0C37     		adds	r7, r7, #12
 1628              		.cfi_def_cfa_offset 4
 1629 0018 BD46     		mov	sp, r7
 1630              		.cfi_def_cfa_register 13
 1631              		@ sp needed
 1632 001a 5DF8047B 		ldr	r7, [sp], #4
 1633              		.cfi_restore 7
 1634              		.cfi_def_cfa_offset 0
 1635 001e 7047     		bx	lr
 1636              	.L77:
 1637              		.align	2
 1638              	.L76:
 1639 0020 00B00240 		.word	1073917952
 1640              		.cfi_endproc
 1641              	.LFE141:
 1643              		.text
 1644              	.Letext0:
 1645              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 1646              		.file 3 "./Start/stm32f4xx.h"
 1647              		.file 4 "./Lib/inc/stm32f4xx_dma2d.h"
 1648              		.file 5 "./Lib/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccspMsk0.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_dma2d.c
     /tmp/ccspMsk0.s:21     .text.DMA2D_DeInit:0000000000000000 $t
     /tmp/ccspMsk0.s:27     .text.DMA2D_DeInit:0000000000000000 DMA2D_DeInit
     /tmp/ccspMsk0.s:54     .text.DMA2D_Init:0000000000000000 $t
     /tmp/ccspMsk0.s:60     .text.DMA2D_Init:0000000000000000 DMA2D_Init
     /tmp/ccspMsk0.s:324    .text.DMA2D_Init:0000000000000154 $d
     /tmp/ccspMsk0.s:329    .text.DMA2D_StructInit:0000000000000000 $t
     /tmp/ccspMsk0.s:335    .text.DMA2D_StructInit:0000000000000000 DMA2D_StructInit
     /tmp/ccspMsk0.s:405    .text.DMA2D_StartTransfer:0000000000000000 $t
     /tmp/ccspMsk0.s:411    .text.DMA2D_StartTransfer:0000000000000000 DMA2D_StartTransfer
     /tmp/ccspMsk0.s:442    .text.DMA2D_StartTransfer:000000000000001c $d
     /tmp/ccspMsk0.s:447    .text.DMA2D_AbortTransfer:0000000000000000 $t
     /tmp/ccspMsk0.s:453    .text.DMA2D_AbortTransfer:0000000000000000 DMA2D_AbortTransfer
     /tmp/ccspMsk0.s:484    .text.DMA2D_AbortTransfer:000000000000001c $d
     /tmp/ccspMsk0.s:489    .text.DMA2D_Suspend:0000000000000000 $t
     /tmp/ccspMsk0.s:495    .text.DMA2D_Suspend:0000000000000000 DMA2D_Suspend
     /tmp/ccspMsk0.s:547    .text.DMA2D_Suspend:0000000000000038 $d
     /tmp/ccspMsk0.s:552    .text.DMA2D_FGConfig:0000000000000000 $t
     /tmp/ccspMsk0.s:558    .text.DMA2D_FGConfig:0000000000000000 DMA2D_FGConfig
     /tmp/ccspMsk0.s:729    .text.DMA2D_FGConfig:00000000000000d8 $d
     /tmp/ccspMsk0.s:735    .text.DMA2D_FG_StructInit:0000000000000000 $t
     /tmp/ccspMsk0.s:741    .text.DMA2D_FG_StructInit:0000000000000000 DMA2D_FG_StructInit
     /tmp/ccspMsk0.s:815    .text.DMA2D_BGConfig:0000000000000000 $t
     /tmp/ccspMsk0.s:821    .text.DMA2D_BGConfig:0000000000000000 DMA2D_BGConfig
     /tmp/ccspMsk0.s:992    .text.DMA2D_BGConfig:00000000000000d8 $d
     /tmp/ccspMsk0.s:998    .text.DMA2D_BG_StructInit:0000000000000000 $t
     /tmp/ccspMsk0.s:1004   .text.DMA2D_BG_StructInit:0000000000000000 DMA2D_BG_StructInit
     /tmp/ccspMsk0.s:1078   .text.DMA2D_FGStart:0000000000000000 $t
     /tmp/ccspMsk0.s:1084   .text.DMA2D_FGStart:0000000000000000 DMA2D_FGStart
     /tmp/ccspMsk0.s:1136   .text.DMA2D_FGStart:0000000000000038 $d
     /tmp/ccspMsk0.s:1141   .text.DMA2D_BGStart:0000000000000000 $t
     /tmp/ccspMsk0.s:1147   .text.DMA2D_BGStart:0000000000000000 DMA2D_BGStart
     /tmp/ccspMsk0.s:1199   .text.DMA2D_BGStart:0000000000000038 $d
     /tmp/ccspMsk0.s:1204   .text.DMA2D_DeadTimeConfig:0000000000000000 $t
     /tmp/ccspMsk0.s:1210   .text.DMA2D_DeadTimeConfig:0000000000000000 DMA2D_DeadTimeConfig
     /tmp/ccspMsk0.s:1279   .text.DMA2D_DeadTimeConfig:0000000000000054 $d
     /tmp/ccspMsk0.s:1284   .text.DMA2D_LineWatermarkConfig:0000000000000000 $t
     /tmp/ccspMsk0.s:1290   .text.DMA2D_LineWatermarkConfig:0000000000000000 DMA2D_LineWatermarkConfig
     /tmp/ccspMsk0.s:1324   .text.DMA2D_LineWatermarkConfig:000000000000001c $d
     /tmp/ccspMsk0.s:1329   .text.DMA2D_ITConfig:0000000000000000 $t
     /tmp/ccspMsk0.s:1335   .text.DMA2D_ITConfig:0000000000000000 DMA2D_ITConfig
     /tmp/ccspMsk0.s:1393   .text.DMA2D_ITConfig:000000000000003c $d
     /tmp/ccspMsk0.s:1398   .text.DMA2D_GetFlagStatus:0000000000000000 $t
     /tmp/ccspMsk0.s:1404   .text.DMA2D_GetFlagStatus:0000000000000000 DMA2D_GetFlagStatus
     /tmp/ccspMsk0.s:1456   .text.DMA2D_GetFlagStatus:0000000000000030 $d
     /tmp/ccspMsk0.s:1461   .text.DMA2D_ClearFlag:0000000000000000 $t
     /tmp/ccspMsk0.s:1467   .text.DMA2D_ClearFlag:0000000000000000 DMA2D_ClearFlag
     /tmp/ccspMsk0.s:1501   .text.DMA2D_ClearFlag:000000000000001c $d
     /tmp/ccspMsk0.s:1506   .text.DMA2D_GetITStatus:0000000000000000 $t
     /tmp/ccspMsk0.s:1512   .text.DMA2D_GetITStatus:0000000000000000 DMA2D_GetITStatus
     /tmp/ccspMsk0.s:1590   .text.DMA2D_GetITStatus:0000000000000054 $d
     /tmp/ccspMsk0.s:1595   .text.DMA2D_ClearITPendingBit:0000000000000000 $t
     /tmp/ccspMsk0.s:1601   .text.DMA2D_ClearITPendingBit:0000000000000000 DMA2D_ClearITPendingBit
     /tmp/ccspMsk0.s:1639   .text.DMA2D_ClearITPendingBit:0000000000000020 $d

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccspMsk0.s 			page 44


RCC_AHB1PeriphResetCmd
